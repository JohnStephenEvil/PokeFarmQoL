// ==UserScript==
// @name         Poké Farm QoL
// @namespace    https://github.com/tarashia/
// @author       Bentomon, ECEInTheHole, Tarashia (Mirzam)
// @homepageURL  https://github.com/tarashia/PokeFarmQoL
// @downloadURL  https://github.com/tarashia/PokeFarmQoL/raw/master/Poke-Farm-QoL.user.js
// @updateURL    https://github.com/tarashia/PokeFarmQoL/raw/master/Poke-Farm-QoL.user.js
// @description  Quality of Life changes to Pokéfarm!
// @version      1.7.1
// @match        https://pokefarm.com/*
// @require      http://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js
// @require      https://cdn.jsdelivr.net/npm/less
// ==/UserScript==

class Page{constructor(e,t,i,s,o,a,r){this.jQuery=e,this.localStorageMgr=t,this.helpers=i,this.settingsSaveKey=s,this.defaultSettings=o,this.url=a,this.settings=this.defaultSettings,this.globalSettings=r}onPage(e){return-1!=e.location.href.indexOf("pokefarm.com/"+this.url)}loadSettings(){this.settings=this.localStorageMgr.loadSettings(this.jQuery,this.settingsSaveKey,this.defaultSettings,this.settings)}saveSettings(){this.localStorageMgr.saveSettings(this.settingsSaveKey,this.settings)}populateSettings(e){for(const i in e=void 0===e?this.settings:e){var t;Object.prototype.hasOwnProperty.call(e,i)&&("object"==typeof(t=e[i])?this.populateSettings(e[i]):"boolean"==typeof t?this.helpers.toggleSetting(i,t):"string"==typeof t&&console.log("TODO - split and populate"))}}resetSettings(){this.settings=JSON.parse(JSON.stringify(this.defaultSettings)),this.saveSettings()}settingsChange(t,i,s,o,a){if(0<=JSON.stringify(this.settings).indexOf(t)){if("boolean"==typeof this.settings[t])this.settings[t]=!this.settings[t];else if("string"==typeof this.settings[t])if(void 0!==a&&""!==a)if("none"===i){var e=o-1;this[a].splice(e,e),this.settings[t]=this[a].toString()}else{let e=-1;void 0!==o?e=o-1:void 0!==s&&(e=s-1),this[a][e]=i,this.settings[t]=this[a].toString()}else this.settings[t]=i;return!0}return!1}setupHTML(){}setupCSS(){}setupObserver(){}setupHandlers(){}}class DaycarePage extends Page{constructor(e,t,i,s){super(e,t,i,s.DAYCARE_PAGE_SETTINGS_KEY,{},"daycare");const o=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){var t=o.jQuery("#fs_pokemon");0<t.length&&o.jQuery.contains(t[0],e.target)&&o.customSearch(s)})})}setupObserver(){this.observer.observe(document.querySelector("body"),{childList:!0,subtree:!0})}customSearch(e){var t=this,i=document.querySelector("#pkmnadd");let s=null,o=null,a=null;null!==i&&(void 0!==i.attributes["data-gender"]&&(s=i.attributes["data-gender"].value),void 0!==i.attributes["data-egggroup"]&&15<(o=parseInt(i.attributes["data-egggroup"].value))&&(a=15&o,o>>=4));i=e.EGG_GROUP_LIST;if(null!==o&&(o=i[o]),null!==a&&(a=i[a]),t.jQuery(".daycarefoundme").removeClass("daycarefoundme"),null!==s&&null!==o){var r=document.querySelectorAll(".fieldmon");if(null!==r)for(let e=0;e<r.length;e++){var l=r[e],n=t.jQuery(l)[0].childNodes[0],c=n.alt;const u=t.jQuery(l).next();l=u[0].querySelector(".fieldmontip");const h=t.jQuery(l).children(":contains(Species)")[0];l=t.jQuery(l).children(":contains(Egg Group)")[0];const p=h.querySelector("span").querySelectorAll("img");var d=p[0].title.toLowerCase().substring(1,2);const g=t.jQuery(l).text().slice("Egg Group: ".length).split("/");if("d"===s&&"Ditto"===o&&"Ditto"!==c&&"Undiscovered"!==g[0])t.jQuery(n).addClass("daycarefoundme");else if("Ditto"!==o&&"Ditto"===c&&"Undiscovered"!==o)t.jQuery(n).addClass("daycarefoundme");else{l="f"===s&&"m"===d||"m"===s&&"f"===d,c=g.reduce((e,t)=>e=e||o===t,!1);let e=!1;null!==a&&(e=g.reduce((e,t)=>e=e||a===t,!1)),l&&(c||e)&&t.jQuery(n).addClass("daycarefoundme")}}}}}class DexPage extends Page{constructor(e,t,i,s){super(e,t,i,s.DEX_PAGE_SETTINGS_KEY,{},"dex");const o=this;if(this.observer=new MutationObserver(function(e){e.forEach(function(e){o.applyTypeFilters()})}),this.typeArray=[],e("script#dexdata")&&e("script#dexdata").text()){const a=e("script#dexdata").text();s.DEX_DATA=a.split(","),this.localStorageMgr.updateLocalStorageDex(this.jQuery,document,void 0,s)}}setupObserver(){this.observer.observe(document.querySelector("#regionslist"),{childList:!0,subtree:!0})}setupHTML(){const e=document.querySelector(".filter-type");var t=e.cloneNode(!0);e.parentNode.appendChild(t),this.jQuery(t).addClass("filter-type-2")}setupHandlers(){const o=this;let a=o.jQuery.parseJSON(o.jQuery("#dexdata").html());const e=o.jQuery(".filter-type-2"),t=o.jQuery(".filter-type-2 .types"),r=t.children(),l=o.jQuery(".filter-type-2 .types");e.on("mousedown.dextfilter touchstart.dextfilter",function(e){e.preventDefault();var t=l.offset().left,i=l.width();let s=(e.originalEvent.touches?e.originalEvent.touches[0]:e).pageX;s>=t&s<t+i?(s-=t,s=Math.floor(s/i*r.length),(s=r.eq(s)).data("type")==a?(a=null,o.toggleSelectedTypes()):(a=s.data("type"),o.toggleSelectedTypes(s))):o.toggleSelectedTypes(),o.applyTypeFilters()})}toggleSelectedTypes(e){const t=this.jQuery(".filter-type-2 .name i"),i=this.jQuery(".filter-type-2 .types"),s=i.children();i.addClass("selected"),s.removeClass("selected"),e&&e.length&&!e.hasClass("selected")?(e.addClass("selected"),t.text(e.data("type").charAt(0).toUpperCase()+e.data("type").slice(1))):(i.removeClass("selected"),t.text(""))}applyTypeFilters(){const e=this.jQuery(".entry.filter-type:not(.filter-type-2) .types"),t=this.jQuery(".entry.filter-type-2 .types"),i=e.children(),s=t.children();var o=i.filter(".selected").data("type"),a=s.filter(".selected").data("type");let r=".region-entries>li.entry";void 0!==o&&(r+=".t-"+o),void 0!==a&&(r+=".t-"+a),(o||a)&&this.jQuery(".region-entries>li.entry").css("display","none"),this.jQuery(r).css("display","inline-block")}}class FarmPage extends Page{DEFAULT_SETTINGS(t){const i={TYPE_APPEND:{}};for(let e=0;e<t.TYPE_LIST.length;e++){const s=t.TYPE_LIST[e];i.TYPE_APPEND[s.toUpperCase()]=""+e}return i.TYPE_APPEND.NONE="."+t.TYPE_LIST.length,i.KNOWN_EXCEPTIONS={"Gastrodon [Occident]":["2","8"],"Gastrodon [Orient]":["2","8"],"Wormadam [Plant Cloak]":["11","4"],"Wormadam [Trash Cloak]":["11","16"],"Wormadam [Sandy Cloak]":["11","8"],"Raticate [Alolan Forme]":["15","0"],"Ninetales [Alolan Forme]":["5","17"],"Exeggutor [Alolan Forme]":["4","14"],"Marowak [Alolan Forme]":["1","13"],"Dugtrio [Alolan Forme]":["8","16"],"Graveler [Alolan Forme]":["12","3"],"Golem [Alolan Forme]":["12","3"],"Muk [Alolan Forme]":["7","15"],"Raichu [Alolan Forme]":["3","10"],"Linoone [Galarian Forme]":["15","0"],"Gourgeist [Small Size]":["13","4"],"Gourgeist [Average Size]":["13","4"],"Gourgeist [Large Size]":["13","4"],"Gourgeist [Super Size]":["13","4"],"Persian [Alolan Forme]":["15"]},i}constructor(e,t,i,s){super(e,t,i,s.FARM_PAGE_SETTINGS_KEY,{},"farm#tab=1"),this.defaultSettings=this.DEFAULT_SETTINGS(s),this.settings=this.defaultSettings,this.evolveListCache="";const o=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){o.easyQuickEvolve()})})}setupHTML(){const e=this;this.jQuery(document).ready(function(){e.jQuery("#farmnews-evolutions>.scrollable>ul").addClass("evolvepkmnlist"),document.querySelector("#farm-evolve>h3").insertAdjacentHTML("afterend",'<label id="qolevolvenormal"><input type="button" class="qolsortnormal" value="Normal list"></label> <label id="qolchangesletype"><input type="button" class="qolsorttype" value="Sort on types"></label> <label id="qolsortevolvename"><input type="button" class="qolsortname" value="Sort on name"></label> <label id="qolevolvenew"><input type="button" class="qolsortnew" value="New dex entry"></label>'),e.jQuery("#farmnews-evolutions>p>label>input").addClass("qolquickevo")})}setupObserver(){this.observer.observe(document.querySelector("#farmnews-evolutions"),{childList:!0,characterdata:!0,subtree:!0,characterDataOldValue:!0})}setupHandlers(e){const t=this;t.jQuery(document).on("click","#qolevolvenormal",function(){t.easyEvolveNormalList(e)}),t.jQuery(document).on("click","#qolchangesletype",function(){t.easyEvolveTypeList(e)}),t.jQuery(document).on("click","#qolsortevolvename",function(){t.easyEvolveNameList(e)}),t.jQuery(document).on("click","#qolevolvenew",function(){t.easyEvolveNewList(e)})}clearSortedEvolveLists(){const e=this.jQuery(".evolvepkmnlist");e.show(),e.removeAttr("class"),document.querySelector(".qolEvolveTypeList")&&document.querySelector(".qolEvolveTypeList").remove(),document.querySelector(".qolEvolveNameList")&&document.querySelector(".qolEvolveNameList").remove(),document.querySelector(".qolEvolveNewList")&&document.querySelector(".qolEvolveNewList").remove()}easyEvolveNormalList(){this.clearSortedEvolveLists()}easyEvolveNameList(){const n=this;this.clearSortedEvolveLists(),this.jQuery("#farmnews-evolutions>.scrollable>ul").addClass("evolvepkmnlist"),document.querySelector("#farmnews-evolutions>.scrollable").insertAdjacentHTML("afterbegin",'<ul class="qolEvolveNameList">');let c=!1;var e,t,i;this.jQuery("#farmnews-evolutions>.scrollable>.evolvepkmnlist>Li").each(function(e){const o=n.jQuery(this).html();if(void 0===o||""===o)console.error("Unable to parse html from <li> at index "+e),c=!0;else{let s=n.jQuery(this).children().children().text().slice(0,-6);if(void 0===s||""===s)console.error("Unable to parse pokemon-evolving-from from <li> at index "+e),c=!0;else{let t=(s=s.trim()).match(/\s{2,}/g);for(;t;){for(let e=t.length-1;0<=e;e--){var a=t[e];s=s.replace(a," ")}t=s.match(/\s{2,}/g)}let i=o.substr(o.indexOf("into</span> ")+12);if(void 0===i||""===i)console.error("Unable to parse pokemon-evolving-to from <li> at index "+e),c=!0;else{for(i=i.trim(),t=i.match(/\s{2,}/g);t;){for(let e=t.length-1;0<=e;e--){var r=t[e];i=i.replace(r," ")}t=i.match(/\s{2,}/g)}var l=i.replace(/ /g,"_").replace("[","").replace("]","").replace(/\./g,"");void 0===l||""===l?(console.error("Unable to create valid CSS class for pokemon-evolving-to from <li> at index "+e),c=!0):(!1===n.jQuery("#farmnews-evolutions>.scrollable>.qolEvolveNameList>Li>Ul").hasClass(l)&&document.querySelector(".qolEvolveNameList").insertAdjacentHTML("beforeend",'<li class="expandlist"><h3 class="slidermenu">'+s+" > "+i+'</h3><ul class="'+l+' qolChangeLogContent"></ul></li><br>'),n.jQuery(this).clone().appendTo("."+l))}}}}),c?window.alert("Error occurred while sorting pokemon by name"):(n.jQuery("#farmnews-evolutions>.scrollable>.qolEvolveNameList>Li").each(function(e){var t,i,s=n.jQuery(this).children().children().length;if(0===s)console.error(`Found 0 evolutions for <li> at ${e} of evolve name list`),c=!0;else{const o=n.jQuery(this).children().children().html();void 0===o||""===o?(console.error(`Unable to parse evolve string from <li> at ${e} from evolve name list`),c=!0):void 0===(t=n.jQuery(this).children().children().children().children().first().text())||""===t?(console.error(`Unable to parse pokemon-evolving-from from <li> at ${e} from evolve name list`),c=!0):void 0===(i=o.substr(o.indexOf("into</span> ")+"into</span> ".length))||""===i?(console.error(`Unable to parse pokemon-evolving-to from <li> at ${e} from evolve name list`),c=!0):n.jQuery(this).children(".slidermenu").html(t+" > "+i+" ("+s+")")}}),n.jQuery(".evolvepkmnlist").hide(),c?window.alert("Error occurred while sorting pokemon by name"):(t=n.jQuery(".panel>h3").css("background-color"),i=n.jQuery(".panel>h3").css("border"),e=n.jQuery(".panel>h3").css("color"),n.jQuery(".expandlist").css("background-color",""+t),n.jQuery(".expandlist").css("border",""+i),n.jQuery(".expandlist").css("color",""+e),t=n.jQuery(".tabbed_interface>div").css("background-color"),i=n.jQuery(".tabbed_interface>div").css("color"),n.jQuery(".qolChangeLogContent").css("background-color",""+t),n.jQuery(".qolChangeLogContent").css("color",""+i)))}easyEvolveNewList(e){const z=this,$=e.DEX_DATA,W=(this.clearSortedEvolveLists(),this.jQuery("#farmnews-evolutions>.scrollable>ul").addClass("evolvepkmnlist"),document.querySelector("#farmnews-evolutions>.scrollable").insertAdjacentHTML("afterbegin",'<ul class="qolEvolveNewList">'),e=>{e=$.indexOf('"'+e+'"');const t=-1<e&&$.length>e+9?$.slice(e+5,e+10):[void 0,void 0,void 0,void 0,void 0];return void 0!==t[4]&&(t[4]=t[4].replace("]","")),t}),V=(e,t,i,s,o)=>{!1===e("#farmnews-evolutions>.scrollable>.qolEvolveNewList>Li>Ul").hasClass(t)&&(i='<li class="expandlist">'+`<h3 class="slidermenu">${i}</h3>`+`<ul class="${t} qolChangeLogContent"></ul></li><br>`,document.querySelector(".qolEvolveNewList").insertAdjacentHTML("beforeend",i)),0==e(`#farmnews-evolutions>.scrollable>.qolEvolveNewList>Li>.${t}>li:contains(${s})`).length&&e(o).clone().appendTo("."+t)};this.jQuery("#farmnews-evolutions>.scrollable>.evolvepkmnlist>Li").each(function(){const e=z.jQuery(this).html();let t=!0,i=!1,s=!1,o=!1,a=(e.includes('title="[SHINY]')&&(i=!0,t=!1),e.includes('title="[ALBINO]')&&(s=!0,t=!1),e.includes('title="[MELANISTIC]')&&(o=!0,t=!1),e.substr(e.indexOf("into</span> ")+"into</span>".length).trim()),r=a.match(/\s{2,}/g);for(;r;){for(let e=r.length-1;0<=e;e--){var l=r[e];a=a.replace(l," ")}r=a.match(/\s{2,}/g)}var n=-1!=$.indexOf('"'+a+'"'),[c,d,u,h,p]=W(a),[g,y,m,b,f,S]=a.split(" "),[v,k]=W(g),T=(g+"/"+y).replace("[","").replace("]",""),[Q,E,x,j,_]=W(T),A=(g+"/"+y+" "+m).replace("[","").replace("]",""),[P,C,N,H,O]=W(A),L=(g+"/"+y+" "+m+" "+b).replace("[","").replace("]",""),[F,M,D,I,B]=W(L),q=(g+"/"+y+" "+m+" "+b+" "+f).replace("[","").replace("]",""),[w,G,R,K,U]=W(q),y=(g+"/"+y+" "+m+" "+b+" "+f+" "+S).replace("[","").replace("]",""),[m,b,f,S,Y]=W(y);n?1==t?0==k?V(z.jQuery,"newpokedexentry","New Pokédex entry",a,this):d<c&&0<d&&V(z.jQuery,"newpossiblepokedexentry","Possible Mega/Totem forme",a,this):1==i?0==u?V(z.jQuery,"newshinypokedexentry","New Shiny Pokédex entry",a,this):u<c&&0<u&&V(z.jQuery,"newpossibleshinypokedexentry","Possible Shiny Mega/Totem forme",a,this):1==s?0==h?V(z.jQuery,"newalbinopokedexentry","New Albino Pokédex entry",a,this):h<c&&0<h&&V(z.jQuery,"newpossiblealbinopokedexentry","Possible Albino Mega/Totem forme",a,this):1==o&&(0==p?V(z.jQuery,"newmelanisticpokedexentry","New Melanistic Pokédex entry",a,this):p<c&&0<p&&V(z.jQuery,"newpossiblemelanisticpokedexentry","Possible Melanistic Mega/Totem forme",a,this)):1==t?0==E||0==C||0==M||0==G||0==b?V(z.jQuery,"newpokedexentry","New Pokédex entry",a,this):a.includes("[Alolan Forme]")?(k<v&&0<k||E<Q&&0<E||C<P&&0<C||M<F&&0<M||G<w&&0<G||b<m&&0<b)&&V(z.jQuery,"possiblealolan","Possible new Alolan entry",a,this):0<=a.indexOf("[")?-1==a.indexOf("[Alolan Forme]")&&0<=$.indexOf('"'+g+'"')&&k<v?V(z.jQuery,"possibledifferent","Possible new forme/cloak entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')&&V(z.jQuery,"newpokedexentry","New Pokédex entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')?V(z.jQuery,"newpokedexentry","New Pokédex entry",a,this):V(z.jQuery,"errornotfound","Error: not found",a,this):1==i?0==x||0==N||0==D||0==R||0==f?V(z.jQuery,"newshinypokedexentry","New Shiny Pokédex entry",a,this):a.includes("[Alolan Forme]")?(k<v&&0<k||E<Q&&0<E||C<P&&0<C||M<F&&0<M||G<w&&0<G||b<m&&0<b)&&V(z.jQuery,"possibleshinyalolan","Possible new Shiny Alolan entry",a,this):0<=a.indexOf("[")?-1==a.indexOf("[Alolan Forme]")&&0<=$.indexOf('"'+g+'"')&&k<v?V(z.jQuery,"possibleshinydifferent","Possible new Shiny forme/cloak entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')&&V(z.jQuery,"newshinypokedexentry","New Shiny Pokédex entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')?V(z.jQuery,"newshinypokedexentry","New Shiny Pokédex entry",a,this):V(z.jQuery,"errornotfound","Error: not found",a,this):1==s?0==j||0==H||0==I||0==K||0==S?V(z.jQuery,"newalbinopokedexentry","New Albino Pokédex entry",a,this):a.includes("[Alolan Forme]")?(k<v&&0<k||E<Q&&0<E||C<P&&0<C||M<F&&0<M||G<w&&0<G||b<m&&0<b)&&V(z.jQuery,"possiblealbinoalolan","Possible new Albino Alolan entry",a,this):0<=a.indexOf("[")?-1==a.indexOf("[Alolan Forme]")&&0<=$.indexOf('"'+g+'"')&&k<v?V(z.jQuery,"possiblealbinodifferent","Possible new Albino forme/cloak entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')&&V(z.jQuery,"newalbinopokedexentry","New Albino Pokédex entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')?V(z.jQuery,"newalbinopokedexentry","New Albino Pokédex entry",a,this):V(z.jQuery,"errornotfound","Error: not found",a,this):1==o&&(0==_||0==O||0==B||0==U||0==Y?V(z.jQuery,"newmelanisticpokedexentry","New Melanistic Pokédex entry",a,this):a.includes("[Alolan Forme]")?(k<v&&0<k||E<Q&&0<E||C<P&&0<C||M<F&&0<M||G<w&&0<G||b<m&&0<b)&&V(z.jQuery,"possiblemelanalolan","Possible new Melanistic Alolan entry",a,this):0<=a.indexOf("[")?-1==a.indexOf("[Alolan Forme]")&&0<=$.indexOf('"'+g+'"')&&k<v?V(z.jQuery,"possiblemelandifferent","Possible new Melanistic forme/cloak entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')&&V(z.jQuery,"newmelanisticpokedexentry","New Melanistic Pokédex entry",a,this):-1==$.indexOf('"'+g+'"')&&-1==$.indexOf('"'+T+'"')&&-1==$.indexOf('"'+A+'"')&&-1==$.indexOf('"'+L+'"')&&-1==$.indexOf('"'+q+'"')&&-1==$.indexOf('"'+y+'"')?V(z.jQuery,"newmelanisticpokedexentry","New Melanistic Pokédex entry",a,this):V(z.jQuery,"errornotfound","Error: not found",a,this))}),z.jQuery(".evolvepkmnlist").hide();var e=z.jQuery(".panel>h3").css("background-color"),t=z.jQuery(".panel>h3").css("border"),i=z.jQuery(".panel>h3").css("color"),e=(z.jQuery(".expandlist").css("background-color",""+e),z.jQuery(".expandlist").css("border",""+t),z.jQuery(".expandlist").css("color",""+i),z.jQuery(".tabbed_interface>div").css("background-color")),t=z.jQuery(".tabbed_interface>div").css("color");z.jQuery(".qolChangeLogContent").css("background-color",""+e),z.jQuery(".qolChangeLogContent").css("color",""+t)}easyQuickEvolve(){const e=this.jQuery('.canevolve:contains("evolved into")').parent();0!=e.length&&e.remove()}easyEvolveTypeList(e){const p=this,g=e.DEX_DATA;this.clearSortedEvolveLists();var t=p.jQuery(".panel>h3").css("background-color"),e=(p.jQuery("#farmnews-evolutions>.scrollable>ul").addClass("evolvepkmnlist"),document.querySelector("#farmnews-evolutions>.scrollable").insertAdjacentHTML("afterbegin",e.TEMPLATES.evolveFastHTML),p.jQuery(".panel>h3").css("border")),i=p.jQuery(".panel>h3").css("color"),t=(p.jQuery(".expandlist").css("background-color",""+t),p.jQuery(".expandlist").css("border",""+e),p.jQuery(".expandlist").css("color",""+i),p.jQuery(".tabbed_interface>div").css("background-color")),e=p.jQuery(".tabbed_interface>div").css("color");p.jQuery(".qolChangeLogContent").css("background-color",""+t),p.jQuery(".qolChangeLogContent").css("color",""+e);p.jQuery("#farmnews-evolutions>.scrollable>.evolvepkmnlist>Li").each(function(){var e=p.jQuery(this).html();r="/summary/",r=(n=e).indexOf(r)+r.length+7,l=n.indexOf("</a>");let t=n.substring(r,l);r=(n=e).indexOf("into</span>")+"into</span>".length;const i=n.substr(r).trim();t=t.replace(/é/g,"\\u00e9").replace(/í/g,"\\u00ed").replace(/ñ/g,"\\u00f1");let s=i.replace(" [","/");s=s.replace("]","");const o=g.indexOf('"'+t+'"'),a=g.indexOf('"'+s+'"');var r,l=-1!=o,n=-1!=a;let c=[],d=[];i in p.settings.KNOWN_EXCEPTIONS?(d=p.settings.KNOWN_EXCEPTIONS[i].map(e=>""+e),c=d):(c=l?[1,2].map(e=>g[o+e]):["18","-1"],d=n?[1,2].map(e=>g[a+e]):["18","-1"]),c=c.map(e=>e.replace(".","")),d=d.map(e=>e.replace(".","")),c=c.filter(e=>"-1"!==e),d=d.filter(e=>"-1"!==e);const u=this,h=(c.includes("18")&&p.jQuery(u).clone().appendTo(".18source"),d.includes("18")&&p.jQuery(u).clone().appendTo(".18target"),[...c,...d].filter((e,t,i)=>"18"!=e&&i.indexOf(e)===t));h.map(e=>{p.jQuery(u).clone().appendTo("."+e)}),r=p.jQuery,l=this,(n=e).includes('title="[DELTA')&&(n=n.match('DELTA-(.*)]">'),r(l).clone().appendTo(p.settings.TYPE_APPEND[n[1]]))}),p.jQuery("#farmnews-evolutions>.scrollable>.qolEvolveTypeList>Li").each(function(){var e=p.jQuery(this).children().children().length,t=p.jQuery(this).children(".slidermenu").html();0===e?(this.nextSibling.hidden=!0,this.hidden=!0):p.jQuery(this).children(".slidermenu").html(t+" ("+e+")")}),p.jQuery(".evolvepkmnlist").hide()}}class FishingPage extends Page{constructor(e,t,i,s){super(e,t,i,s.FISHING_PAGE_SETTINGS_KEY,{},"fishing")}setupHTML(e){document.querySelector("#caughtfishcontainer label").insertAdjacentHTML("afterend",e.TEMPLATES.massReleaseSelectHTML)}setupHandlers(){const e=this;e.jQuery("#selectallfishcheckbox").on("click",function(){e.jQuery("li[data-flavour]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectanycheckbox").on("click",function(){e.jQuery("li[data-flavour=Any]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectsourcheckbox").on("click",function(){e.jQuery("li[data-flavour=Sour]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectspicycheckbox").on("click",function(){e.jQuery("li[data-flavour=Spicy]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectdrycheckbox").on("click",function(){e.jQuery("li[data-flavour=Dry]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectsweetcheckbox").on("click",function(){e.jQuery("li[data-flavour=Sweet]>label>input").prop("checked",this.checked)}),e.jQuery("#movefishselectbittercheckbox").on("click",function(){e.jQuery("li[data-flavour=Bitter]>label>input").prop("checked",this.checked)})}}class Globals{constructor(e,t,i){this.jQuery=e,this.localStorageMgr=t,this.HELPERS=i,this.TEMPLATES={qolHubLinkHTML:'<li data-name="QoL"><a title="QoL Settings"><img src="https://i.imgur.com/L6KRli5.png" alt="QoL Settings">QoL</a></li>',massReleaseSelectHTML:'<label id="selectallfish"><input class="qolsetting" id="selectallfishcheckbox" type="checkbox">Select all</label> <label id="movefishselectany"><input class="qolsetting" id="movefishselectanycheckbox" type="checkbox">Select Any</label> <label id="movefishselectsour"><input class="qolsetting" id="movefishselectsourcheckbox" type="checkbox">Select Sour</label> <label id="movefishselectspicy"><input class="qolsetting" id="movefishselectspicycheckbox" type="checkbox">Select Spicy</label> <label id="movefishselectdry"><input class="qolsetting" id="movefishselectdrycheckbox" type="checkbox">Select Dry</label> <label id="movefishselectsweet"><input class="qolsetting" id="movefishselectsweetcheckbox" type="checkbox">Select Sweet</label> <label id="movefishselectbitter"><input class="qolsetting" id="movefishselectbittercheckbox" type="checkbox">Select Bitter</label>',partyModHTML:'<div id="qolpartymod"><label><input type="checkbox" class="qolsetting qolalone" data-key="hideDislike">Hide disliked berries</label> <label><input type="checkbox" class="qolsetting qolalone" data-key="niceTable">Show in table</label> <label><input type="checkbox" class="qolsetting qolalone" data-key="hideAll">Hide all click fast</label></div>',shelterOptionsHTML:null,fieldSortHTML:null,fieldSearchHTML:null,privateFieldSearchHTML:null,qolHubHTML:null,evolveFastHTML:null,labOptionsHTML:null,publicFieldTooltipModHTML:null,privateFieldTooltipModHTML:null},this.SETTINGS_SAVE_KEY="QoLSettings",this.DAYCARE_PAGE_SETTINGS_KEY="QoLDaycare",this.DEX_PAGE_SETTINGS_KEY="QoLDexPage",this.FARM_PAGE_SETTINGS_KEY="QoLFarm",this.FISHING_PAGE_SETTINGS_KEY="QoLFishing",this.LAB_PAGE_SETTINGS_KEY="QoLLab",this.MULTIUSER_PAGE_SETTINGS_KEY="QoLMultiuser",this.PRIVATE_FIELDS_PAGE_SETTINGS_KEY="QoLPrivateFields",this.PUBLIC_FIELDS_PAGE_SETTINGS_KEY="QoLPublicFields",this.SHELTER_PAGE_SETTINGS_KEY="QoLShelter",this.WISHFORGE_PAGE_SETTINGS_KEY="QoLWishforge",this.POKEDEX_DATA_KEY="QoLPokedex",this.POKEDEX_DEX_IDS_KEY="QoLDexIDsCache",this.POKEDEX_REGIONAL_FORMS_KEY="QoLRegionalFormsList",this.POKEDEX_EGG_TYPES_MAP_KEY="QoLEggTypesMap",this.POKEDEX_EVOLVE_BY_LEVEL_KEY="QoLEvolveByLevel",this.POKEDEX_EVOLUTION_TREE_DEPTH_KEY="QoLEvolutionTreeDepth",this.INTERACTIONS_PAGE_SETTINGS_KEY="QoLInteractions",this.SUMMARY_PAGE_SETTINGS_KEY="QoLSummary",this.TYPE_LIST=["Normal","Fire","Water","Electric","Grass","Ice","Fighting","Poison","Ground","Flying","Psychic","Bug","Rock","Ghost","Dragon","Dark","Steel","Fairy"],this.NATURE_LIST=["Lonely","Mild","Hasty","Gentle","Bold","Modest","Timid","Calm","Impish","Adamant","Jolly","Careful","Relaxed","Brave","Quiet","Sassy","Lax","Naughty","Rash","Naïve","Hardy","Docile","Serious","Bashful","Quirky"],this.EGG_GROUP_LIST={0:"Undiscovered",1:"Monster",2:"Dragon",3:"Field",4:"Bug",5:"Grass",6:"Water 1",7:"Water 2",8:"Water 3",9:"Amorphous",10:"Fairy",11:"Human-Like",12:"Mineral",13:"Flying",15:"Ditto"},this.SHELTER_TYPE_TABLE=["0","Normal","<img src='//pfq-static.com/img/types/normal.png/t=1262702646'>","1","Fire","<img src='//pfq-static.com/img/types/fire.png/t=1262702645'>","2","Water","<img src='//pfq-static.com/img/types/water.png/t=1262702646'>","3","Electric","<img src='//pfq-static.com/img/types/electric.png/t=1262702645'>","4","Grass","<img src='//pfq-static.com/img/types/grass.png/t=1262702645'>","5","Ice","<img src='//pfq-static.com/img/types/ice.png/t=1262702646'>","6","fighting","<img src='//pfq-static.com/img/types/fighting.png/t=1262702645'>","7","Poison","<img src='//pfq-static.com/img/types/poison.png/t=1262702646'>","8","Ground","<img src='//pfq-static.com/img/types/ground.png/t=1262702646'>","9","Flying","<img src='//pfq-static.com/img/types/flying.png/t=1262702645'>","10","Psychic","<img src='//pfq-static.com/img/types/psychic.png/t=1262702646'>","11","Bug","<img src='//pfq-static.com/img/types/bug.png/t=1262702645'>","12","Rock","<img src='//pfq-static.com/img/types/rock.png/t=1262702646'>","13","Ghost","<img src='//pfq-static.com/img/types/ghost.png/t=1262702645'>","14","Dragon","<img src='//pfq-static.com/img/types/dragon.png/t=1263605747'>","15","Dark","<img src='//pfq-static.com/img/types/dark.png/t=1262702645'>","16","Steel","<img src='//pfq-static.com/img/types/steel.png/t=1262702646'>","17","Fairy","<img src='//pfq-static.com/img/types/fairy.png/t=1374419124'>"],this.SHELTER_SEARCH_DATA=["findNewEgg","Egg","new egg","<img src='//pfq-static.com/img/pkmn/egg.png/t=1451852195'>","findNewPokemon","Pokémon","new Pokémon","<img src='//pfq-static.com/img/pkmn/pkmn.png/t=1451852507'>","findShiny","SHINY","Shiny","<img src='//pfq-static.com/img/pkmn/shiny.png/t=1400179603'>","findAlbino","ALBINO","Albino","<img src='//pfq-static.com/img/pkmn/albino.png/t=1414662094'>","findMelanistic","MELANISTIC","Melanistic","<img src='//pfq-static.com/img/pkmn/melanistic.png/t=1435353274'>","findPrehistoric","PREHISTORIC","Prehistoric","<img src='//pfq-static.com/img/pkmn/prehistoric.png/t=1465558964'>","findDelta","DELTA","Delta","<img src='//pfq-static.com/img/pkmn/_delta/dark.png/t=1501325214'>","findMega","MEGA","Mega","<img src='//pfq-static.com/img/pkmn/mega.png/t=1400179603'>","findStarter","STARTER","Starter","<img src='//pfq-static.com/img/pkmn/starter.png/t=1484919510'>","findCustomSprite","CUSTOM SPRITE","Custom Sprite","<img src='//pfq-static.com/img/pkmn/cs.png/t=1405806997'>","findMale","[M]","Male","<img src='//pfq-static.com/img/pkmn/gender_m.png/t=1401213006'>","findFemale","[F]","Female","<img src='//pfq-static.com/img/pkmn/gender_f.png/t=1401213007'>","findNoGender","[N]","Genderless","<img src='//pfq-static.com/img/pkmn/gender_n.png/t=1401213004'>","findLegendary","","Legendary","<img src='//pfq-static.com/img/pkmn/pkmn.png/t=1451852507'>"],this.SHELTER_SEARCH_LISTS={findLegendary:["Articuno","Zapdos","Moltres","Mewtwo","Mew","Raikou","Entei","Suicune","Lugia","Ho-oh","Celebi","Regirock","Regice","Registeel","Latias","Latios","Kyogre","Groudon","Rayquaza","Deoxys","Jirachi","Uxie","Mesprit","Azelf","Dialga","Palkia","Heatran","Regigigas","Giratina","Cresselia","Manaphy","Darkrai","Shaymin","Arceus","Cobalion","Terrakion","Virizion","Tornadus","Thundurus","Reshiram","Zekrom","Landorus","Kyurem","Keldeo","Meloetta","Genesect","Xerneas","Yveltal","Zygarde","Diancie","Hoopa","Volcanion","Type: Null","Silvally","Tapu Koko","Tapu Lele","Tapu Bulu","Tapu Fini","Cosmog","Cosmoem","Solgaleo","Lunala","Necrozma","Zacian","Zamazenta","Eternatus"]},this.TYPE_OPTIONS=null,this.NATURE_OPTIONS=null,this.EGG_GROUP_OPTIONS=null,this.DEX_UPDATE_DATE=null,this.DEX_DATA=`{"columns":["id","name","type1","type2","eggs","eggdex","pkmn","pokedex","shinydex","albidex","melandex"],"types":["normal","fire","water","electric","grass","ice","fighting","poison","ground","flying","psychic","bug","rock","ghost","dragon","dark","steel","fairy"],"regions":{"1":[["001","Bulbasaur",4,7,1,1,1,1,0,0,0],["002","Ivysaur",4,7,0,0,1,1,0,0,0],["003","Venusaur",4,7,0,0,2,2,1,0,0],["004","Charmander",1,-1,1,1,1,1,1,0,0],["005","Charmeleon",1,-1,0,0,1,1,1,0,0],["006","Charizard",1,9,0,0,3,3,3,0,1],["007","Squirtle",2,-1,1,1,1,1,1,1,0],["008","Wartortle",2,-1,0,0,1,1,1,1,0],["009","Blastoise",2,-1,0,0,2,2,2,1,0],["010","Caterpie",11,-1,1,1,1,1,1,0,0],["011","Metapod",11,-1,0,0,1,1,1,0,0],["012","Butterfree",11,9,0,0,1,1,1,0,0],["013","Weedle",11,7,1,1,1,1,1,0,0],["014","Kakuna",11,7,0,0,1,1,1,0,0],["015","Beedrill",11,7,0,0,2,2,1,1,0],["016","Pidgey",0,9,1,1,1,1,0,0,0],["017","Pidgeotto",0,9,0,0,1,1,0,0,0],["018","Pidgeot",0,9,0,0,2,2,0,0,0],["019","Rattata",0,-1,2,2,2,2,1,0,0],["020","Raticate",0,-1,0,0,3,3,2,0,0],["021","Spearow",0,9,1,1,1,1,0,0,0],["022","Fearow",0,9,0,0,1,1,0,0,0],["023","Ekans",7,-1,1,1,1,1,1,0,0],["024","Arbok",7,-1,0,0,1,1,1,0,0],["025","Pichu",3,-1,1,1,1,1,1,1,0],["026","Pikachu",3,-1,0,0,1,1,1,0,0],["027","Raichu",3,-1,0,0,2,2,2,0,0],["028","Sandshrew",8,-1,2,2,2,2,0,1,0],["029","Sandslash",8,-1,0,0,2,2,0,0,0],["030","Nidoran",7,-1,1,1,1,1,1,1,0],["031","Nidorina",7,-1,0,0,1,1,1,0,0],["032","Nidoqueen",7,8,0,0,1,1,1,0,0],["033","Nidorino",7,-1,0,0,1,1,1,0,0],["034","Nidoking",7,8,0,0,1,1,1,0,0],["035","Cleffa",17,-1,1,1,1,1,1,0,0],["036","Clefairy",17,-1,0,0,1,1,0,0,0],["037","Clefable",17,-1,0,0,1,1,0,0,0],["038","Vulpix",1,-1,2,2,2,2,2,2,2],["039","Ninetales",1,-1,0,0,2,2,2,2,0],["040","Igglybuff",0,17,1,1,1,1,1,0,0],["041","Jigglypuff",0,17,0,0,1,1,1,0,0],["042","Wigglytuff",0,17,0,0,1,1,1,0,0],["043","Zubat",7,9,1,1,1,1,0,0,0],["044","Golbat",7,9,0,0,1,1,0,0,0],["045","Crobat",7,9,0,0,1,1,0,0,0],["046","Oddish",4,7,1,1,1,1,1,0,0],["047","Gloom",4,7,0,0,1,1,1,0,0],["048","Vileplume",4,7,0,0,1,1,1,0,0],["049","Bellossom",4,-1,0,0,1,1,0,0,0],["050","Paras",11,4,1,1,1,1,0,0,0],["051","Parasect",11,4,0,0,1,1,0,0,0],["052","Venonat",11,7,1,1,1,1,1,0,0],["053","Venomoth",11,7,0,0,1,1,1,0,0],["054","Diglett",8,-1,2,2,2,2,0,0,0],["055","Dugtrio",8,-1,0,0,2,2,0,0,0],["056","Meowth",0,-1,3,3,3,3,0,1,0],["057","Persian",0,-1,0,0,2,2,0,0,0],["058","Psyduck",2,-1,1,1,1,1,0,0,0],["059","Golduck",2,-1,0,0,1,1,0,0,0],["060","Mankey",6,-1,1,1,1,1,0,0,0],["061","Primeape",6,-1,0,0,1,1,0,0,0],["062","Growlithe",1,-1,1,1,1,1,1,1,1],["063","Arcanine",1,-1,0,0,1,1,1,0,0],["064","Poliwag",2,-1,1,1,1,1,0,0,0],["065","Poliwhirl",2,-1,0,0,1,1,0,0,0],["066","Poliwrath",2,6,0,0,1,1,0,0,0],["067","Politoed",2,-1,0,0,1,1,0,0,0],["068","Abra",10,-1,1,1,1,1,1,0,0],["069","Kadabra",10,-1,0,0,1,1,0,1,0],["070","Alakazam",10,-1,0,0,2,2,0,0,0],["071","Machop",6,-1,1,1,1,1,0,0,0],["072","Machoke",6,-1,0,0,1,1,0,0,0],["073","Machamp",6,-1,0,0,1,1,0,0,0],["074","Bellsprout",4,7,1,1,1,1,0,0,0],["075","Weepinbell",4,7,0,0,1,1,0,0,0],["076","Victreebell",4,7,0,0,1,1,0,0,0],["077","Tentacool",2,7,1,1,1,1,1,0,0],["078","Tentacruel",2,7,0,0,1,1,1,0,0],["079","Geodude",12,8,2,2,2,2,1,0,0],["080","Graveler",12,8,0,0,2,2,0,0,0],["081","Golem",12,8,0,0,2,2,0,0,0],["082","Ponyta",1,-1,2,2,2,2,1,2,0],["083","Rapidash",1,-1,0,0,2,2,0,1,0],["084","Slowpoke",2,10,2,2,2,2,0,0,0],["085","Slowbro",2,10,0,0,3,3,1,0,0],["086","Slowking",2,10,0,0,2,2,1,0,0],["087","Magnemite",3,16,1,1,1,1,1,0,0],["088","Magneton",3,16,0,0,1,1,0,0,0],["089","Magnezone",3,16,0,0,1,1,0,0,0],["090","Farfetch'd",0,9,2,2,2,2,0,0,0],["091","Doduo",0,9,1,1,1,1,1,0,0],["092","Dodrio",0,9,0,0,1,1,0,0,0],["093","Seel",2,-1,1,1,1,1,0,0,0],["094","Dewgong",2,5,0,0,1,1,0,0,0],["095","Grimer",7,-1,2,2,2,2,0,0,0],["096","Muk",7,-1,0,0,2,2,0,0,0],["097","Shellder",2,-1,1,1,1,1,0,0,0],["098","Cloyster",2,5,0,0,1,1,0,0,0],["099","Gastly",13,7,1,1,1,1,1,1,0],["100","Haunter",13,7,0,0,1,1,1,0,0],["101","Gengar",13,7,0,0,2,2,2,0,0],["102","Onix",12,8,1,1,1,1,0,0,0],["103","Steelix",16,8,0,0,2,2,1,0,0],["104","Drowzee",10,-1,1,1,1,1,0,0,0],["105","Hypno",10,-1,0,0,1,1,0,0,0],["106","Krabby",2,-1,1,1,1,1,0,0,0],["107","Kingler",2,-1,0,0,1,1,0,0,0],["108","Voltorb",3,-1,1,1,1,1,0,0,0],["109","Electrode",3,-1,0,0,1,1,0,0,0],["110","Exeggcute",4,10,1,1,1,1,0,0,0],["111","Exeggutor",4,10,0,0,2,2,0,0,0],["112","Cubone",8,-1,1,1,1,1,1,0,0],["113","Marowak",8,-1,0,0,3,3,2,0,0],["114","Lickitung",0,-1,1,1,1,1,0,0,0],["115","Lickilicky",0,-1,0,0,1,1,0,0,0],["116","Koffing",7,-1,1,1,1,1,0,0,0],["117","Weezing",7,-1,0,0,2,2,0,0,0],["118","Rhyhorn",8,12,1,1,1,1,0,0,0],["119","Rhydon",8,12,0,0,1,1,0,0,0],["120","Rhyperior",8,12,0,0,1,1,0,0,0],["121","Tangela",4,-1,1,1,1,1,0,0,0],["122","Tangrowth",4,-1,0,0,1,1,1,0,0],["123","Kangaskhan",0,-1,1,1,2,2,0,0,0],["124","Horsea",2,-1,1,1,1,1,0,1,0],["125","Seadra",2,-1,0,0,1,1,0,0,0],["126","Kingdra",2,14,0,0,1,1,0,0,0],["127","Goldeen",2,-1,1,1,1,1,1,0,0],["128","Seaking",2,-1,0,0,1,1,1,0,0],["129","Staryu",2,-1,1,1,1,1,0,0,0],["130","Starmie",2,10,0,0,1,1,0,0,0],["131","Mime Jr.",10,17,1,1,1,1,0,0,0],["132","Mr. Mime",10,17,2,2,2,2,0,0,0],["133","Scyther",11,9,1,1,1,1,1,0,0],["134","Scizor",11,16,0,0,2,2,0,0,0],["135","Smoochum",5,10,1,1,1,1,0,0,0],["136","Jynx",5,10,0,0,1,1,0,0,0],["137","Pinsir",11,-1,1,1,2,2,0,0,0],["138","Tauros",0,-1,1,1,1,1,0,0,0],["139","Magikarp",2,-1,1,1,1,1,1,0,0],["140","Gyarados",2,9,0,0,2,2,1,0,0],["141","Lapras",2,5,1,1,1,1,0,1,0],["142","Ditto",0,-1,1,1,1,1,0,0,0],["143","Eevee",0,-1,1,1,1,1,1,1,0],["144","Vaporeon",2,-1,0,0,1,1,1,0,0],["145","Jolteon",3,-1,0,0,1,1,1,0,0],["146","Flareon",1,-1,0,0,1,1,1,1,0],["147","Espeon",10,-1,0,0,1,1,1,0,0],["148","Umbreon",15,-1,0,0,1,1,1,0,0],["149","Leafeon",4,-1,0,0,1,1,1,1,0],["150","Glaceon",5,-1,0,0,1,1,1,1,0],["151","Sylveon",17,-1,0,0,1,1,1,0,0],["152","Omanyte",12,2,1,1,1,1,1,0,0],["153","Omastar",12,2,0,0,1,1,0,0,0],["154","Kabuto",12,2,1,1,1,1,0,0,0],["155","Kabutops",12,2,0,0,1,1,0,0,0],["156","Aerodactyl",12,9,1,1,2,2,2,1,0],["157","Munchlax",0,-1,1,1,1,1,0,0,0],["158","Snorlax",0,-1,1,1,1,1,0,0,0],["159","Articuno",5,9,2,2,2,2,0,0,0],["160","Zapdos",3,9,2,2,2,2,0,0,0],["161","Moltres",1,9,2,2,2,2,0,0,0],["162","Dratini",14,-1,1,1,1,1,1,1,1],["163","Dragonair",14,-1,0,0,1,1,1,1,0],["164","Dragonite",14,9,0,0,1,1,1,0,0],["165","Mewtwo",10,-1,1,1,3,3,0,0,0],["166","Mew",10,-1,1,1,1,1,0,0,0]],"2":[["167","Chikorita",4,-1,1,1,1,1,0,0,0],["168","Bayleef",4,-1,0,0,1,1,0,0,0],["169","Meganium",4,-1,0,0,1,1,1,0,0],["170","Cyndaquil",1,-1,1,1,1,1,1,0,0],["171","Quilava",1,-1,0,0,1,1,1,0,0],["172","Typhlosion",1,-1,0,0,2,2,1,0,0],["173","Totodile",2,-1,1,1,1,1,0,0,0],["174","Croconaw",2,-1,0,0,1,1,0,0,0],["175","Feraligator",2,-1,0,0,1,1,0,0,0],["176","Sentret",0,-1,1,1,1,1,1,0,0],["177","Furret",0,-1,0,0,1,1,1,0,0],["178","Hoothoot",0,9,1,1,1,1,0,0,0],["179","Noctowl",0,9,0,0,1,1,0,0,0],["180","Ledyba",11,9,1,1,1,1,0,0,0],["181","Ledian",11,9,0,0,1,1,0,0,0],["182","Spinarak",11,7,1,1,1,1,0,0,0],["183","Ariados",11,7,0,0,1,1,0,0,0],["184","Chinchou",2,3,1,1,1,1,0,0,0],["185","Lanturn",2,3,0,0,1,1,0,0,0],["186","Togepi",17,-1,1,1,1,1,1,0,0],["187","Togetic",17,9,0,0,1,1,1,0,0],["188","Togekiss",17,9,0,0,1,1,1,0,0],["189","Natu",10,9,1,1,1,1,0,0,0],["190","Xatu",10,9,0,0,1,1,0,0,0],["191","Mareep",3,-1,1,1,1,1,1,1,0],["192","Flaaffy",3,-1,0,0,1,1,0,0,0],["193","Ampharos",3,-1,0,0,2,2,1,0,0],["194","Azurill",0,17,1,1,1,1,1,0,0],["195","Marill",2,17,1,1,1,1,1,0,0],["196","Azumarill",2,17,0,0,1,1,1,0,0],["197","Bonsly",12,-1,1,1,1,1,0,0,0],["198","Sudowoodo",12,-1,1,1,1,1,0,0,0],["199","Hoppip",4,9,1,1,1,1,1,0,0],["200","Skiploom",4,9,0,0,1,1,0,0,0],["201","Jumpluff",4,9,0,0,1,1,0,0,0],["202","Aipom",0,-1,1,1,1,1,0,0,0],["203","Ambipom",0,-1,0,0,1,1,0,0,0],["204","Sunkern",4,-1,1,1,1,1,0,1,0],["205","Sunflora",4,-1,0,0,1,1,0,0,0],["206","Yanma",11,9,1,1,1,1,0,0,0],["207","Yanmega",11,9,0,0,1,1,0,0,0],["208","Wooper",2,8,1,1,1,1,0,0,0],["209","Quagsire",2,8,0,0,1,1,0,0,0],["210","Murkrow",15,9,1,1,1,1,0,0,0],["211","Honchkrow",15,9,0,0,1,1,0,0,0],["212","Misdreavus",13,-1,1,1,1,1,0,0,0],["213","Mismagius",13,-1,0,0,1,1,0,0,0],["214a","Unown",10,-1,28,28,28,28,0,0,0],["215","Girafarig",0,10,1,1,1,1,0,0,0],["216","Pineco",11,-1,1,1,1,1,0,0,0],["217","Forretress",11,16,0,0,1,1,0,0,0],["218","Dunsparce",0,-1,1,1,1,1,0,0,0],["219","Gligar",8,9,1,1,1,1,1,0,0],["220","Gliscor",8,9,0,0,1,1,1,0,0],["221","Snubbull",17,-1,1,1,1,1,0,0,0],["222","Granbull",17,-1,0,0,1,1,0,0,0],["223","Qwilfish",2,7,2,2,2,2,0,0,0],["224","Shuckle",11,12,1,1,1,1,0,0,0],["225","Heracross",11,6,1,1,2,2,0,0,0],["226","Sneasel",15,5,1,1,1,1,0,0,0],["227","Weavile",15,5,0,0,1,1,1,0,0],["228","Teddiursa",0,-1,1,1,1,1,0,0,0],["229","Ursaring",0,-1,0,0,1,1,0,0,0],["230","Slugma",1,-1,1,1,1,1,0,0,0],["231","Magcargo",1,12,0,0,1,1,0,0,0],["232","Swinub",5,8,1,1,1,1,1,0,0],["233","Piloswine",5,8,0,0,1,1,1,0,0],["234","Mamoswine",5,8,0,0,1,1,1,0,0],["235","Corsola",2,12,2,2,2,2,1,0,0],["236","Remoraid",2,-1,1,1,1,1,0,0,0],["237","Octillery",2,-1,0,0,1,1,0,0,0],["238","Delibird",5,9,1,1,1,1,0,0,0],["239","Skarmory",16,9,1,1,1,1,1,1,0],["240","Houndour",15,1,1,1,1,1,1,1,1],["241","Houndoom",15,1,0,0,2,2,1,0,1],["242","Phanpy",8,-1,1,1,1,1,0,0,0],["243","Donphan",8,-1,0,0,1,1,0,0,0],["244","Stantler",0,-1,1,1,1,1,0,0,0],["245","Smeargle",0,-1,1,1,1,1,0,0,0],["246","Tyrogue",6,-1,1,1,1,1,0,0,0],["247","Hitmonlee",6,-1,0,0,1,1,0,0,0],["248","Hitmonchan",6,-1,0,0,1,1,0,0,0],["249","Hitmontop",6,-1,0,0,1,1,0,0,0],["250","Elekid",3,-1,1,1,1,1,0,0,0],["251","Electabuzz",3,-1,0,0,1,1,0,0,0],["252","Electivire",3,-1,0,0,1,1,1,0,0],["253","Magby",1,-1,1,1,1,1,0,0,0],["254","Magmar",1,-1,0,0,1,1,1,0,0],["255","Magmortar",1,-1,0,0,1,1,0,0,0],["256","Miltank",0,-1,1,1,1,1,1,0,0],["257","Raikou",3,-1,1,1,1,1,1,0,0],["258","Entei",1,-1,1,1,1,1,0,0,0],["259","Suicune",2,-1,1,1,1,1,0,0,0],["260","Larvitar",12,8,1,1,1,1,1,1,0],["261","Pupitar",12,8,0,0,1,1,0,0,0],["262","Tyranitar",12,15,0,0,2,2,1,0,0],["263","Lugia",10,9,1,1,1,1,0,0,0],["264","Ho-oh",1,9,1,1,1,1,0,0,0],["265","Celebi",10,4,1,1,1,1,0,0,0]],"3":[["266","Treecko",4,-1,1,1,1,1,0,0,0],["267","Grovyle",4,-1,0,0,1,1,0,0,0],["268","Sceptile",4,-1,0,0,2,2,1,0,0],["269","Torchic",1,-1,1,1,1,1,0,0,0],["270","Combusken",1,6,0,0,1,1,0,0,0],["271","Blaziken",1,6,0,0,2,2,1,0,0],["272","Mudkip",2,-1,1,1,1,1,0,0,0],["273","Marshtomp",2,8,0,0,1,1,0,0,0],["274","Swampert",2,8,0,0,2,2,0,0,0],["275","Poochyena",15,-1,1,1,1,1,0,0,0],["276","Mightyena",15,-1,0,0,1,1,1,0,0],["277","Zigzagoon",0,-1,2,2,2,2,0,0,0],["278","Linoone",0,-1,0,0,2,2,0,0,0],["279","Wurmple",11,-1,1,1,1,1,1,1,0],["280","Silcoon",11,-1,0,0,1,1,0,1,0],["281","Beautifly",11,9,0,0,1,1,1,1,0],["282","Cascoon",11,-1,0,0,1,1,0,0,0],["283","Dustox",11,7,0,0,1,1,0,0,0],["284","Lotad",2,4,1,1,1,1,1,0,0],["285","Lombre",2,4,0,0,1,1,1,0,0],["286","Ludicolo",2,4,0,0,1,1,1,0,0],["287","Seedot",4,-1,1,1,1,1,0,0,0],["288","Nuzleaf",4,15,0,0,1,1,0,0,0],["289","Shiftry",4,15,0,0,1,1,0,0,0],["290","Taillow",0,9,1,1,1,1,0,0,0],["291","Swellow",0,9,0,0,1,1,0,0,0],["292","Wingull",2,9,1,1,1,1,0,0,0],["293","Pelipper",2,9,0,0,1,1,1,0,0],["294","Ralts",10,17,1,1,1,1,1,1,0],["295","Kirlia",10,17,0,0,1,1,1,0,0],["296","Gardevoir",10,17,0,0,2,2,1,0,0],["297","Gallade",10,6,0,0,2,2,2,0,0],["298","Surskit",11,2,1,1,1,1,0,0,0],["299","Masquerain",11,9,0,0,1,1,0,0,0],["300","Shroomish",4,-1,1,1,1,1,1,1,0],["301","Breloom",4,6,0,0,1,1,1,1,0],["302","Slakoth",0,-1,1,1,1,1,0,0,0],["303","Vigoroth",0,-1,0,0,1,1,0,0,0],["304","Slaking",0,-1,0,0,1,1,0,0,0],["305","Nincada",11,8,1,1,1,1,0,0,0],["306","Ninjask",11,9,0,0,1,1,0,0,0],["307","Shedinja",11,13,0,0,1,1,0,0,0],["308","Whismur",0,-1,1,1,1,1,0,0,0],["309","Loudred",0,-1,0,0,1,1,0,0,0],["310","Exploud",0,-1,0,0,1,1,0,0,0],["311","Makuhita",6,-1,1,1,1,1,0,0,0],["312","Hariyama",6,-1,0,0,1,1,0,0,0],["313","Nosepass",12,-1,1,1,1,1,1,0,0],["314","Probopass",12,16,0,0,1,1,0,0,0],["315","Skitty",0,-1,1,1,1,1,1,1,0],["316","Delcatty",0,-1,0,0,1,1,1,0,0],["317","Sableye",15,13,1,1,2,2,1,0,0],["318","Mawile",16,17,1,1,2,2,2,1,0],["319","Aron",16,12,1,1,1,1,1,1,0],["320","Lairon",16,12,0,0,1,1,0,0,0],["321","Aggron",16,12,0,0,2,2,0,0,0],["322","Meditite",6,10,1,1,1,1,1,0,0],["323","Medicham",6,10,0,0,2,2,1,0,0],["324","Electrike",3,-1,1,1,1,1,1,1,0],["325","Manectric",3,-1,0,0,2,2,1,0,0],["326","Plusle",3,-1,1,1,1,1,1,0,0],["327","Minun",3,-1,1,1,1,1,1,0,0],["328","Volbeat",11,-1,1,1,1,1,0,0,0],["329","Illumise",11,-1,1,1,1,1,0,0,0],["330","Gulpin",7,-1,1,1,1,1,1,0,0],["331","Swalot",7,-1,0,0,1,1,1,0,0],["332","Carvanha",2,15,1,1,1,1,1,0,0],["333","Sharpedo",2,15,0,0,2,2,0,0,0],["334","Wailmer",2,-1,1,1,1,1,0,0,0],["335","Wailord",2,-1,0,0,1,1,0,0,0],["336","Numel",1,8,1,1,1,1,0,0,0],["337","Camerupt",1,8,0,0,2,2,0,0,0],["338","Torkoal",1,-1,1,1,1,1,0,0,0],["339","Spoink",10,-1,1,1,1,1,1,0,0],["340","Grumpig",10,-1,0,0,1,1,1,0,0],["341","Spinda",0,-1,1,1,1,1,0,0,0],["342","Trapinch",8,-1,1,1,1,1,1,1,0],["343","Vibrava",8,14,0,0,1,1,0,0,0],["344","Flygon",8,14,0,0,1,1,1,0,0],["345","Cacnea",4,-1,1,1,1,1,0,0,0],["346","Cacturne",4,15,0,0,1,1,0,0,0],["347","Swablu",0,9,1,1,1,1,0,0,0],["348","Altaria",14,9,0,0,2,2,1,0,0],["349","Zangoose",0,-1,1,1,1,1,0,0,0],["350","Seviper",7,-1,1,1,1,1,1,0,0],["351","Lunatone",12,10,1,1,1,1,0,0,0],["352","Solrock",12,10,1,1,1,1,0,0,0],["353","Barboach",2,8,1,1,1,1,0,0,0],["354","Whiscash",2,8,0,0,1,1,0,0,0],["355","Corphish",2,-1,1,1,1,1,0,0,0],["356","Crawdaunt",2,15,0,0,1,1,0,0,0],["357","Baltoy",8,10,1,1,1,1,0,0,0],["358","Claydol",8,10,0,0,1,1,0,0,0],["359","Lileep",12,4,1,1,1,1,1,1,0],["360","Cradily",12,4,0,0,1,1,0,0,0],["361","Anorith",12,11,1,1,1,1,0,0,0],["362","Armaldo",12,11,0,0,1,1,0,0,0],["363","Feebas",2,-1,1,1,1,1,0,0,0],["364","Milotic",2,-1,0,0,1,1,0,0,0],["365","Castform",0,-1,1,1,4,4,4,0,0],["366","Kecleon",0,-1,1,1,1,1,0,0,0],["367","Shuppet",13,-1,1,1,1,1,0,0,0],["368","Banette",13,-1,0,0,2,2,1,0,0],["369","Duskull",13,-1,1,1,1,1,1,0,0],["370","Dusclops",13,-1,0,0,1,1,0,0,0],["371","Dusknoir",13,-1,0,0,1,1,0,0,0],["372","Tropius",4,9,1,1,1,1,1,0,0],["373","Chingling",10,-1,1,1,1,1,0,0,0],["374","Chimecho",10,-1,1,1,1,1,0,0,0],["375","Absol",15,-1,1,1,2,2,1,1,0],["376","Wynaut",10,-1,1,1,1,1,0,0,0],["377","Wobbuffet",10,-1,1,1,1,1,0,0,0],["378","Snorunt",5,-1,1,1,1,1,1,0,0],["379","Glalie",5,-1,0,0,2,2,1,0,0],["380","Froslass",5,13,0,0,1,1,0,0,0],["381","Spheal",5,2,1,1,1,1,0,1,0],["382","Sealeo",5,2,0,0,1,1,0,0,0],["383","Walrein",5,2,0,0,1,1,0,0,0],["384","Clamperl",2,-1,1,1,1,1,0,0,0],["385","Huntail",2,-1,0,0,1,1,0,0,0],["386","Gorebyss",2,-1,0,0,1,1,0,0,0],["387","Relicanth",2,12,1,1,1,1,0,0,0],["388","Luvdisc",2,-1,1,1,1,1,0,0,0],["389","Bagon",14,-1,1,1,1,1,1,0,0],["390","Shelgon",14,-1,0,0,1,1,1,0,0],["391","Salamence",14,9,0,0,2,2,0,0,0],["392","Beldum",16,10,1,1,1,1,0,0,0],["393","Metang",16,10,0,0,1,1,0,0,0],["394","Metagross",16,10,0,0,2,2,0,0,0],["395","Regirock",12,-1,1,1,1,1,0,0,0],["396","Regice",5,-1,1,1,1,1,0,0,0],["397","Registeel",16,-1,1,1,1,1,0,0,0],["398","Latias",14,10,1,1,2,2,0,0,0],["399","Latios",14,10,1,1,2,2,0,0,0],["400","Kyogre",2,-1,1,1,2,2,0,0,0],["401","Groudon",8,-1,1,1,2,2,0,0,0],["402","Rayquaza",14,9,1,1,2,2,0,0,0],["403","Jirachi",16,10,1,1,1,1,0,0,0],["404","Deoxys",10,-1,1,1,4,4,0,0,0]],"4":[["405","Turtwig",4,-1,1,1,1,1,0,0,0],["406","Grotle",4,-1,0,0,1,1,0,0,0],["407","Torterra",4,8,0,0,1,1,0,0,0],["408","Chimchar",1,-1,1,1,1,1,0,0,0],["409","Monferno",1,6,0,0,1,1,0,0,0],["410","Infernape",1,6,0,0,1,1,0,0,0],["411","Piplup",2,-1,1,1,1,1,0,0,0],["412","Prinplup",2,-1,0,0,1,1,0,0,0],["413","Empoleon",2,16,0,0,1,1,0,0,0],["414","Starly",0,9,1,1,1,1,1,0,0],["415","Staravia",0,9,0,0,1,1,1,0,0],["416","Staraptor",0,9,0,0,1,1,1,0,0],["417","Bidoof",0,-1,1,1,1,1,1,0,0],["418","Bibarel",0,2,0,0,1,1,0,0,0],["419","Kricketot",11,-1,1,1,1,1,0,0,0],["420","Kricketune",11,-1,0,0,1,1,0,0,0],["421","Shinx",3,-1,1,1,1,1,1,1,0],["422","Luxio",3,-1,0,0,1,1,0,0,0],["423","Luxray",3,-1,0,0,1,1,0,0,0],["424","Budew",4,7,1,1,1,1,1,0,0],["425","Roselia",4,7,1,1,1,1,0,0,0],["426","Roserade",4,7,0,0,1,1,0,0,0],["427","Cranidos",12,-1,1,1,1,1,0,0,0],["428","Rampardos",12,-1,0,0,1,1,0,0,0],["429","Shieldon",12,16,1,1,1,1,1,0,0],["430","Bastiodon",12,16,0,0,1,1,0,0,0],["431","Burmy",11,-1,1,1,3,3,0,0,0],["432","Wormadam",11,4,0,0,3,3,3,0,0],["433","Mothim",11,9,0,0,1,1,0,0,0],["434","Combee",11,9,1,1,1,1,1,0,0],["435","Vespiquen",11,9,0,0,1,1,0,0,0],["436","Pachirisu",3,-1,1,1,1,1,1,1,0],["437","Buizel",2,-1,1,1,1,1,1,0,0],["438","Floatzel",2,-1,0,0,1,1,0,0,0],["439","Cherubi",4,-1,1,1,1,1,1,0,0],["440s","Cherrim",4,-1,0,0,2,2,2,0,0],["441","Shellos",2,-1,1,1,2,2,0,1,0],["442","Gastrodon",2,8,0,0,2,2,0,0,0],["443","Drifloon",13,9,1,1,1,1,0,0,0],["444","Drifblim",13,9,0,0,1,1,1,0,0],["445","Buneary",0,-1,1,1,1,1,0,0,0],["446","Lopunny",0,-1,0,0,2,2,2,0,0],["447","Glameow",0,-1,1,1,1,1,0,0,0],["448","Purugly",0,-1,0,0,1,1,0,0,0],["449","Stunky",7,15,1,1,1,1,1,1,0],["450","Skuntank",7,15,0,0,1,1,1,0,0],["451","Bronzor",16,10,1,1,1,1,0,0,0],["452","Bronzong",16,10,0,0,1,1,0,0,0],["453","Happiny",0,-1,1,1,1,1,0,0,0],["454","Chansey",0,-1,1,1,1,1,0,0,0],["455","Blissey",0,-1,0,0,1,1,0,0,0],["456","Chatot",0,9,1,1,1,1,0,0,0],["457","Spiritomb",13,15,1,1,1,1,1,1,0],["458","Gible",14,8,1,1,1,1,0,0,0],["459","Gabite",14,8,0,0,1,1,1,0,0],["460","Garchomp",14,8,0,0,2,2,0,0,0],["461","Riolu",6,-1,1,1,1,1,1,1,0],["462","Lucario",6,16,0,0,2,2,1,1,0],["463","Hippopotas",8,-1,1,1,1,1,0,0,0],["464","Hippowdon",8,-1,0,0,1,1,0,0,0],["465","Skorupi",7,11,1,1,1,1,1,0,0],["466","Drapion",7,15,0,0,1,1,1,1,0],["467","Croagunk",7,6,1,1,1,1,0,0,0],["468","Toxicroak",7,6,0,0,1,1,0,0,0],["469","Carnivine",4,-1,1,1,1,1,0,0,0],["470","Finneon",2,-1,1,1,1,1,0,0,0],["471","Lumineon",2,-1,0,0,1,1,0,0,0],["472","Mantyke",2,9,1,1,1,1,0,1,0],["473","Mantine",2,9,1,1,1,1,0,1,0],["474","Snover",5,4,1,1,1,1,0,0,0],["475","Abomasnow",5,4,0,0,2,2,0,0,0],["476","Porygon",0,-1,1,1,1,1,0,1,0],["477","Porygon2",0,-1,0,0,1,1,1,1,1],["478","Porygon-Z",0,-1,0,0,1,1,1,1,0],["479","Rotom",3,13,1,1,6,6,6,0,0],["480","Uxie",10,-1,1,1,1,1,0,0,0],["481","Mesprit",10,-1,1,1,1,1,0,0,0],["482","Azelf",10,-1,1,1,1,1,0,0,0],["483","Dialga",16,14,1,1,1,1,0,0,0],["484","Palkia",2,14,1,1,1,1,0,0,0],["485","Heatran",1,16,1,1,1,1,0,0,0],["486","Regigigas",0,-1,1,1,1,1,0,0,0],["487","Giratina",13,14,1,1,2,2,0,0,0],["488","Cresselia",10,-1,1,1,1,1,0,0,0],["489","Phione",2,-1,1,1,1,1,0,0,0],["490","Manaphy",2,-1,1,1,1,1,0,0,0],["491","Darkrai",15,-1,1,1,1,1,0,0,0],["492","Shaymin",4,-1,1,1,2,2,0,0,0],["493","Arceus",0,-1,1,1,18,18,18,0,0],["898","Wyrdeer",0,10,0,0,1,1,0,0,0],["899","Kleavor",11,12,0,0,1,1,0,1,0],["903","Overqwil",15,7,0,0,1,1,0,1,0]],"5":[["494","Victini",10,1,1,1,1,1,0,0,0],["495","Snivy",4,-1,1,1,1,1,0,0,0],["496","Servine",4,-1,0,0,1,1,0,0,0],["497","Serperior",4,-1,0,0,1,1,1,0,0],["498","Tepig",1,-1,1,1,1,1,0,0,0],["499","Pignite",1,6,0,0,1,1,0,0,0],["500","Emboar",1,6,0,0,1,1,0,0,0],["501","Oshawott",2,-1,1,1,1,1,0,0,0],["502","Dewott",2,-1,0,0,1,1,0,0,0],["503","Samurott",2,-1,0,0,2,2,1,0,0],["504","Patrat",0,-1,1,1,1,1,0,0,0],["505","Watchog",0,-1,0,0,1,1,0,0,0],["506","Lillipup",0,-1,1,1,1,1,0,0,0],["507","Herdier",0,-1,0,0,1,1,0,0,0],["508","Stoutland",0,-1,0,0,1,1,0,0,0],["509","Purrloin",15,-1,1,1,1,1,0,0,0],["510","Liepard",15,-1,0,0,1,1,1,0,0],["511","Pansage",4,-1,1,1,1,1,0,0,0],["512","Simisage",4,-1,0,0,1,1,0,0,0],["513","Pansear",1,-1,1,1,1,1,0,0,0],["514","Simisear",1,-1,0,0,1,1,0,0,0],["515","Panpour",2,-1,1,1,1,1,0,0,0],["516","Simipour",2,-1,0,0,1,1,0,0,0],["517","Munna",10,-1,1,1,1,1,1,0,0],["518","Musharna",10,-1,0,0,1,1,0,0,0],["519","Pidove",0,9,1,1,1,1,0,0,0],["520","Tranquill",0,9,0,0,1,1,0,0,0],["521","Unfezant",0,9,0,0,1,1,1,0,0],["522","Blitzle",3,-1,1,1,1,1,0,0,0],["523","Zebstrika",3,-1,0,0,1,1,0,0,0],["524","Roggenrola",12,-1,1,1,1,1,1,1,0],["525","Boldore",12,-1,0,0,1,1,0,0,0],["526","Gigalith",12,-1,0,0,1,1,0,0,0],["527","Woobat",10,9,1,1,1,1,0,1,0],["528","Swoobat",10,9,0,0,1,1,0,0,0],["529","Drilbur",8,-1,1,1,1,1,0,0,0],["530","Excadrill",8,16,0,0,1,1,0,0,0],["531","Audino",0,-1,1,1,2,2,0,0,0],["532","Timburr",6,-1,1,1,1,1,0,0,0],["533","Gurdurr",6,-1,0,0,1,1,0,0,0],["534","Conkeldurr",6,-1,0,0,1,1,0,0,0],["535","Tympole",2,-1,1,1,1,1,0,0,0],["536","Palpitoad",2,8,0,0,1,1,0,0,0],["537","Seismitoad",2,8,0,0,1,1,0,0,0],["538","Throh",6,-1,1,1,1,1,0,0,0],["539","Sawk",6,-1,1,1,1,1,0,0,0],["540","Sewaddle",11,4,1,1,1,1,0,0,0],["541","Swadloon",11,4,0,0,1,1,0,0,0],["542","Leavanny",11,4,0,0,1,1,0,0,0],["543","Venipede",11,7,1,1,1,1,1,1,0],["544","Whirlipede",11,7,0,0,1,1,0,1,0],["545","Scolipede",11,7,0,0,1,1,1,1,0],["546","Cottonee",4,17,1,1,1,1,0,0,0],["547","Whimsicott",4,17,0,0,1,1,0,0,0],["548","Petilil",4,-1,1,1,1,1,0,0,0],["549","Lilligant",4,-1,0,0,1,1,1,0,0],["550","Basculin",2,-1,1,1,2,2,0,0,0],["551","Sandile",8,15,1,1,1,1,0,0,0],["552","Krokorok",8,15,0,0,1,1,0,0,0],["553","Krookodile",8,15,0,0,1,1,1,0,0],["554","Darumaka",1,-1,2,2,2,2,1,0,0],["555","Darmanitan",1,-1,0,0,4,4,2,0,0],["556","Maractus",4,-1,1,1,1,1,0,0,0],["557","Dwebble",11,12,1,1,1,1,0,0,0],["558","Crustle",11,12,0,0,1,1,0,0,0],["559","Scraggy",15,6,1,1,1,1,1,0,0],["560","Scrafty",15,6,0,0,1,1,1,0,0],["561","Sigilyph",10,9,1,1,1,1,1,0,0],["562","Yamask",13,-1,2,2,2,2,0,0,0],["563","Cofagrigus",13,-1,0,0,1,1,0,0,0],["564","Tirtouga",2,12,1,1,1,1,0,0,0],["565","Carracosta",2,12,0,0,1,1,0,0,0],["566","Archen",12,9,1,1,1,1,0,0,0],["567","Archeops",12,9,0,0,1,1,1,0,0],["568","Trubbish",7,-1,1,1,1,1,0,0,0],["569","Garbodor",7,-1,0,0,1,1,0,0,0],["570","Zorua",15,-1,1,1,1,1,0,1,0],["571","Zoroark",15,-1,0,0,1,1,1,0,0],["572","Minccino",0,-1,1,1,1,1,0,0,0],["573","Cinccino",0,-1,0,0,1,1,0,0,0],["574","Gothita",10,-1,1,1,1,1,0,0,0],["575","Gothorita",10,-1,0,0,1,1,0,0,0],["576","Gothitelle",10,-1,0,0,1,1,0,0,0],["577","Solosis",10,-1,1,1,1,1,1,0,0],["578","Duosion",10,-1,0,0,1,1,0,0,0],["579","Reuniclus",10,-1,0,0,1,1,0,0,0],["580","Ducklett",2,9,1,1,1,1,1,0,0],["581","Swanna",2,9,0,0,1,1,1,0,0],["582","Vanillite",5,-1,1,1,1,1,1,0,0],["583","Vanillish",5,-1,0,0,1,1,0,0,0],["584","Vanilluxe",5,-1,0,0,1,1,0,0,0],["585","Deerling",0,4,1,1,1,1,1,0,0],["586","Sawsbuck",0,4,0,0,1,1,1,0,0],["587","Emolga",3,9,1,1,1,1,1,0,0],["588","Karrablast",11,-1,1,1,1,1,0,0,0],["589","Escavalier",11,16,0,0,1,1,0,0,0],["590","Foongus",4,7,1,1,1,1,0,0,0],["591","Amoonguss",4,7,0,0,1,1,0,0,0],["592","Frillish",2,13,1,1,1,1,0,0,0],["593","Jellicent",2,13,0,0,1,1,0,0,0],["594","Alomomola",2,-1,1,1,1,1,0,0,0],["595","Joltik",11,3,1,1,1,1,1,1,0],["596","Galvantula",11,3,0,0,1,1,1,0,0],["597","Ferroseed",4,16,1,1,1,1,0,0,0],["598","Ferrothorn",4,16,0,0,1,1,0,0,0],["599","Klink",16,-1,1,1,1,1,1,0,0],["600","Klang",16,-1,0,0,1,1,0,0,0],["601","Klinklang",16,-1,0,0,1,1,0,0,0],["602","Tynamo",3,-1,1,1,1,1,1,0,0],["603","Eelektrik",3,-1,0,0,1,1,1,0,0],["604","Eelektross",3,-1,0,0,1,1,1,0,0],["605","Elgyem",10,-1,1,1,1,1,0,0,0],["606","Beheeyem",10,-1,0,0,1,1,0,0,0],["607","Litwick",13,1,1,1,1,1,1,1,0],["608","Lampent",13,1,0,0,1,1,1,0,0],["609","Chandelure",13,1,0,0,1,1,1,0,0],["610","Axew",14,-1,1,1,1,1,0,0,0],["611","Fraxure",14,-1,0,0,1,1,0,0,0],["612","Haxorus",14,-1,0,0,1,1,0,0,0],["613","Cubchoo",5,-1,1,1,1,1,0,0,0],["614","Beartic",5,-1,0,0,1,1,0,0,0],["615","Cryogonal",5,-1,1,1,1,1,0,0,0],["616","Shelmet",11,-1,1,1,1,1,0,0,0],["617","Accelgor",11,-1,0,0,1,1,0,0,0],["618","Stunfisk",8,3,2,2,2,2,0,0,0],["619","Mienfoo",6,-1,1,1,1,1,0,0,0],["620","Mienshao",6,-1,0,0,1,1,0,0,0],["621","Druddigon",14,-1,1,1,1,1,0,0,0],["622","Golett",8,13,1,1,1,1,0,0,0],["623","Golurk",8,13,0,0,1,1,0,0,0],["624","Pawniard",15,16,1,1,1,1,0,0,0],["625","Bisharp",15,16,0,0,1,1,0,0,0],["626","Bouffalant",0,-1,1,1,1,1,0,0,0],["627","Rufflet",0,9,1,1,1,1,0,0,0],["628","Braviary",0,9,0,0,1,1,1,0,0],["629","Vullaby",15,9,1,1,1,1,0,0,0],["630","Mandibuzz",15,9,0,0,1,1,0,0,0],["631","Heatmor",1,-1,1,1,1,1,0,0,0],["632","Durant",11,16,1,1,1,1,0,0,0],["633","Deino",15,14,1,1,1,1,0,1,0],["634","Zweilous",15,14,0,0,1,1,0,0,0],["635","Hydreigon",15,14,0,0,1,1,0,0,0],["636","Larvesta",11,1,1,1,1,1,1,1,0],["637","Volcarona",11,1,0,0,1,1,0,0,0],["638","Cobalion",16,6,1,1,1,1,0,0,0],["639","Terrakion",12,6,1,1,1,1,0,0,0],["640","Virizion",4,6,1,1,1,1,0,0,0],["641","Tornadus",9,-1,1,1,2,2,0,0,0],["642","Thundurus",3,9,1,1,2,2,0,0,0],["643","Reshiram",14,1,1,1,1,1,0,0,0],["644","Zekrom",14,3,1,1,1,1,0,0,0],["645","Landorus",8,9,1,1,2,2,0,0,0],["646","Kyurem",14,5,1,1,3,3,0,0,0],["647","Keldeo",2,6,1,1,2,2,0,0,0],["648","Meloetta",0,10,1,1,2,2,0,0,0],["649","Genesect",11,16,1,1,5,5,0,0,0]],"6":[["650","Chespin",4,-1,1,1,1,1,0,0,0],["651","Quilladin",4,-1,0,0,1,1,0,0,0],["652","Chesnaught",4,6,0,0,1,1,0,0,0],["653","Fennekin",1,-1,1,1,1,1,1,1,0],["654","Braixen",1,-1,0,0,1,1,1,0,0],["655","Delphox",1,10,0,0,1,1,1,0,0],["656","Froakie",2,-1,1,1,1,1,0,0,0],["657","Frogadier",2,-1,0,0,1,1,0,0,0],["658","Greninja",2,15,0,0,1,1,0,0,0],["659","Bunnelby",0,-1,1,1,1,1,0,0,0],["660","Diggersby",0,8,0,0,1,1,0,0,0],["661","Fletchling",0,9,1,1,1,1,0,0,0],["662","Fletchinder",1,9,0,0,1,1,0,0,0],["663","Talonflame",1,9,0,0,1,1,0,0,0],["664","Scatterbug",11,-1,1,1,1,1,0,0,0],["665","Spewpa",11,-1,0,0,1,1,0,0,0],["666","Vivillon",11,9,0,0,1,1,1,0,0],["667","Litleo",1,0,1,1,1,1,0,0,0],["668","Pyroar",1,0,0,0,1,1,0,0,0],["669","Flabébé",17,-1,1,1,1,1,0,0,0],["670","Floette",17,-1,0,0,1,1,0,0,0],["671","Florges",17,-1,0,0,1,1,0,0,0],["672","Skiddo",4,-1,1,1,1,1,0,0,0],["673","Gogoat",4,-1,0,0,1,1,0,0,0],["674","Pancham",6,-1,1,1,1,1,0,1,0],["675","Pangoro",6,15,0,0,1,1,0,0,0],["676","Furfrou",0,-1,1,1,1,1,1,0,0],["677","Espurr",10,-1,1,1,1,1,0,0,0],["678","Meowstic",10,-1,0,0,1,1,1,0,0],["679","Honedge",16,13,1,1,1,1,0,1,0],["680","Doublade",16,13,0,0,1,1,0,0,0],["681","Aegislash",16,13,0,0,2,2,0,2,0],["682","Spritzee",17,-1,1,1,1,1,0,0,0],["683","Aromatisse",17,-1,0,0,1,1,0,0,0],["684","Swirlix",17,-1,1,1,1,1,0,0,0],["685","Slurpuff",17,-1,0,0,1,1,0,0,0],["686","Inkay",15,10,1,1,1,1,0,0,0],["687","Malamar",15,10,0,0,1,1,0,0,0],["688","Binacle",12,2,1,1,1,1,0,0,0],["689","Barbaracle",12,2,0,0,1,1,0,0,0],["690","Skrelp",7,2,1,1,1,1,0,0,0],["691","Dragalge",7,14,0,0,1,1,1,0,0],["692","Clauncher",2,-1,1,1,1,1,1,0,0],["693","Clawitzer",2,-1,0,0,1,1,0,0,0],["694","Helioptile",3,0,1,1,1,1,0,0,0],["695","Heliolisk",3,0,0,0,1,1,0,0,0],["696","Tyrunt",12,14,1,1,1,1,0,0,0],["697","Tyrantrum",12,14,0,0,1,1,0,0,0],["698","Amaura",12,5,1,1,1,1,1,0,0],["699","Aurorus",12,5,0,0,1,1,0,0,0],["700","Hawlucha",6,9,1,1,1,1,1,0,0],["701","Dedenne",3,17,1,1,1,1,0,0,0],["702","Carbink",12,17,1,1,1,1,0,0,0],["703","Goomy",14,-1,1,1,1,1,1,1,0],["704","Sliggoo",14,-1,0,0,1,1,1,1,0],["705","Goodra",14,-1,0,0,1,1,1,1,0],["706","Klefki",16,17,1,1,1,1,1,0,0],["707","Phantump",13,4,1,1,1,1,0,0,0],["708","Trevenant",13,4,0,0,1,1,1,0,0],["709","Pumpkaboo",13,4,1,1,4,4,3,0,0],["710","Gourgeist",13,4,0,0,4,4,1,0,0],["711","Bergmite",5,-1,1,1,1,1,0,0,0],["712","Avalugg",5,-1,0,0,1,1,0,0,0],["713","Noibat",9,14,1,1,1,1,1,1,0],["714","Noivern",9,14,0,0,1,1,1,0,0],["715","Xerneas",17,-1,1,1,1,1,0,0,0],["716","Yveltal",15,9,1,1,1,1,0,0,0],["717","Zygarde",14,8,1,1,4,4,0,0,0],["718","Diancie",12,17,1,1,2,2,0,0,0],["719","Hoopa",10,13,1,1,2,2,0,0,0],["720","Volcanion",1,2,1,1,1,1,0,0,0]],"7":[["721","Rowlet",4,9,1,1,1,1,0,0,0],["722","Dartrix",4,9,0,0,1,1,0,0,0],["723","Decidueye",4,13,0,0,2,2,2,0,0],["724","Litten",1,-1,1,1,1,1,1,0,0],["725","Torracat",1,-1,0,0,1,1,0,0,0],["726","Incineroar",1,15,0,0,1,1,0,0,0],["727","Popplio",2,-1,1,1,1,1,0,0,0],["728","Brionne",2,-1,0,0,1,1,0,0,0],["729","Primarina",2,17,0,0,1,1,0,0,0],["730","Pikipek",0,9,1,1,1,1,0,0,0],["731","Trumbeak",0,9,0,0,1,1,0,0,0],["732","Toucannon",0,9,0,0,1,1,0,0,0],["733","Yungoos",0,-1,1,1,1,1,0,0,0],["734","Gumshoos",0,-1,0,0,2,2,0,0,0],["735","Grubbin",11,-1,1,1,1,1,0,0,0],["736","Charjabug",11,3,0,0,1,1,0,0,0],["737","Vikavolt",11,3,0,0,2,2,1,0,0],["738","Crabrawler",6,-1,1,1,1,1,0,0,0],["739","Crabominable",6,5,0,0,1,1,0,0,0],["740","Oricorio",1,9,1,1,4,4,3,0,0],["741","Cutiefly",11,17,1,1,1,1,1,0,0],["742","Ribombee",11,17,0,0,2,2,2,0,0],["743","Rockruff",12,-1,1,1,1,1,1,1,0],["744","Lycanroc",12,-1,0,0,3,3,3,1,0],["745","Wishiwashi",2,-1,1,1,3,3,1,0,0],["746","Mareanie",7,2,1,1,1,1,0,0,0],["747","Toxapex",7,2,0,0,1,1,0,0,0],["748","Mudbray",8,-1,1,1,1,1,0,0,0],["749","Mudsdale",8,-1,0,0,1,1,0,0,0],["750","Dewpider",2,11,1,1,1,1,0,0,0],["751","Araquanid",2,11,0,0,2,2,2,0,0],["752","Fomantis",4,-1,1,1,1,1,0,0,0],["753t","Lurantis",4,-1,0,0,2,2,2,0,0],["754","Morelull",4,17,1,1,1,1,0,0,0],["755","Shiinotic",4,17,0,0,1,1,0,0,0],["756","Salandit",7,1,1,1,1,1,1,0,0],["757","Salazzle",7,1,0,0,2,2,2,0,0],["758","Stufful",0,6,1,1,1,1,1,0,0],["759","Bewear",0,6,0,0,1,1,0,0,0],["760","Bounsweet",4,-1,1,1,1,1,0,0,0],["761","Steenee",4,-1,0,0,1,1,0,0,0],["762","Tsareena",4,-1,0,0,1,1,0,0,0],["763","Comfey",17,-1,1,1,1,1,1,0,0],["764","Oranguru",0,10,1,1,1,1,0,0,0],["765","Passimian",6,-1,1,1,1,1,0,0,0],["766","Wimpod",11,2,1,1,1,1,0,0,0],["767","Golisopod",11,2,0,0,1,1,0,0,0],["768","Sandygast",13,8,1,1,1,1,1,1,0],["769","Palossand",13,8,0,0,1,1,1,0,0],["770","Pyukumuku",2,-1,1,1,1,1,0,0,0],["771","Type: Null",0,-1,1,1,1,1,0,0,0],["772","Silvally",0,-1,0,0,18,18,0,0,0],["773","Minior",12,9,1,1,2,2,0,0,0],["774","Komala",0,-1,1,1,1,1,1,0,0],["775","Turtonator",1,14,1,1,1,1,0,0,0],["776","Togedemaru",3,16,1,1,2,2,1,1,0],["777","Mimikyu",13,17,1,1,2,2,2,0,0],["778","Bruxish",2,10,1,1,1,1,0,0,0],["779","Drampa",0,14,1,1,1,1,1,0,0],["780","Dhelmise",13,4,1,1,1,1,0,0,0],["781","Jangmo-o",14,-1,1,1,1,1,1,1,0],["782","Hakamo-o",14,6,0,0,1,1,0,0,0],["783","Kommo-o",14,6,0,0,2,2,1,0,0],["784","Tapu Koko",3,17,1,1,1,1,0,0,0],["785","Tapu Lele",10,17,1,1,1,1,0,0,0],["786","Tapu Bulu",4,17,1,1,1,1,0,0,0],["787","Tapu Fini",2,17,1,1,1,1,0,0,0],["788","Cosmog",10,-1,1,1,1,1,0,0,0],["789","Cosmoem",10,-1,0,0,1,1,0,0,0],["790","Solgaleo",10,16,0,0,1,1,0,0,0],["791","Lunala",10,13,0,0,1,1,0,0,0],["792","Nihilego",12,7,1,1,1,1,0,0,0],["793","Buzzwole",11,6,1,1,1,1,0,0,0],["794","Pheromosa",11,6,1,1,1,1,0,0,0],["795","Xurkitree",3,-1,1,1,1,1,0,0,0],["796","Celesteela",16,9,1,1,1,1,0,0,0],["797","Kartana",4,16,1,1,1,1,0,0,0],["798","Guzzlord",15,14,1,1,1,1,0,0,0],["799","Poipole",7,-1,1,1,1,1,0,0,0],["800","Naganadel",7,14,0,0,1,1,0,0,0],["801","Stakataka",12,16,1,1,1,1,0,0,0],["802","Blacephalon",1,13,1,1,1,1,0,0,0],["803","Necrozma",10,-1,1,1,4,4,0,0,0],["804","Magearna",16,17,1,1,1,1,0,0,0],["805","Marshadow",6,13,1,1,1,1,0,0,0],["806","Zeraora",3,-1,1,1,1,1,0,0,0],["807","Meltan",16,-1,1,1,1,1,0,0,0],["808","Melmetal",16,-1,0,0,1,1,0,0,0]],"8":[["809","Grookey",4,-1,1,1,1,1,0,0,0],["810","Thwackey",4,-1,0,0,1,1,0,0,0],["811","Rillaboom",4,-1,0,0,1,1,0,0,0],["812","Scorbunny",1,-1,1,1,1,1,0,0,0],["813","Raboot",1,-1,0,0,1,1,0,0,0],["814","Cinderace",1,-1,0,0,1,1,0,0,0],["815","Sobble",2,-1,1,1,1,1,0,0,0],["816","Drizzile",2,-1,0,0,1,1,0,0,0],["817","Inteleon",2,-1,0,0,1,1,0,0,0],["818","Skwovet",0,-1,1,1,1,1,0,0,0],["819","Greedent",0,-1,0,0,1,1,0,0,0],["820","Rookidee",9,-1,1,1,1,1,1,1,0],["821","Corvisquire",9,-1,0,0,1,1,1,1,0],["822","Corviknight",9,16,0,0,1,1,1,1,0],["823","Blipbug",11,-1,1,1,1,1,0,0,0],["824","Dottler",11,10,0,0,1,1,0,0,0],["825","Orbeetle",11,10,0,0,1,1,0,0,0],["826","Nickit",15,-1,1,1,1,1,1,1,0],["827","Thievul",15,-1,0,0,1,1,0,0,0],["828","Gossifleur",4,-1,1,1,1,1,0,0,0],["829","Eldegoss",4,-1,0,0,1,1,0,0,0],["830","Wooloo",0,-1,1,1,1,1,0,0,0],["831","Dubwool",0,-1,0,0,1,1,0,0,0],["832","Chewtle",2,-1,1,1,1,1,0,0,0],["833","Drednaw",2,12,0,0,1,1,0,0,0],["834","Yamper",3,-1,1,1,1,1,0,0,0],["835","Boltund",3,-1,0,0,1,1,0,0,0],["836","Rolycoly",12,-1,1,1,1,1,0,0,0],["837","Carkol",12,1,0,0,1,1,0,0,0],["838","Coalossal",12,1,0,0,1,1,0,0,0],["839","Applin",4,14,1,1,1,1,1,0,0],["840","Flapple",4,14,0,0,1,1,1,0,0],["841","Appletun",4,14,0,0,1,1,0,0,0],["842","Silicobra",8,-1,1,1,1,1,0,0,0],["843","Sandaconda",8,-1,0,0,1,1,0,0,0],["844","Cramorant",9,2,1,1,3,3,0,0,0],["845","Arrokuda",2,-1,1,1,1,1,0,0,0],["846","Barraskewda",2,-1,0,0,1,1,0,0,0],["847","Toxel",3,7,1,1,1,1,1,0,0],["848","Toxtricity",3,7,0,0,2,2,2,0,0],["849","Sizzlipede",1,11,1,1,1,1,0,0,0],["850","Centiskorch",1,11,0,0,1,1,0,0,0],["851","Clobbopus",6,-1,1,1,1,1,0,0,0],["852","Grapploct",6,-1,0,0,1,1,0,0,0],["853","Sinistea",13,-1,1,1,1,1,1,1,0],["854","Polteageist",13,-1,0,0,1,1,0,0,0],["855","Hatenna",10,-1,1,1,1,1,0,0,0],["856","Hattrem",10,-1,0,0,1,1,0,0,0],["857","Hatterene",10,17,0,0,1,1,0,0,0],["858","Impidimp",15,17,1,1,1,1,0,0,0],["859","Morgrem",15,17,0,0,1,1,0,0,0],["860","Grimmsnarl",15,17,0,0,1,1,0,0,0],["861","Obstagoon",15,0,0,0,1,1,0,0,0],["862","Perrserker",16,-1,0,0,1,1,0,0,0],["863","Cursola",13,-1,0,0,1,1,1,0,0],["864","Sirfetch'd",6,-1,0,0,1,1,0,0,0],["865","Mr. Rime",5,10,0,0,1,1,0,0,0],["866","Runerigus",8,13,0,0,1,1,0,0,0],["867","Milcery",17,-1,1,1,1,1,1,0,0],["868","Alcremie",17,-1,0,0,1,1,0,0,0],["869","Falinks",6,-1,1,1,1,1,0,0,0],["870","Pincurchin",3,-1,1,1,1,1,0,0,0],["871","Snom",5,11,1,1,1,1,1,1,0],["872","Frosmoth",5,11,0,0,1,1,0,0,0],["873","Stonjourner",12,-1,1,1,1,1,0,0,0],["874","Eiscue",5,-1,1,1,2,2,0,0,0],["875","Indeedee",10,0,1,1,2,2,1,0,0],["876","Morpeko",3,15,1,1,2,2,0,0,0],["877","Cufant",16,-1,1,1,1,1,0,0,0],["878","Copperajah",16,-1,0,0,1,1,0,0,0],["879","Dracozolt",3,14,1,1,1,1,0,0,0],["880","Arctozolt",3,5,1,1,1,1,0,0,0],["881","Dracovish",2,14,1,1,1,1,0,0,0],["882","Arctovish",2,5,1,1,1,1,0,0,0],["883","Duraludon",16,14,1,1,1,1,0,0,0],["884","Dreepy",14,13,1,1,1,1,0,0,0],["885","Drakloak",14,13,0,0,1,1,0,0,0],["886","Dragapult",14,13,0,0,1,1,0,0,0],["887","Zacian",17,-1,1,1,2,2,0,0,0],["888","Zamazenta",6,-1,1,1,2,2,0,0,0],["889","Eternatus",7,14,1,1,1,1,0,0,0],["890","Kubfu",6,-1,1,1,1,1,0,0,0],["891","Urshifu",6,15,0,0,2,2,0,0,0],["892","Zarude",15,4,1,1,1,1,0,0,0],["893","Regieleki",3,-1,1,1,1,1,0,0,0],["894","Regidrago",14,-1,1,1,1,1,0,0,0],["895","Glastrier",5,-1,1,1,1,1,0,0,0],["896","Spectrier",13,-1,1,1,1,1,0,0,0],["897","Calyrex",10,4,1,1,3,3,0,0,0]],"97":[["000a1","Lunupine",15,-1,1,1,1,1,0,0,0],["000-L","Lunupine/Mega Forme Q",15,17,0,0,1,1,0,0,0],["000a2","Blophin",2,-1,1,1,1,1,0,0,0],["000a3","Inflale",2,-1,0,0,1,1,0,0,0],["000a4","Orkit",2,-1,1,1,1,1,0,0,0],["000a6","Orcalot",2,16,0,0,1,1,0,0,0],["000a7","Faemueño",17,9,1,1,1,1,0,0,0],["000a8","Faemilarín",17,9,0,0,1,1,0,0,0],["000a9","Faemísimo",17,9,0,0,1,1,0,0,0],["000aa","Wagell",7,17,1,1,1,1,0,0,0],["000ab","Wanamangora",7,17,0,0,1,1,0,0,0],["000-W","Wanamangora/Mega Forme Q",7,17,0,0,1,1,0,0,0],["000ac","Gosold",0,9,1,1,1,1,0,0,0],["000ad","Goldesem",10,9,0,0,1,1,0,0,0],["000ae","Impyre",15,-1,1,1,1,1,1,0,0],["000af","Baflammet",15,1,0,0,1,1,1,0,0],["000ag","Searene",14,2,1,1,1,1,0,0,0],["000ah","Solynx",1,-1,1,1,1,1,0,0,0],["000-S","Solynx/Mega Forme Q",1,3,0,0,1,1,0,0,0],["000ai","Ardik",5,-1,1,1,1,1,0,0,0],["000aj","Sibex",5,-1,0,0,1,1,0,0,0],["000ak","Boxaby",12,6,1,1,1,1,0,0,0],["000al","Kangspar",12,6,0,0,1,1,0,0,0],["000-X","Kangspar/Mega Forme Q",12,6,0,0,1,1,0,1,0],["000am","Bunbori",5,17,1,1,1,1,1,0,0],["000-B","Bunbori/Mega Forme Q",5,17,0,0,1,1,1,0,0],["000an","Taiveret",4,-1,1,1,1,1,0,0,0],["000ao","Taipaeus",4,-1,0,0,1,1,0,0,0],["000ap","Taimorpha",4,6,0,0,1,1,1,0,0],["000aq","Flarbat",1,9,1,1,1,1,0,0,0],["000ar","Flarotis",1,17,0,0,1,1,0,0,0],["000as","Flaroptera",1,17,0,0,1,1,0,0,0],["000at","Hydrark",2,-1,1,1,1,1,0,0,0],["000au","Hydrinus",2,-1,0,0,1,1,0,0,0],["000av","Hydrinifor",2,16,0,0,1,1,0,0,0],["000aw","Gragon",13,14,1,1,1,1,0,0,0],["000ay","Greegon",13,14,0,0,1,1,0,0,0],["000az","Avaragon",13,14,0,0,1,1,0,0,0],["000b0","Kinaster",15,1,1,1,1,1,0,0,0],["000b1","Luckoo",4,9,1,1,1,1,0,0,0],["000b2","Peckoo",4,9,0,0,1,1,0,0,0],["000b3","Peekoo",4,10,0,0,1,1,0,0,0],["000b4","Arasprit",8,-1,1,1,1,1,0,0,0],["000b5","Arthreux",8,11,0,0,1,1,0,0,0],["000b6","Quetzephyr",3,9,1,1,1,1,0,0,0],["000b7","Quetzaptyl",3,9,0,0,1,1,0,0,0],["000b8","Pixrine",12,17,1,1,1,1,0,0,0],["000b9","Kitsunari",10,-1,1,1,1,1,0,0,0],["000ba","Kitsubuki",10,13,0,0,1,1,0,0,0],["000bb","Kryptik",12,13,1,1,1,1,0,0,0],["000bc","Bandicoon",0,15,1,1,1,1,0,0,0],["000bd","Phastix",11,-1,1,1,1,1,0,0,0],["000be","Phasmaleef/Forest Forme",11,-1,0,0,1,1,0,0,0],["000bf","Phasmaleef/Desert Forme",11,-1,0,0,1,1,0,0,0],["000bg","Pasovan",0,-1,1,1,1,1,0,0,0],["000bh","Glaquine",5,-1,1,1,1,1,1,0,0],["000bi","Cavallost",5,-1,0,0,1,1,0,0,0],["000bk","Minibbit",16,-1,1,1,1,1,1,0,0],["000bl","Metabbit",16,-1,0,0,1,1,0,0,0],["000bm","Terabbit",16,-1,0,0,1,1,0,0,0],["000-T","Terabbit/Mega Forme Q",16,-1,0,0,1,1,0,0,0],["000bn","Tillink",8,-1,1,1,1,1,0,0,0],["000bo","Terrink",8,-1,0,0,1,1,0,0,0],["000bp","Bezerell",2,15,1,1,1,1,0,0,0],["000bq","Bezermuur",2,15,0,0,1,1,0,0,0],["000br","Bezermuut",2,15,0,0,1,1,0,0,0],["000bt","Ayeren",0,10,1,1,1,1,0,0,0],["000bu","Aytheraye",0,13,0,0,1,1,0,0,0],["000bv","Skeleco",2,13,1,1,1,1,0,0,0],["000bw","Phantiidae",2,13,0,0,1,1,0,0,0],["000bx","Klaatupillar",11,-1,1,1,1,1,0,0,0],["000by","Charaxalis",11,-1,0,0,1,1,0,0,0],["000bz","Incantasius",11,10,0,0,1,1,0,0,0],["000c0","Maravol",11,7,1,1,1,1,0,0,0],["000cm","Kyutopi",10,17,1,1,1,1,0,0,0],["000cn","Konatus",10,17,0,0,1,1,0,0,0],["000co","Kenyip",8,-1,1,1,1,1,0,0,0],["000cp","Arfrica",8,6,0,0,1,1,0,0,0],["000cq","Kalahowli",8,6,0,0,1,1,0,0,0],["000cr","Petripeep",12,-1,1,1,1,1,0,0,0],["000cs","Chirock",12,14,0,0,1,1,0,0,0],["000ct","Toxitrice",12,14,0,0,1,1,0,0,0],["000cu","Serpetone",12,7,0,0,1,1,0,0,0],["000cv","Toxilisk",12,7,0,0,1,1,0,0,0],["000cw","Gumairy",4,17,1,1,1,1,0,0,0],["000cx","Eucylph",4,17,0,0,1,1,0,0,0],["000cy","Puppod",7,0,1,1,1,1,1,0,0],["000cz","Slugdog",7,0,0,0,1,1,1,0,0],["000d0","Rokiwi",4,-1,1,1,1,1,0,0,0],["000d1","Brushiwi",4,15,0,0,1,1,0,0,0],["000d2","Alicalf",5,12,1,1,1,1,0,0,0],["000d3","Cetacorn",5,12,0,0,1,1,0,0,0],["000d4","Valkind",17,6,1,1,1,1,0,0,0],["000d5","Frayja",17,6,0,0,1,1,0,0,0],["000d6","Croaket",15,-1,1,1,1,1,0,0,0],["000d7","Quibbit/Toxic Forme",15,7,0,0,1,1,0,0,0],["000d8","Quibbit/Charged Forme",15,3,0,0,1,1,0,0,0],["000d9","Quibbit/Herbal Forme",15,4,0,0,1,1,0,0,0],["000da","Quibbit/Magma Forme",15,1,0,0,1,1,0,0,0],["000db","Quibbit/Fae Forme",15,17,0,0,1,1,0,0,0],["000de","Slypin",10,15,1,1,1,1,0,0,0],["000df","Haredini",10,15,0,0,1,1,0,0,0],["000dg","Selkrub",11,7,1,1,1,1,0,0,0],["000dh","Aqrabion",11,7,0,0,1,1,0,0,0],["000di","Skargas",11,7,0,0,1,1,0,0,0],["000dj","Kawotor",2,0,1,1,1,1,0,0,0],["000dk","Lutriva",2,6,0,0,1,1,0,0,0],["000dl","Selutian",2,5,0,0,1,1,0,0,0],["000dm","Kitwurm",11,-1,1,1,1,1,0,0,0],["000dn","Purrpa",11,-1,0,0,1,1,0,0,0],["000do","Moffkat",11,17,0,0,1,1,0,0,0],["000dp","Pepyre",4,1,1,1,1,1,0,0,0],["000dq","Skarasear",4,1,0,0,1,1,0,0,0],["000dr","Aphreyd",11,-1,1,1,1,1,0,0,0],["000ds","Scavady",11,-1,0,0,1,1,0,0,0],["000dt","Mantidra",11,14,0,0,1,1,0,0,0],["000du","Caimaw",16,-1,1,1,1,1,0,0,0],["000dv","Caimangle",16,-1,0,0,1,1,0,0,0],["000dw","Valimp",17,15,1,1,1,1,0,0,0],["000dx","Valladox",17,15,0,0,1,1,0,0,0],["000dy","Valenoir",17,15,0,0,1,1,0,0,0],["000dz","Frusky",5,-1,1,1,1,1,0,0,0],["000f0","Glacifur",5,-1,0,0,1,1,0,0,0],["000f1","Skyrie",9,-1,1,1,1,1,0,0,0],["000f2","Grymphony",9,-1,0,0,1,1,0,0,0],["000f3","Shinorin",14,6,1,1,1,1,0,0,0],["000f4","Shinorin/Incandescent",14,1,0,0,1,1,0,0,0],["000f5","Sikannos",0,1,1,1,1,1,0,0,0],["000f6","Sikannos/Unfettered",13,1,0,0,1,1,0,0,0],["000f7","Goschief",17,-1,1,1,1,1,0,0,0],["000f8","Havonk",17,15,0,0,1,1,0,0,0],["000f9","Mocknock",13,16,1,1,1,1,0,0,0],["000fa","Portalgeist",13,16,0,0,1,1,0,0,0],["000fb","Flurrawr/Boreal",5,-1,1,1,1,1,0,0,0],["000fc","Flurrawr/Austral",5,-1,0,0,1,1,0,0,0],["000fd","Tundrasail/Boreal",5,8,0,0,1,1,0,0,0],["000fe","Tundrasail/Austral",5,8,0,0,1,1,0,0,0],["000ff","Parapod",4,-1,1,1,1,1,0,0,0],["000fg","Craysprout",4,-1,0,0,1,1,0,0,0],["000fh","Strelitzgon",4,14,0,0,1,1,0,0,0],["000fi","Caprikid",6,-1,1,1,1,1,0,0,0],["000fj","Saytaries",6,16,0,0,1,1,0,0,0],["000fk","Taurminos",6,15,0,0,1,1,0,0,0],["000fl","Sagidamas",6,17,0,0,1,1,0,1,0],["000fm","Tenrekki",3,8,1,1,1,1,0,0,0],["000fn","Possmol",0,-1,1,1,1,1,0,0,0],["000fo","Opposham",0,7,0,0,1,1,0,0,0],["000fp","Opposkull",13,7,0,0,1,1,0,0,0],["000fq","Lunamor",17,-1,1,1,1,1,0,0,0],["000fr","Astrolochi",17,12,0,0,1,1,0,0,0],["000fs","Exilant",16,13,1,1,1,1,0,0,0],["000ft","Scorupt",16,13,0,0,1,1,0,0,0],["000fu","Lyruse",16,17,1,1,1,1,0,0,0],["000fv","Musharp",16,17,0,0,1,1,0,0,0],["000fw","Smokackle",1,0,1,1,1,1,0,0,0],["000fx","Hycano",1,12,0,0,1,1,0,0,0],["000fy","Inferial",14,-1,1,1,1,1,0,0,0],["000fz","Gargodyle",14,9,0,0,1,1,0,0,0],["000g0","Mirrasma",13,14,1,1,1,1,0,0,0],["000g1","Mirrarch",13,14,0,0,1,1,0,0,0],["000g2","Slithugi",13,8,1,1,1,1,0,0,0],["000g3","Sugikobra",13,8,0,0,1,1,0,0,0]],"98":[["012-Q","Butterfree/Mega Forme Q",11,10,0,0,1,1,1,0,0],["024-Q","Arbok/Mega Forme Q",7,15,0,0,1,1,0,0,0],["027-Q","Raichu/Mega Forme Q",3,6,0,0,1,1,1,0,0],["039-Q","Ninetales/Mega Forme Q",1,10,0,0,1,1,1,0,0],["057-Q","Persian/Mega Forme Q",0,13,0,0,1,1,0,0,0],["063-Q","Arcanine/Mega Forme Q",1,14,0,0,1,1,1,0,0],["083-Q","Rapidash/Mega Forme Q",1,9,0,0,1,1,1,0,0],["090-Q","Farfetch'd/Mega Forme Q",0,9,0,0,1,1,1,0,0],["094-Q","Dewgong/Mega Forme Q",2,5,0,0,1,1,1,0,0],["113-Q","Marowak/Alolan Mega Forme Q",1,13,0,0,1,1,0,0,0],["136-Q","Jynx/Mega Forme Q",5,10,0,0,1,1,0,0,0],["141-Q","Lapras/Mega Forme Q",2,5,0,0,1,1,0,0,0],["144-Q","Vaporeon/Mega Forme Q",2,-1,0,0,1,1,0,0,0],["145-Q","Jolteon/Mega Forme Q",3,-1,0,0,1,1,0,0,0],["146-Q","Flareon/Mega Forme Q",1,-1,0,0,1,1,1,0,0],["147-Q","Espeon/Mega Forme Q",10,-1,0,0,1,1,0,0,0],["148-Q","Umbreon/Mega Forme Q",15,-1,0,0,1,1,0,0,0],["149-Q","Leafeon/Mega Forme Q",4,-1,0,0,1,1,0,0,0],["150-Q","Glaceon/Mega Forme Q",5,-1,0,0,1,1,1,0,0],["151-Q","Sylveon/Mega Forme Q",17,-1,0,0,1,1,0,0,0],["164-Q","Dragonite/Mega Forme Q",14,9,0,0,1,1,0,0,0],["166-Q","Mew/Mega Forme Q",10,-1,0,0,1,1,1,0,0],["177-Q","Furret/Mega Forme Q",0,14,0,0,1,1,0,0,0],["201-Q","Jumpluff/Mega Forme Q",4,17,0,0,1,1,1,0,0],["215-Q","Girafarig/Mega Forme Q",0,10,0,0,1,1,0,0,0],["218-Q","Dunsparce/Mega Forme Q",0,14,0,0,1,1,1,0,0],["227-Q","Weavile/Mega Forme Q",15,5,0,0,1,1,1,0,0],["239-Q","Skarmory/Mega Forme Q",16,14,0,0,1,1,0,0,0],["263-Q","Lugia/Mega Forme Q",10,9,0,0,1,1,0,0,0],["264-Q","Ho-oh/Mega Forme Q",1,9,0,0,1,1,0,0,0],["265-Q","Celebi/Mega Forme Q",10,4,0,0,1,1,0,1,0],["276-Q","Mightyena/Mega Forme Q",15,-1,0,0,1,1,1,0,0],["301-Q","Breloom/Mega Forme Q",4,6,0,0,1,1,0,0,0],["325-Q","Manectric/Mega Forme Q",3,1,0,0,1,1,0,1,0],["335-Q","Wailord/Mega Forme Q",2,9,0,0,1,1,0,0,0],["344-Q","Flygon/Mega Forme Q",8,14,0,0,1,1,0,0,0],["349-Q","Zangoose/Mega Forme Q",0,15,0,0,1,1,0,1,0],["350-Q","Seviper/Mega Forme Q",7,2,0,0,1,1,0,0,0],["364-Q","Milotic/Mega Forme Q",2,17,0,0,1,1,1,0,0],["380-Q","Froslass/Mega Forme Q",5,13,0,0,1,1,1,0,0],["403-Q","Jirachi/Mega Forme Q",16,10,0,0,1,1,0,0,0],["423-Q","Luxray/Mega Forme Q",3,15,0,0,1,1,0,0,0],["438-Q","Floatzel/Mega Forme Q",2,-1,0,0,1,1,0,0,0],["471-Q","Lumineon/Mega Forme Q",2,17,0,0,1,1,0,0,0],["487-Q","Giratina/Mega Forme Q",13,14,0,0,1,1,0,0,0],["490-Q","Manaphy/Mega Forme Q",2,17,0,0,1,1,0,0,0],["494-Q","Victini/Mega Forme Q",10,1,0,0,1,1,0,0,0],["510-Q","Liepard/Mega Forme Q",15,-1,0,0,1,1,1,0,0],["545-Q","Scolipede/Mega Forme Q",11,7,0,0,1,1,0,0,0],["560-Q","Scrafty/Mega Forme Q",15,6,0,0,1,1,0,1,0],["571-Q","Zoroark/Mega Forme Q",15,-1,0,0,1,1,0,0,0],["586-Q","Sawsbuck/Mega Forme Q",17,4,0,0,1,1,0,0,0],["609-Q","Chandelure/Mega Forme Q",13,1,0,0,1,1,0,1,0],["612-Q","Haxorus/Mega Forme Q",14,16,0,0,1,1,1,0,0],["614-Q","Beartic/Mega Forme Q",5,-1,0,0,1,1,1,0,0],["621-Q","Druddigon/Mega Forme Q",14,12,0,0,1,1,0,0,0],["668-Q","Pyroar/Mega Forme Q",1,0,0,0,1,1,1,0,0],["673-Q","Gogoat/Mega Forme Q",4,-1,0,0,1,1,1,0,0],["695-Q","Heliolisk/Mega Forme Q",3,1,0,0,1,1,0,0,0],["700-Q","Hawlucha/Mega Forme Q",6,9,0,0,1,1,0,0,0],["705-Q","Goodra/Mega Forme Q",14,7,0,0,1,1,0,1,0],["714-Q","Noivern/Mega Forme Q",9,14,0,0,1,1,0,1,0],["762-Q","Tsareena/Mega Forme Q",4,6,0,0,1,1,1,0,0]],"99":[["019s1","Saiyan Rattata",0,6,1,1,1,1,1,1,0],["019s2","Super-Saiyan Rattata",0,6,0,0,1,1,1,1,0],["020s1","Super-Saiyan Raticate",0,6,0,0,1,1,0,0,0],["020s2","Super-Saiyan 2 Raticate",0,6,0,0,1,1,0,0,0],["020-S","Super-Saiyan 3 Raticate",0,6,0,0,1,1,1,0,0],["020-T","Super-Saiyan 4 Raticate",0,6,0,0,1,1,1,0,0],["025f","Flying Pichu",3,-1,1,1,1,1,0,0,0],["025s","Surfing Pichu",3,-1,1,1,1,1,0,0,0],["026f","Flying Pikachu",3,-1,0,0,1,1,0,0,0],["026s","Surfing Pikachu",3,-1,0,0,1,1,0,0,0],["026w","Snowboarding Pikachu",3,-1,0,0,1,1,0,0,0],["027f","Flying Raichu",3,9,0,0,1,1,0,0,0],["027s","Surfing Raichu",3,2,0,0,1,1,0,0,0],["027w","Snowboarding Raichu",3,5,0,0,1,1,0,0,0],["029t","Sandslash/Totem Forme Q",8,-1,0,0,1,1,0,0,0],["035s","Shooting Star Cleffa",17,-1,1,1,1,1,1,0,0],["036s","Shooting Star Clefairy",17,-1,0,0,1,1,1,0,0],["037s","Shooting Star Clefable",17,-1,0,0,1,1,0,0,0],["038a","Koroku",1,5,1,1,1,1,0,0,0],["039-A","Kyukori",1,5,0,0,1,1,0,0,0],["040g","Guild Igglybuff",0,17,1,1,1,1,0,0,0],["041g","Guild Jigglypuff",0,17,0,0,1,1,0,0,0],["042g","Guild Wigglytuff",0,17,0,0,1,1,0,0,0],["062x","Apocalyptic Growlithe",1,-1,1,1,1,1,0,0,0],["063x","Apocalyptic Arcanine",1,1,0,0,1,1,0,0,0],["084s","Snowpoke",5,10,1,1,1,1,0,0,0],["085s","Snowbro",5,10,0,0,1,1,0,0,0],["086s","Snowking",5,10,0,0,1,1,0,0,0],["108ds","Death Star Voltorb",3,-1,1,1,1,1,0,0,0],["109ds","Death Star Electrode",3,-1,0,0,1,1,0,0,0],["189e","Early Bird Natu",10,9,1,1,1,1,0,0,0],["190e","Early Bird Xatu",10,9,0,0,1,1,0,0,0],["198t","Sudowoodo/Totem Forme Q",12,-1,0,0,1,1,0,0,0],["208e","Wooper/Galvanic",3,-1,1,1,1,1,0,0,0],["209e","Quagsire/Galvanic",3,-1,0,0,1,1,0,0,0],["219v","Gligar/Vampire",8,9,1,1,1,1,0,0,0],["220v","Gliscor/Vampire",8,9,0,0,1,1,0,0,0],["225s","Scaracross",11,13,1,1,1,1,0,0,0],["226p","Snichu",15,3,1,1,1,1,0,0,0],["227p","Vilechu",15,3,0,0,1,1,0,0,0],["230bm","Blue Moon Slugma",2,-1,1,1,1,1,0,0,0],["231bm","Blue Moon Magcargo",2,12,0,0,1,1,0,0,0],["240c","Houndour/Orthrus",1,14,1,1,1,1,1,0,0],["240i","Frosdour",15,5,1,1,1,1,0,0,0],["241c","Houndoom/Cerberus",1,14,0,0,1,1,0,0,0],["241i","Chilldoom",15,5,0,0,1,1,1,0,0],["243t","Donphan/Totem Forme Q",8,-1,0,0,1,1,0,0,0],["263xd","XD001",10,9,1,1,1,1,1,0,0],["275x","Apocalyptic Poochyena",15,13,1,1,1,1,1,0,0],["276x","Apocalyptic Mightyena",15,13,0,0,1,1,0,0,0],["294b","Snoralts",5,17,1,1,1,1,0,0,0],["295b","Snolia",5,17,0,0,1,1,0,0,0],["296b","Frosvoir",5,13,0,0,1,1,0,1,0],["297b","Glaillade",5,6,0,0,1,1,0,0,0],["300x","Apocalyptic Shroomish",4,7,1,1,1,1,0,0,0],["301x","Apocalyptic Breloom",4,7,0,0,1,1,0,0,0],["336i","Numel/Arctic",5,8,1,1,1,1,0,0,0],["337i","Camerupt/Arctic",5,8,0,0,1,1,0,0,0],["354t","Whiscash/Totem Forme Q",2,8,0,0,1,1,0,0,0],["383t","Walrein/Totem Forme Q",5,2,0,0,1,1,0,0,0],["402f","Ryukuza",14,9,1,1,1,1,0,0,0],["402m","Magquaza",14,13,1,1,1,1,0,0,0],["405s","Seasonal Turtwig",4,-1,1,1,1,1,1,0,0],["406s","Seasonal Grotle",4,-1,0,0,1,1,0,0,0],["407s","Seasonal Torterra",4,-1,0,0,1,1,0,0,0],["417b","Bidoof/Igneous",1,-1,1,1,1,1,0,0,0],["418b","Bibarel/Igneous",1,12,0,0,1,1,0,0,0],["421f","Shinxel",3,2,1,1,1,1,0,0,0],["422f","Fluxio",3,2,0,0,1,1,0,0,0],["423f","Fluxray",3,2,0,0,1,1,0,0,0],["423-F","Fluxray/Mega Forme Q",3,2,0,0,1,1,0,0,0],["434s","Snow Combee",11,5,1,1,1,1,0,0,0],["435s","Snow Vespiquen",11,5,0,0,1,1,0,0,0],["435t","Snow Vespiquen/Totem Forme Q",11,5,0,0,1,1,0,0,0],["447i","Glameow/Siberian",0,5,1,1,1,1,0,0,0],["448i","Purugly/Siberian",0,5,0,0,1,1,0,0,0],["450t","Skuntank/Totem Forme Q",7,15,0,0,1,1,1,1,0],["457t","Spiritomb/Totem Forme Q",13,15,0,0,1,1,1,0,0],["458a","Gibolu",14,6,1,1,1,1,0,0,0],["459a","Gabolu",14,6,0,0,1,1,0,0,0],["460a","Garcario",14,6,0,0,1,1,0,0,0],["478t","Porygon-Z/Totem Forme Q",0,-1,0,0,1,1,0,1,0],["483p","Dialga/Primal Forme Q",16,14,0,0,1,1,0,0,0],["484p","Palkia/Primal Forme Q",2,14,0,0,1,1,0,0,0],["509h","Purrloin/Hallowe'en Witch",15,-1,1,1,1,1,0,0,0],["510h","Liepard/Hallowe'en Witch",15,-1,0,0,1,1,1,0,0],["542t","Leavanny/Totem Forme Q",11,4,0,0,1,1,0,0,0],["556t","Maractus/Totem Forme Q",4,-1,0,0,1,1,0,0,0],["622x","Apocalyptic Golett",12,16,1,1,1,1,0,0,0],["623x","Apocalyptic Golurk",12,16,0,0,1,1,0,0,0],["628t","Braviary/Totem Forme Q",0,9,0,0,1,1,1,0,0],["630t","Mandibuzz/Totem Forme Q",15,9,0,0,1,1,1,0,0],["667g","Glileo",1,7,1,1,1,1,0,0,0],["668g","Pyriscor",1,7,0,0,1,1,0,0,0],["682p","Spritzkrow",17,15,1,1,1,1,0,0,0],["683p","Aromakrow",17,15,0,0,1,1,0,0,0],["708t","Trevenant/Totem Forme Q",13,4,0,0,1,1,0,1,0],["713b","Noismog",10,14,1,1,1,1,0,0,0],["713c","Noismoem",10,14,0,0,1,1,0,0,0],["714b","Solgavern",16,14,0,0,1,1,0,0,0],["714c","Lunavern",13,14,0,0,1,1,0,0,0],["726b","Incineroar/Feral",1,3,0,0,1,1,0,0,0],["740q","Oricorio/Pointe Style",4,9,0,0,1,1,1,0,0]]}}`.split(",")}fillTemplates(e){this.TEMPLATES.shelterOptionsHTML=e.shelterOptionsHTML(),this.TEMPLATES.fieldSortHTML=e.fieldSortHTML(),this.TEMPLATES.fieldSearchHTML=e.fieldSearchHTML(),this.TEMPLATES.privateFieldSearchHTML=e.privateFieldSearchHTML(),this.TEMPLATES.qolHubHTML=e.qolHubHTML(),this.TEMPLATES.evolveFastHTML=e.evolveFastHTML(),this.TEMPLATES.labOptionsHTML=e.labOptionsHTML(),this.TEMPLATES.publicFieldTooltipModHTML=e.publicFieldTooltipModHTML(),this.TEMPLATES.privateFieldTooltipModHTML=e.privateFieldTooltipModHTML()}fillOptionsLists(){this.TYPE_OPTIONS=this.HELPERS.buildOptionsString(this.TYPE_LIST),this.NATURE_OPTIONS=this.HELPERS.buildOptionsString(this.NATURE_LIST),this.EGG_GROUP_OPTIONS=this.HELPERS.buildOptionsString(this.EGG_GROUP_LIST)}}class Helpers{buildOptionsString(t){let i='<option value="none">None</option> ';for(let e=0;e<t.length;e++)i+=`<option value="${e}">${t[e]}</option> `;return i}toggleSetting(e,t,i){if(i=i||"qolsetting","boolean"==typeof t){const s=document.querySelector(`.${i}[data-key="${e}"]`);s&&"checkbox"===s.type&&(s.checked=t)}}setupFieldArrayHTML(t,i,s,o,a){var r=i.length;for(let e=0;e<r;e++){var l=e+1,n=i[e];t("#"+s).append(o),t("."+a).removeClass(a).addClass(""+l).find(".qolsetting").val(n)}}loadSettings(e,t,i,s){if(null===localStorage.getItem(t))this.saveSettings(t);else{try{var o,a,r=Object.keys(s).length,l=JSON.parse(localStorage.getItem(t)),n=Object.keys(l).length;n<r&&(o=i,a=JSON.parse(localStorage.getItem(t)),s=e.extend(!0,{},o,a),this.saveSettings(t,s)),r<n&&this.saveSettings(t,s)}catch(e){this.saveSettings(t,s)}localStorage.getItem(t)!=JSON.stringify(s)&&(s=JSON.parse(localStorage.getItem(t)))}return s}saveSettings(e,t){localStorage.setItem(e,JSON.stringify(t))}textSearchDiv(e,t,i,s){return`<div class='${e}'><label><input type="text" class="qolsetting" data-key="${t}" `+`array-name='${s}'`+`/></label><input type='button' value='Remove' id='${i}'></div>`}selectSearchDiv(e,t,i,s,o,a,r){return`<div class='${e}'> <select name='${t}' class="qolsetting" data-key='${i}' `+`array-name='${r}'> ${s} </select> <input type='button' value='Remove' id='${o}'> </div>`}parseFieldPokemonTooltip(e,t,i){const s=e(i).children(0).children();let o=1;i=s[o].textContent;i||console.error(`Helpers.parseFieldPokemonTooltip - nickname '${i}' (is not a valid name)`),o++,o++;let a="";if(s[o].textContent){const b=s[o].textContent;var r=b.trim().split(":  ");1==r.length?console.error("Helpers.parseFieldPokemonTooltip - species text does not contain ':  '"):a=r[1]}o++;let l="";s[o].textContent&&s[o].textContent.startsWith("Forme")&&(l=s[o].textContent.substr("Forme: ".length),o++);const n=e(s[o]).children().slice(1),c=n.map(e=>n[e].src);let d=c.map(e=>c[e].substring(c[e].indexOf("types/")+"types/".length,c[e].indexOf(".png"))),u=(d=(d=d.map(e=>d[e].charAt(0).toUpperCase()+d[e].substring(1))).map(e=>t.TYPE_LIST.indexOf(d[e])),o++,-1),h=(s[o].textContent?1<(r=s[o].textContent.split(" ")).length&&(u=parseInt(r[1])):console.error("Helpers.parseFieldPokemonToolTip - could not load level because text was empty"),o++,s[o].textContent&&s[o].textContent.startsWith("Happiness")||o++,-1);if(s[o].textContent){const f=s[o].textContent.split(" ");1<f.length&&(h="MAX"==(h=f[1].trim())?100:parseInt(h.substring(0,h.length-1)))}else console.error("Helpers.parseFieldPokemonToolTip - could not load happiness because text was empty");o++;let p=-1;if(s[o].textContent){const S=s[o].textContent.split(" ");1<S.length&&(p=S[1].replace("(","").trim(),p=t.NATURE_LIST.indexOf(p))}else console.error("Helpers.parseFieldPokemonToolTip - could not load nature because text was empty");o++;let g="",y=(g="Item: None"!==s[o].textContent?s[o].textContent.substring(s[8].textContent.indexOf(" ")+1):"None",o++,[]);s[o].textContent?y=s[o].textContent.substring("Egg Group: ".length).split("/"):console.error("Helpers.parseFieldPokemonToolTip - could not load egg groups because text was empty"),o++;const m={nickname:i,species:a,types:d,level:u,happiness_percent:h,nature:p,item:g,eggGroups:y};return""!==l&&(m.forme=l),m}getPokemonImageClass(){return 650<=window.innerWidth&&650<=window.innerHeight?"big":"small"}detectPageSize(e,t){return e("html").hasClass(t)}}class InteractionsPage extends Page{constructor(e,t,i,s){super(e,t,i,s.INTERACTIONS_PAGE_SETTINGS_KEY,{},"interactions")}setupHTML(){let s="";var o=document.getElementsByClassName("userlist");let a=o[o.length-1];if("Sent"==a.parentElement.previousElementSibling.innerText){var r=a.childNodes;let i=!1;for(let t=0;t<r.length;t++){if(50<=t){i=!0;break}0!=t&&(s+=",");let e=r[t].lastChild.href;var l=e.split("/user/")[1];s+=l}o="https://pokefarm.com/users/"+s;let e=document.createElement("p"),t=document.createElement("a");t.href=o,i?t.innerText="Open top 50 users":t.innerText="Open all users",e.appendChild(t),a.parentNode.insertBefore(e,a)}}}class LabPage extends Page{constructor(e,t,i,s){super(e,t,i,s.LAB_PAGE_SETTINGS_KEY,{findLabEgg:"",customEgg:!0,findLabType:"",findTypeEgg:!0},"lab"),this.searchArray=[],this.typeArray=[],this.globals=s;const o=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){o.customSearch()})})}setupHTML(e){document.querySelector("#eggsbox360>p.center").insertAdjacentHTML("afterend",e.TEMPLATES.labOptionsHTML),document.querySelector("#egglist").insertAdjacentHTML("afterend",'<div id="labsuccess"></div>');var t=this.helpers.textSearchDiv("numberDiv","findLabEgg","removeLabSearch","searchArray"),e=this.helpers.selectSearchDiv("typeNumber","types","findLabType",e.TYPE_OPTIONS,"removeLabTypeList","labTypes","typeArray");this.searchArray=this.settings.findLabEgg.split(","),this.typeArray=this.settings.findLabType.split(","),this.helpers.setupFieldArrayHTML(this.jQuery,this.searchArray,"searchkeys",t,"numberDiv"),this.helpers.setupFieldArrayHTML(this.jQuery,this.typeArray,"labTypes",e,"typeNumber")}setupCSS(){var e=this.jQuery("#labpage>div").css("background-color");this.jQuery("#labsuccess").css("background-color",e)}setupObserver(){this.observer.observe(document.querySelector("#labpage>div>div>div"),{childList:!0,characterdata:!0,subtree:!0,characterDataOldValue:!0})}setupHandlers(e){const t=this;t.jQuery(document).on("click","#addLabSearch",function(){t.addTextField()}),t.jQuery(document).on("click","#removeLabSearch",function(){t.removeTextField(this,t.jQuery(this).parent().find("input").val()),t.saveSettings()}),t.jQuery(document).on("click","#addLabTypeList",function(){t.addTypeList(e)}),t.jQuery(document).on("click","#removeLabTypeList",function(){t.removeTypeList(this,t.jQuery(this).parent().find("select").val()),t.saveSettings()}),t.jQuery(document).on("change","#labCustomSearch input",function(){t.customSearch(e)}),t.jQuery(document).on("click","#labpage",function(){t.customSearch(e)}),t.jQuery(document).on("input",".qolsetting",function(){t.settingsChange(this.getAttribute("data-key"),t.jQuery(this).val(),t.jQuery(this).parent().parent().attr("class"),t.jQuery(this).parent().attr("class"),this.hasAttribute("array-name")?this.getAttribute("array-name"):""),t.customSearch(e),t.saveSettings()}),t.jQuery(window).on("load",function(){t.loadSettings(),t.customSearch(e)})}addTextField(){var e=this.helpers.textSearchDiv("numberDiv","findLabEgg","removeLabSearch","searchArray"),t=this.jQuery("#searchkeys>div").length;this.jQuery("#searchkeys").append(e),this.jQuery(".numberDiv").removeClass("numberDiv").addClass(""+t)}removeTextField(e,t){this.searchArray=this.jQuery.grep(this.searchArray,function(e){return e!=t}),this.settings.findCustom=this.searchArray.toString(),this.jQuery(e).parent().remove();for(let e=0;e<this.jQuery("#searchkeys>div").length;e++){var i=e+1;this.jQuery("."+e).next().removeClass().addClass(""+i)}}addTypeList(e){var e=this.helpers.selectSearchDiv("typeNumber","types","findLabType",e.TYPE_OPTIONS,"removeLabTypeList","labTypes","typeArray"),t=this.jQuery("#labTypes>div").length;this.jQuery("#labTypes").append(e),this.jQuery(".typeNumber").removeClass("typeNumber").addClass(""+t)}removeTypeList(e,t){this.typeArray=this.jQuery.grep(this.typeArray,function(e){return e!=t}),this.settings.findType=this.typeArray.toString(),this.jQuery(e).parent().remove();for(let e=0;e<this.jQuery("#labTypes>div").length;e++){var i=e+1;this.jQuery("."+e).next().removeClass().addClass(""+i)}}getTypesForEgg(e){const t=this.globals.DEX_DATA;e=t.indexOf('"'+e+'"');return[t[e+1],t[e+2]]}searchForEggsMatchingTypes(){const t=this.globals,s=this.jQuery,o=this;if(!0===this.settings.findTypeEgg&&!(1==this.typeArray.length&&""==this.typeArray[0])){var i=this.typeArray.filter(e=>""!=e);for(let e=0;e<i.length;e++){const n=i[e],c=[],d=[];s("#egglist>div>h3").each(function(){var e=s(this).text().split(" ")[0],[t,i]=o.getTypesForEgg(e);t===n&&(c.push("found"),d.push(e)),i===n&&(c.push("found"),d.push(e))});var a=t.SHELTER_SEARCH_DATA[t.SHELTER_SEARCH_DATA.indexOf(n)+2],r=d.length;for(let e=0;e<r;e++){var l=d[e];const u=this.jQuery("#egglist>div>h3:containsIN("+l+")");l=u.next();s(l).addClass("labfoundme")}1<c.length?document.querySelector("#labsuccess").insertAdjacentHTML("beforeend",'<div id="labfound">'+c.length+" "+a+" egg types found! ("+d.toString()+")</div>"):1==c.length&&document.querySelector("#labsuccess").insertAdjacentHTML("beforeend",'<div id="labfound">'+c.length+" "+a+" egg type found! ("+d.toString()+")</div>")}}}searchForEggsMatchingCustom(){const t=this.jQuery;if((1!=this.searchArray.length||""!=this.searchArray[0])&&!0===this.settings.customEgg){var i=this.searchArray.filter(e=>""!=e);for(let e=0;e<i.length;e++){var s=i[e];if(t("#egglist>div>h3:containsIN("+s+")").length){var o=s;const r=t("#egglist>div>h3:containsIN("+s+")");var a=r.next();t(a).addClass("labfoundme"),t("#egglist>div>h3:containsIN("+s+")").length,document.querySelector("#labsuccess").insertAdjacentHTML("beforeend",'<div id="labfound">'+o+' found!<img src="//pfq-static.com/img/pkmn/heart_1.png/t=1427152952"></div>')}t('#egglist>div img[src*="'+s+'"]').length&&(a=t('#egglist>div img[src*="'+s+'"]').prev().text(),o=t('#egglist>div img[src*="'+s+'"]'),t(o).addClass("labfoundme"),t('#egglist>div img[src*="'+s+'"]').length,document.querySelector("#labsuccess").insertAdjacentHTML("beforeend",'<div id="labfound">'+a+' found!<img src="//pfq-static.com/img/pkmn/heart_1.png/t=1427152952"></div>'))}}}customSearch(){document.querySelector("#labsuccess").innerHTML="",this.jQuery("#egglist>div>img").removeClass("labfoundme"),this.searchForEggsMatchingTypes(),this.searchForEggsMatchingCustom()}}class LocalStorageManager{constructor(e,t,i){this.keyPrefix=e,this.storage=t,this.helpers=i}migrateSettings(){const i={},s=[];for(let e=0,t=this.storage.length;e<t;++e){var o,a=this.storage.key(e).match(/^QoL.*/);a&&(a=a.input,o=this.translateKey(a),i[o]=this.storage.getItem(a),s.push(a))}for(let e=0;e<s.length;e++)this.storage.removeItem(s[e]);for(const e in i)this.storage.setItem(e,i[e])}translateKey(e){return this.keyPrefix+"."+e}saveSettings(e,t){this.helpers.saveSettings(this.translateKey(e),t)}loadSettings(e,t,i,s){return this.helpers.loadSettings(e,this.translateKey(t),i,s)}getItem(e){return this.storage.getItem(this.translateKey(e))}setItem(e,t){this.storage.setItem(this.translateKey(e),t)}removeItem(e){this.storage.removeItem(this.translateKey(e))}loadDexIntoGlobalsFromStorage(e){var t=this.translateKey(e.POKEDEX_DATA_KEY);if(null===this.storage.getItem(t))return!1;if(0===Object.keys(JSON.parse(this.storage.getItem(t))).length)return!1;const i=JSON.parse(this.storage.getItem(t));if(1===i.length||void 0===i[1]||null===i[1])return!1;e.DEX_UPDATE_DATE=i[0];t=i.slice(1);return e.DEX_DATA=t,!0}updateLocalStorageDex(e,t,i,s){let o="";i=[o=void 0===i?(new Date).toUTCString():i].concat(s.DEX_DATA);this.storage.setItem(this.translateKey(s.POKEDEX_DATA_KEY),JSON.stringify(i)),e(".qolDate",t).val(o)}}class MultiuserPage extends Page{constructor(e,t,i,s){super(e,t,i,s.MULTIUSER_PAGE_SETTINGS_KEY,{hideDislike:!1,hideAll:!1,niceTable:!1},"users/");const o=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){o.partyModification()})})}settingsChange(e,t,i,s,o){if(!1!==super.settingsChange(e,t,i,s,o)){const r=["hideAll","hideDislike","niceTable"];var a=r.indexOf(e);if(-1<a){for(let e=0;e<r.length;e++)e!==a&&(this.settings[r[e]]=!1);return!0}}return!1}setupHTML(e){document.querySelector("#multiuser").insertAdjacentHTML("beforebegin",e.TEMPLATES.partyModHTML)}setupCSS(){var e=this.jQuery("#navigation>#navbtns>li>a, #navigation #navbookmark>li>a").css("background-color"),e=(this.jQuery("#qolpartymod").css("background-color",""+e),this.jQuery("#navigation>#navbtns>li>a, #navigation #navbookmark>li>a").css("color"));this.jQuery("#qolpartymod").css("color",""+e)}setupObserver(){this.observer.observe(document.querySelector("#multiuser"),{childList:!0,subtree:!0})}setupHandlers(){const e=this;e.jQuery(window).on("load",function(){e.loadSettings(),e.partyModification()});let t;e.jQuery(window).resize(function(){clearTimeout(t),t=setTimeout(()=>{e.loadSettings(),e.partyModification()},100)}),e.jQuery(document).on("click input","#qolpartymod",function(){clearTimeout(t),t=setTimeout(()=>{e.partyModification()},100)}),e.jQuery(document).on("click",".tabbed_interface",function(){e.partyModification()}),e.jQuery(document).on("change",".qolsetting",function(){e.loadSettings(),e.settingsChange(this.getAttribute("data-key"),e.jQuery(this).val(),e.jQuery(this).parent().parent().attr("class"),e.jQuery(this).parent().attr("class")),e.partyModification(),e.saveSettings()}),e.jQuery("input.qolalone").on("change",function(){e.jQuery("input.qolalone").not(this).prop("checked",!1)})}partyModification(){var e="#multiuser .party>div .action a";this.jQuery("#multiuser").removeClass("qolPartyHideDislike"),this.jQuery("#multiuser").removeClass("qolPartyNiceTable"),this.jQuery("#multiuser").removeClass("qolPartyHideAll"),this.jQuery(e).css({top:0,left:0}),!0===this.settings.hideDislike&&this.jQuery("#multiuser").addClass("qolPartyHideDislike"),!0===this.settings.niceTable&&this.jQuery("#multiuser").addClass("qolPartyNiceTable"),!0===this.settings.hideAll&&(this.jQuery("#multiuser").addClass("qolPartyHideAll"),this.jQuery(e).css(this.jQuery(".mu_navlink.next").position()))}}class PagesManager{constructor(e,t,i,s,o){this.jQuery=e,this.localStorageMgr=t,this.GLOBALS=i,this.HELPERS=s,this.SETTINGS=o,this.pages={Daycare:{class:DaycarePage,object:void 0,setting:"enableDaycare"},Farm:{class:FarmPage,object:void 0,setting:"easyEvolve"},Fishing:{class:FishingPage,object:void 0,setting:"fishingEnable"},Lab:{class:LabPage,object:void 0,setting:"labNotifier"},Multiuser:{class:MultiuserPage,object:void 0,setting:"partyMod"},PrivateFields:{class:PrivateFieldsPage,object:void 0,setting:"privateFieldEnable"},PublicFields:{class:PublicFieldsPage,object:void 0,setting:"publicFieldEnable"},Shelter:{class:ShelterPage,object:void 0,setting:"shelterEnable"},Dex:{class:DexPage,object:void 0,setting:"dexFilterEnable"},Wishforge:{class:WishforgePage,object:void 0,setting:"condenseWishforge"},Interactions:{class:InteractionsPage,object:void 0,setting:"interactionsEnable"},Summary:{class:SummaryPage,object:void 0,setting:"summaryEnable"}}}instantiatePages(e){for(const i of Object.keys(this.pages)){var t=this.pages[i];!0===e.USER_SETTINGS[t.setting]&&(this.pages[i].object=new this.pages[i].class(this.jQuery,this.localStorageMgr,this.HELPERS,this.GLOBALS,this.SETTINGS))}}loadSettings(e){for(const t of Object.keys(this.pages)){const i=this.pages[t];!0===e.USER_SETTINGS[i.setting]&&i.object.onPage(window)&&i.object.loadSettings()}}saveSettings(e){for(const t of Object.keys(this.pages)){const i=this.pages[t];!0===e.USER_SETTINGS[i.setting]&&i.object.onPage(window)&&i.object.saveSettings()}}populateSettings(e){for(const t of Object.keys(this.pages)){const i=this.pages[t];!0===e.USER_SETTINGS[i.setting]&&i.object.onPage(window)&&i.object.populateSettings()}}clearPageSettings(e){e in this.pages?this.pages[e].object&&this.pages[e].object.resetSettings():console.error(`Could not proceed with clearing page settings. Page ${e} not found in list of pages`)}setupHTML(e,t){for(const i of Object.keys(this.pages)){const s=this.pages[i];!0===t.USER_SETTINGS[s.setting]&&s.object.onPage(window)&&s.object.setupHTML(e)}}setupCSS(e){for(const t of Object.keys(this.pages)){const i=this.pages[t];!0===e.USER_SETTINGS[i.setting]&&i.object.onPage(window)&&i.object.setupCSS()}}setupObservers(e){for(const t of Object.keys(this.pages)){const i=this.pages[t];!0===e.USER_SETTINGS[i.setting]&&i.object.onPage(window)&&i.object.setupObserver()}}setupHandlers(e,t){for(const i of Object.keys(this.pages)){const s=this.pages[i];!0===t.USER_SETTINGS[s.setting]&&s.object.onPage(window)&&s.object.setupHandlers(e)}}}class PFQoL{constructor(e){e.extend(e.expr[":"],{containsIN:function(e,t,i,s){return 0<=(e.textContent||e.innerText||"").toLowerCase().indexOf((i[3]||"").toLowerCase())}}),this.jQuery=e,this.HELPERS=new Helpers,this.LOCAL_STORAGE_MANAGER=new LocalStorageManager(e.USERID,localStorage,this.HELPERS),this.LOCAL_STORAGE_MANAGER.migrateSettings(),this.SETTINGS=new UserSettings,this.GLOBALS=new Globals(this.jQuery,this.LOCAL_STORAGE_MANAGER,this.HELPERS),this.RESOURCES=new Resources,this.PAGES=new PagesManager(this.jQuery,this.LOCAL_STORAGE_MANAGER,this.GLOBALS,this.HELPERS,this.SETTINGS),this.QOLHUB=new QoLHub(this.jQuery,this.LOCAL_STORAGE_MANAGER,this.HELPERS,this.GLOBALS,this.PAGES,this.SETTINGS),this.GLOBALS.fillTemplates(this.RESOURCES),this.GLOBALS.fillOptionsLists(),this.LOCAL_STORAGE_MANAGER.loadDexIntoGlobalsFromStorage(this.GLOBALS),this.init()}instantiatePages(e){e.PAGES.instantiatePages(e.QOLHUB)}loadSettings(e){e.QOLHUB.loadSettings(),e.PAGES.loadSettings(e.QOLHUB)}saveSettings(){this.QOLHUB.saveSettings(),this.PAGES.saveSettings(this.QOLHUB)}populateSettingsPage(e){e.QOLHUB.populateSettings(),e.PAGES.populateSettings(e.QOLHUB)}setupHTML(e){document.querySelector("li[data-name*='Lucky Egg']").insertAdjacentHTML("afterend",e.GLOBALS.TEMPLATES.qolHubLinkHTML),e.PAGES.setupHTML(e.GLOBALS,e.QOLHUB)}setupCSS(e){addGlobalStyle(e.RESOURCES.css()),e.PAGES.setupCSS(e.QOLHUB),e.QOLHUB.setupCSS()}setupObservers(e){e.PAGES.setupObservers(e.QOLHUB)}setupHandlers(e){e.jQuery(document).on("click",'li[data-name="QoL"]',function(){e.QOLHUB.build(document),e.populateSettingsPage(e)}),e.QOLHUB.setupHandlers(),e.PAGES.setupHandlers(e.GLOBALS,e.QOLHUB)}startup(){return{"creating Page handlers":this.instantiatePages,"loading Settings":this.loadSettings,"setting up HTML":this.setupHTML,"populating Settings":this.populateSettingsPage,"setting up CSS":this.setupCSS,"setting up Observers":this.setupObservers,"setting up Handlers":this.setupHandlers}}init(){console.log("Starting up ..");const e=this.startup();for(const t in e)Object.hasOwnProperty.call(e,t)&&(console.log(t),e[t](this,this.GLOBALS))}}function addGlobalStyle(e){const t=document.getElementsByTagName("head")[0],i=document.createElement("style");t&&(i.innerHTML=e,t.appendChild(i))}class PrivateFieldsPage extends Page{constructor(e,t,i,s,o){super(e,t,i,s.PRIVATE_FIELDS_PAGE_SETTINGS_KEY,{fieldCustom:"",fieldType:"",fieldNature:"",fieldEggGroup:"",fieldNewPokemon:!0,fieldShiny:!0,fieldAlbino:!0,fieldMelanistic:!0,fieldPrehistoric:!0,fieldDelta:!0,fieldMega:!0,fieldStarter:!0,fieldCustomSprite:!0,fieldMale:!0,fieldFemale:!0,fieldNoGender:!0,fieldItem:!0,customItem:!0,customEgg:!0,customPokemon:!0,customPng:!1,releaseSelectAll:!0,tooltipEnableMods:!1,tooltipNoBerry:!1,tooltipBerry:!1},"fields",o),this.customArray=[],this.typeArray=[],this.natureArray=[],this.eggGroupArray=[];const a=this;this.observer=new MutationObserver(e=>{e.forEach(e=>{a.customSearch(s),a.globalSettings.privateFieldFeatureEnables.tooltip&&a.handleTooltipSettings()})})}onPage(e){return-1!=e.location.href.indexOf("fields")&&-1==e.location.href.indexOf("fields/")}setupHTML(e){var t,i,s,o;this.globalSettings.privateFieldFeatureEnables.search&&(document.querySelector("#field_field").insertAdjacentHTML("afterend",e.TEMPLATES.privateFieldSearchHTML),t=this.helpers.textSearchDiv("numberDiv","fieldCustom","removeTextField","customArray"),i=this.helpers.selectSearchDiv("typeNumber","types","fieldType",e.TYPE_OPTIONS,"removePrivateFieldTypeSearch","fieldTypes","typeArray"),s=this.helpers.selectSearchDiv("natureNumber","natures","fieldNature",e.NATURE_OPTIONS,"removePrivateFieldNature","natureTypes","natureArray"),o=this.helpers.selectSearchDiv("eggGroupNumber","eggGroups","fieldEggGroup",e.EGG_GROUP_OPTIONS,"removePrivateFieldEggGroup","eggGroupTypes","eggGroupArray"),this.customArray=this.settings.fieldCustom.split(","),this.typeArray=this.settings.fieldType.split(","),this.natureArray=this.settings.fieldNature.split(","),this.eggGroupArray=this.settings.fieldEggGroup.split(","),this.helpers.setupFieldArrayHTML(this.jQuery,this.customArray,"searchkeys",t,"numberDiv"),this.helpers.setupFieldArrayHTML(this.jQuery,this.typeArray,"fieldTypes",i,"typeNumber"),this.helpers.setupFieldArrayHTML(this.jQuery,this.natureArray,"natureTypes",s,"natureNumber"),this.helpers.setupFieldArrayHTML(this.jQuery,this.eggGroupArray,"eggGroupTypes",o,"eggGroupNumber")),this.globalSettings.privateFieldFeatureEnables.release,this.globalSettings.privateFieldFeatureEnables.tooltip&&(document.querySelector("#field_field").insertAdjacentHTML("beforebegin",e.TEMPLATES.privateFieldTooltipModHTML),this.handleTooltipSettings()),this.globalSettings.privateFieldFeatureEnables.pkmnlinks&&SharedFieldsLib.addPkmnLinksPopup()}setupCSS(){var e=this.jQuery("#field_field").css("background-color"),t=this.jQuery("#field_field").css("border");this.jQuery("#fieldorder").css("background-color",""+e),this.jQuery("#fieldorder").css("border",""+t),this.jQuery("#fieldsearch").css("background-color",""+e),this.jQuery("#tooltipenable").css("max-width","600px"),this.jQuery("#tooltipenable").css("position","relative"),this.jQuery("#tooltipenable").css("margin","16px auto"),this.jQuery(".collapsible").css("background-color",""+e),this.jQuery(".collapsible").css("border",""+t),this.jQuery(".collapsible_content").css("background-color",""+e),this.jQuery(".tooltiptext").css("background-color",this.jQuery(".tooltip_content").eq(0).css("background-color")),this.jQuery(".tooltiptext").css("border",""+t),this.jQuery(".collapsible").css("color",this.jQuery("#content").find("h1").eq(0).css("color"))}setupObserver(){this.observer.observe(document.querySelector("#field_field"),{childList:!0,characterdata:!0,subtree:!0,characterDataOldValue:!0})}setupHandlers(t){const i=this;this.jQuery(window).on("load",()=>{i.loadSettings(),i.customSearch(t),i.globalSettings.privateFieldFeatureEnables.tooltip&&i.handleTooltipSettings(),i.saveSettings()}),this.jQuery(document).on("load",".field",function(){i.customSearch(t)}),i.globalSettings.privateFieldFeatureEnables.release&&(this.jQuery(document).on("click",'*[data-menu="release"]',function(e){e.stopPropagation(),i.releaseEnableReleaseAll()}),this.jQuery(document).on("click",'*[data-menu="bulkmove"]',function(){i.moveEnableReleaseAll()})),i.globalSettings.privateFieldFeatureEnables.search&&(this.jQuery(document).on("click","#addPrivateFieldTypeSearch",function(e){e.stopPropagation(),i.addSelectSearch("typeNumber","types","fieldType",t.TYPE_OPTIONS,"removePrivateFieldTypeSearch","fieldTypes","typeArray"),i.customSearch(t)}),this.jQuery(document).on("click","#removePrivateFieldTypeSearch",function(e){e.stopPropagation(),i.typeArray=i.removeSelectSearch(i.typeArray,this,i.jQuery(this).parent().find("select").val(),"fieldType","fieldTypes"),i.saveSettings(),i.customSearch(t)}),this.jQuery(document).on("click","#addPrivateFieldNatureSearch",function(e){e.stopPropagation(),i.addSelectSearch("natureNumber","natures","fieldNature",t.NATURE_OPTIONS,"removePrivateFieldNature","natureTypes","natureArray"),i.customSearch(t)}),this.jQuery(document).on("click","#removePrivateFieldNature",function(e){e.stopPropagation(),i.natureArray=i.removeSelectSearch(i.natureArray,this,i.jQuery(this).parent().find("select").val(),"fieldNature","natureTypes"),i.saveSettings(),i.customSearch(t)}),this.jQuery(document).on("click","#addPrivateFieldEggGroupSearch",function(e){e.stopPropagation(),i.addSelectSearch("eggGroupNumber","eggGroups","fieldEggGroup",t.EGG_GROUP_OPTIONS,"removePrivateFieldEggGroup","eggGroupTypes","eggGroupArray"),i.customSearch(t)}),this.jQuery(document).on("click","#removePrivateFieldEggGroup",function(e){e.stopPropagation(),i.eggGroupArray=i.removeSelectSearch(i.eggGroupArray,this,i.jQuery(this).parent().find("select").val(),"fieldEggGroup","eggGroupTypes"),i.saveSettings(),i.customSearch(t)}),this.jQuery(document).on("click","#addTextField",function(e){e.stopPropagation(),i.addTextField(),i.saveSettings()}),this.jQuery(document).on("click","#removeTextField",function(e){e.stopPropagation(),i.removeTextField(this,i.jQuery(this).parent().find("input").val()),i.saveSettings(),i.customSearch(t)})),i.globalSettings.privateFieldFeatureEnables.tooltip&&(this.jQuery(".tooltipsetting[data-key=tooltipEnableMods]").on("click",function(){i.loadSettings(),i.handleTooltipSettings(),i.saveSettings()}),this.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").on("click",function(){i.loadSettings(),i.handleTooltipSettings(),i.saveSettings()})),this.jQuery(document).on("change",".qolsetting",function(){i.loadSettings(),i.customSearch(t),i.saveSettings()}),this.jQuery(document).on("input",".qolsetting",function(){i.settingsChange(this.getAttribute("data-key"),i.jQuery(this).val(),i.jQuery(this).parent().parent().attr("class"),i.jQuery(this).parent().attr("class"),this.hasAttribute("array-name")?this.getAttribute("array-name"):""),i.customSearch(t),i.saveSettings()}),this.jQuery(".collapsible").on("click",function(){this.classList.toggle("active");const e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"})}handleTooltipSettings(){var e=this;e.jQuery(".tooltipsetting[data-key=tooltipEnableMods]").prop("checked")?(e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("disabled",!1),e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("checked")?e.disableTooltips():e.enableTooltips()):(e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("disabled",!0),e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("checked")&&e.enableTooltips())}disableTooltips(){this.jQuery("#field_field>div.field>.fieldmon").removeAttr("data-tooltip").removeClass("tooltip_trigger")}enableTooltips(){this.jQuery("#field_field>div.field>.fieldmon").attr("data-tooltip","")}searchForImgTitle(e,t){const i=e.SHELTER_SEARCH_DATA;e=i.indexOf(t),t=i[e+1];const s=this.jQuery('img[title*="'+t+'"]');e=this.helpers.getPokemonImageClass();s.length&&(t=s.parent().parent().parent().parent().prev().children("img."+e),this.jQuery(t).addClass("privatefoundme"))}searchForCustomPokemon(t,e,i,s){const o=[];e&&o.push("[M]"),i&&o.push("[F]"),s&&o.push("[N]");var a=this.helpers.getPokemonImageClass();if(0<o.length)for(let e=0;e<o.length;e++){var r=o[e];const l=this.jQuery("#field_field .tooltip_content:containsIN("+t+") img[title*='"+r+"']");l.length&&(r=l.parent().parent().parent().parent().prev().children("img."+a),this.jQuery(r).addClass("privatefoundme"))}else{const n=this.jQuery("#field_field .tooltip_content:containsIN("+t+")");n.length&&(e=n.parent().parent().parent().parent().prev().children("img."+a),this.jQuery(e).addClass("privatefoundme"))}}searchForCustomEgg(e){var t=this.helpers.getPokemonImageClass();const i=this.jQuery("#field_field .tooltip_content:containsIN("+e+'):contains("Egg")');i.length&&(e=i.parent().parent().parent().parent().prev().children("img."+t),this.jQuery(e).addClass("privatefoundme"))}searchForCustomPng(e){e=this.jQuery('#field_field img[src*="'+e+'"]');e.length&&this.jQuery(e).addClass("privatefoundme")}customSearch(l){if(this.globalSettings.privateFieldFeatureEnables.search){const n=this;var e=this.helpers.getPokemonImageClass();const i=document.querySelectorAll(".privatefoundme");if(null!==i&&i.forEach(e=>{n.jQuery(e).removeClass("privatefoundme")}),!0===this.settings.fieldShiny&&this.searchForImgTitle(l,"findShiny"),!0===this.settings.fieldAlbino&&this.searchForImgTitle(l,"findAlbino"),!0===this.settings.fieldMelanistic&&this.searchForImgTitle(l,"findMelanistic"),!0===this.settings.fieldPrehistoric&&this.searchForImgTitle(l,"findPrehistoric"),!0===this.settings.fieldDelta&&this.searchForImgTitle(l,"findDelta"),!0===this.settings.fieldMega&&this.searchForImgTitle(l,"findMega"),!0===this.settings.fieldStarter&&this.searchForImgTitle(l,"findStarter"),!0===this.settings.fieldCustomSprite&&this.searchForImgTitle(l,"findCustomSprite"),!0===this.settings.fieldItem){const s=n.jQuery(".tooltip_content .item>div>.tooltip_item");s.length&&(e=s.parent().parent().parent().parent().prev().children("img."+e),n.jQuery(e).addClass("privatefoundme"))}const c=this.typeArray.filter(e=>""!=e),d=this.natureArray.filter(e=>""!=e),u=this.eggGroupArray.filter(e=>""!=e);(0<c.length||0<d.length||0<u.length)&&n.jQuery(".fieldmon").each(function(){var t=n.jQuery(this)[0].childNodes[0],e=n.helpers.parseFieldPokemonTooltip(n.jQuery,l,n.jQuery(t).parent().next()[0]),i=e.types[0]+"",s=1<e.types.length?e.types[1]+"":"",o=l.NATURE_LIST[e.nature];const a=n.jQuery(this).next().find(".fieldmontip").children(":contains(Egg Group)").eq(0).text().slice("Egg Group: ".length);for(let e=0;e<c.length;e++)i!==c[e]&&s!==c[e]||n.jQuery(t).addClass("privatefoundme");for(let e=0;e<d.length;e++)o===l.NATURE_LIST[d[e]]&&n.jQuery(t).addClass("privatefoundme");for(let e=0;e<u.length;e++){var r=l.EGG_GROUP_LIST[u[e]];(a===r||-1<a.indexOf(r+"/")||-1<a.indexOf("/"+r))&&n.jQuery(t).addClass("privatefoundme")}});for(let e=0;e<this.customArray.length;e++){var t=this.customArray[e];""!=t&&(!0===this.settings.customPokemon&&this.searchForCustomPokemon(t,this.settings.fieldMale,this.settings.fieldFemale,this.settings.fieldNoGender),!0===this.settings.customEgg&&this.searchForCustomEgg(t),!0===this.settings.customPng&&this.searchForCustomPng(t))}}}addSelectSearch(e,t,i,s,o,a,r){t=this.helpers.selectSearchDiv(e,t,i,s,o,a,r),i=this.jQuery(`#${a}>div`).length;this.jQuery("#"+a).append(t),this.jQuery("."+e).removeClass(e).addClass(""+i)}removeSelectSearch(e,t,i,s,o){e=this.jQuery.grep(e,function(e){return e!=i}),this.settings[s]=e.toString(),this.jQuery(t).parent().remove();for(let e=0;e<this.jQuery(`#${o}>div`).length;e++){var a=e+1;this.jQuery("."+e).next().removeClass().addClass(""+a)}return e}addTextField(){var e=this.helpers.textSearchDiv("numberDiv","fieldCustom","removeTextField","customArray"),t=this.jQuery("#searchkeys>div").length;this.jQuery("#searchkeys").append(e),this.jQuery(".numberDiv").removeClass("numberDiv").addClass(""+t)}removeTextField(e,t){this.customArray=this.jQuery.grep(this.customArray,function(e){return e!=t}),this.settings.fieldCustom=this.customArray.toString(),this.jQuery(e).parent().remove();let i;for(i=0;i<this.jQuery("#searchkeys>div").length;i++){var s=i+1;this.jQuery("."+i).next().removeClass().addClass(""+s)}}releaseEnableReleaseAll(){const t=this;!0!==this.settings.releaseSelectAll||this.jQuery("#selectallfield").length||(this.jQuery(".dialog>div>div>div>div>button").eq(0).after('<label id="selectallfield"><input id="selectallfieldcheckbox" type="checkbox">Select all</label> <label id="selectallfieldany"><input id="selectallfieldanycheckbox" type="checkbox">Select Any</label> <label id="selectallfieldsour"><input id="selectallfieldsourcheckbox" type="checkbox">Select Sour</label> <label id="selectallfieldspicy"><input id="selectallfieldspicycheckbox" type="checkbox">Select Spicy</label> <label id="selectallfielddry"><input id="selectallfielddrycheckbox" type="checkbox">Select Dry</label> <label id="selectallfieldsweet"><input id="selectallfieldsweetcheckbox" type="checkbox">Select Sweet</label> <label id="selectallfieldbitter"><input id="selectallfieldbittercheckbox" type="checkbox">Select Bitter</label>'),this.jQuery("#selectallfieldcheckbox").click(function(){t.jQuery("#massreleaselist>ul>li>label>input").not(this).prop("checked",this.checked)}),this.jQuery("#selectallfieldanycheckbox").click(function(){var e=t.jQuery('.icons:contains("Any")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),this.jQuery("#selectallfieldsourcheckbox").click(function(){var e=t.jQuery('.icons:contains("Sour")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),this.jQuery("#selectallfieldspicycheckbox").click(function(){var e=t.jQuery('.icons:contains("Spicy")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),this.jQuery("#selectallfielddrycheckbox").click(function(){var e=t.jQuery('.icons:contains("Dry")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),this.jQuery("#selectallfieldsweetcheckbox").click(function(){var e=t.jQuery('.icons:contains("Sweet")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),this.jQuery("#selectallfieldbittercheckbox").click(function(){var e=t.jQuery('.icons:contains("Bitter")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}))}moveEnableReleaseAll(){const t=this;!0!==this.settings.releaseSelectAll||this.jQuery("#movefieldselectall").length||(t.jQuery(".dialog>div>div>div>div>button").eq(0).after('<label id="movefieldselectall"><input id="movefieldselectallcheckbox" type="checkbox">Select all</label> <label id="movefieldselectany"><input id="movefieldselectanycheckbox" type="checkbox">Select Any</label> <label id="movefieldselectsour"><input id="movefieldselectsourcheckbox" type="checkbox">Select Sour</label> <label id="movefieldselectspicy"><input id="movefieldselectspicycheckbox" type="checkbox">Select Spicy</label> <label id="movefieldselectdry"><input id="movefieldselectdrycheckbox" type="checkbox">Select Dry</label> <label id="movefieldselectsweet"><input id="movefieldselectsweetcheckbox" type="checkbox">Select Sweet</label> <label id="movefieldselectbitter"><input id="movefieldselectbittercheckbox" type="checkbox">Select Bitter</label>'),t.jQuery("#movefieldselectallcheckbox").click(function(){t.jQuery("#massmovelist>ul>li>label>input").not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectanycheckbox").click(function(){var e=t.jQuery('.icons:contains("Any")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectsourcheckbox").click(function(){var e=t.jQuery('.icons:contains("Sour")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectspicycheckbox").click(function(){var e=t.jQuery('.icons:contains("Spicy")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectdrycheckbox").click(function(){var e=t.jQuery('.icons:contains("Dry")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectsweetcheckbox").click(function(){var e=t.jQuery('.icons:contains("Sweet")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}),t.jQuery("#movefieldselectbittercheckbox").click(function(){var e=t.jQuery('.icons:contains("Bitter")').prev().prev().prev("input");t.jQuery(e).not(this).prop("checked",this.checked)}))}}class PublicFieldsPage extends Page{constructor(e,t,i,s,o){super(e,t,i,s.PUBLIC_FIELDS_PAGE_SETTINGS_KEY,{fieldByBerry:!1,fieldByMiddle:!1,fieldByGrid:!1,fieldClickCount:!0,fieldCustom:"",fieldType:"",fieldNature:"",fieldEggGroup:"",fieldNewPokemon:!0,fieldShiny:!0,fieldAlbino:!0,fieldMelanistic:!0,fieldPrehistoric:!0,fieldDelta:!0,fieldMega:!0,fieldStarter:!0,fieldCustomSprite:!0,fieldMale:!0,fieldFemale:!0,fieldNoGender:!0,fieldCustomItem:!0,fieldCustomPokemon:!0,fieldCustomEgg:!0,fieldCustomPng:!1,fieldItem:!0,tooltipEnableMods:!1,tooltipNoBerry:!1,tooltipBerry:!1},"fields/",o),this.customArray=[],this.typeArray=[],this.natureArray=[],this.eggGroupArray=[];const a=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){a.customSearch(s),a.globalSettings.publicFieldFeatureEnables.tooltip&&a.handleTooltipSettings()})})}settingsChange(e,t,i,s,o){if(!1!==super.settingsChange(e,t,i,s,o)){const r=["fieldByBerry","fieldByMiddle","fieldByGrid"];var a=r.indexOf(e);if(-1<a){for(let e=0;e<r.length;e++)e!==a&&(this.settings[r[e]]=!1);return!0}}return!1}setupHTML(e){var t,i,s,o;this.globalSettings.publicFieldFeatureEnables.search&&(document.querySelector("#field_field").insertAdjacentHTML("afterend",e.TEMPLATES.fieldSearchHTML),t=this.helpers.textSearchDiv("numberDiv","fieldCustom","removeTextField","customArray"),i=this.helpers.selectSearchDiv("typeNumber","types","fieldType",e.TYPE_OPTIONS,"removeFieldTypeSearch","fieldTypes","typeArray"),s=this.helpers.selectSearchDiv("natureNumber","natures","fieldNature",e.NATURE_OPTIONS,"removeFieldNature","natureTypes","natureArray"),o=this.helpers.selectSearchDiv("eggGroupNumber","eggGroups","fieldEggGroup",e.EGG_GROUP_OPTIONS,"removeFieldEggGroup","eggGroupTypes","eggGroupArray"),this.customArray=this.settings.fieldCustom.split(","),this.typeArray=this.settings.fieldType.split(","),this.natureArray=this.settings.fieldNature.split(","),this.eggGroupArray=this.settings.fieldEggGroup.split(","),this.helpers.setupFieldArrayHTML(this.jQuery,this.customArray,"searchkeys",t,"numberDiv"),this.helpers.setupFieldArrayHTML(this.jQuery,this.typeArray,"fieldTypes",i,"typeNumber"),this.helpers.setupFieldArrayHTML(this.jQuery,this.natureArray,"natureTypes",s,"natureNumber"),this.helpers.setupFieldArrayHTML(this.jQuery,this.eggGroupArray,"eggGroupTypes",o,"eggGroupNumber")),this.globalSettings.publicFieldFeatureEnables.sort&&document.querySelector("#field_field").insertAdjacentHTML("beforebegin",e.TEMPLATES.fieldSortHTML),this.globalSettings.publicFieldFeatureEnables.tooltip&&(document.querySelector("#field_field").insertAdjacentHTML("beforebegin",e.TEMPLATES.publicFieldTooltipModHTML),this.handleTooltipSettings()),this.globalSettings.publicFieldFeatureEnables.pkmnlinks&&SharedFieldsLib.addPkmnLinksPopup()}setupCSS(){var e=this.jQuery("#field_field").css("background-color"),t=this.jQuery("#field_field").css("border");this.jQuery("#fieldorder").css("background-color",""+e),this.jQuery("#fieldorder").css("border",""+t),this.jQuery("#fieldsearch").css("background-color",""+e),this.jQuery("#tooltipenable").css("max-width","600px"),this.jQuery("#tooltipenable").css("position","relative"),this.jQuery("#tooltipenable").css("margin","16px auto"),this.jQuery(".collapsible").css("background-color",""+e),this.jQuery(".collapsible").css("border",""+t),this.jQuery(".collapsible_content").css("background-color",""+e),this.jQuery(".tooltiptext").css("background-color",this.jQuery(".tooltip_content").eq(0).css("background-color")),this.jQuery(".tooltiptext").css("border",""+t),this.jQuery(".collapsible").css("color",this.jQuery("#content").find("h1").eq(0).css("color"))}setupObserver(){this.observer.observe(document.querySelector("#field_field"),{childList:!0,characterdata:!0,subtree:!0,characterDataOldValue:!0})}setupHandlers(e){const i=this;i.jQuery(window).on("load",function(){i.loadSettings(),i.customSearch(e),i.globalSettings.publicFieldFeatureEnables.tooltip&&i.handleTooltipSettings(),i.saveSettings()}),i.jQuery(document).on("click input","#fieldorder, #field_field, #field_berries, #field_nav",function(){i.customSearch(e)}),document.addEventListener("keydown",function(){i.customSearch(e)}),i.jQuery(document).on("change",".qolsetting",function(){i.loadSettings(),i.customSearch(e),i.saveSettings()}),i.jQuery(document).on("input",".qolsetting",function(){i.settingsChange(this.getAttribute("data-key"),i.jQuery(this).val(),i.jQuery(this).parent().parent().attr("class"),i.jQuery(this).parent().attr("class"),this.hasAttribute("array-name")?this.getAttribute("array-name"):""),i.customSearch(e),i.saveSettings()}),this.globalSettings.publicFieldFeatureEnables.search&&(i.jQuery(document).on("click","#addFieldTypeSearch",function(){i.addSelectSearch("typeNumber","types","fieldType",e.TYPE_OPTIONS,"removeFieldTypeSearch","fieldTypes","typeArray"),i.customSearch(e)}),i.jQuery(document).on("click","#removeFieldTypeSearch",function(){i.typeArray=i.removeSelectSearch(i.typeArray,this,i.jQuery(this).parent().find("select").val(),"fieldType","fieldTypes"),i.saveSettings(),i.customSearch(e)}),i.jQuery(document).on("click","#addFieldNatureSearch",function(){i.addSelectSearch("natureNumber","natures","fieldNature",e.NATURE_OPTIONS,"removeFieldNature","natureTypes","natureArray"),i.customSearch(e)}),i.jQuery(document).on("click","#removeFieldNature",function(){i.natureArray=i.removeSelectSearch(i.natureArray,this,i.jQuery(this).parent().find("select").val(),"fieldNature","natureTypes"),i.saveSettings(),i.customSearch(e)}),i.jQuery(document).on("click","#addFieldEggGroupSearch",function(){i.addSelectSearch("eggGroupNumber","eggGroups","fieldEggGroup",e.EGG_GROUP_OPTIONS,"removeFieldEggGroup","eggGroupTypes","eggGroupArray"),i.customSearch(e)}),i.jQuery(document).on("click","#removeFieldEggGroup",function(){i.eggGroupArray=i.removeSelectSearch(i.eggGroupArray,this,i.jQuery(this).parent().find("select").val(),"fieldEggGroup","eggGroupTypes"),i.saveSettings(),i.customSearch(e)}),i.jQuery(document).on("click","#addTextField",function(){i.addTextField(),i.saveSettings()}),i.jQuery(document).on("click","#removeTextField",function(){i.removeTextField(this,i.jQuery(this).parent().find("input").val()),i.saveSettings(),i.customSearch(e)})),this.globalSettings.publicFieldFeatureEnables.sort&&i.jQuery("input.qolalone").on("change",function(){i.jQuery("input.qolalone").not(this).prop("checked",!1)}),this.globalSettings.publicFieldFeatureEnables.tooltip&&(i.jQuery(".collapsible").on("click",function(){this.classList.toggle("active");const e=this.nextElementSibling;"block"===e.style.display?e.style.display="none":e.style.display="block"}),i.jQuery("#field_berries").on("click",function(){i.loadSettings(),i.handleTooltipSettings()}),i.jQuery(".tooltipsetting[data-key=tooltipEnableMods]").on("click",function(){i.loadSettings(),i.handleTooltipSettings(),i.saveSettings()}),i.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").on("click",function(){i.loadSettings(),i.handleTooltipSettings(),i.saveSettings()}),i.jQuery(".tooltipsetting[data-key=tooltipBerry]").on("click",function(){i.loadSettings(),i.handleTooltipSettings(),i.saveSettings()})),i.jQuery(window).on("keyup.field_shortcuts",function(e){const t=i.jQuery("#field_berries");if(0==i.jQuery(e.target).closest("input, textarea").length)switch(e.keyCode){case 49:case 97:t.find("a").eq(0).trigger("click");break;case 50:case 98:t.find("a").eq(1).trigger("click");break;case 51:case 99:t.find("a").eq(2).trigger("click");break;case 52:case 100:t.find("a").eq(3).trigger("click");break;case 53:case 101:t.find("a").eq(4).trigger("click")}})}handleTooltipSettings(){var e=this;e.jQuery(".tooltipsetting[data-key=tooltipEnableMods]").prop("checked")?(e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("disabled",!1),e.jQuery(".tooltipsetting[data-key=tooltipBerry]").prop("disabled",!1),e.jQuery("#field_berries").hasClass("selected")?e.jQuery(".tooltipsetting[data-key=tooltipBerry]").prop("checked")?e.disableTooltips():e.enableTooltips():e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("checked")?e.disableTooltips():e.enableTooltips()):(e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("disabled",!0),e.jQuery(".tooltipsetting[data-key=tooltipBerry]").prop("disabled",!0),e.jQuery(".tooltipsetting[data-key=tooltipNoBerry]").prop("checked")&&e.enableTooltips(),e.jQuery(".tooltipsetting[data-key=tooltipBerry]").prop("checked")&&e.enableTooltips())}disableTooltips(){this.jQuery("#field_field>div.field>.fieldmon").removeAttr("data-tooltip").removeClass("tooltip_trigger")}enableTooltips(){this.jQuery("#field_field>div.field>.fieldmon").attr("data-tooltip","")}searchForImgTitle(e,t){const i=e.SHELTER_SEARCH_DATA;e=i.indexOf(t),t=i[e+1];const s=this.jQuery('img[title*="'+t+'"]');e=this.helpers.getPokemonImageClass();s.length&&(t=s.parent().parent().parent().parent().prev().children("img."+e),this.jQuery(t).addClass("publicfoundme"))}searchForCustomPokemon(t,e,i,s){const o=[];e&&o.push("[M]"),i&&o.push("[F]"),s&&o.push("[N]");var a=this.helpers.getPokemonImageClass();if(0<o.length)for(let e=0;e<o.length;e++){var r=o[e];const l=this.jQuery("#field_field .tooltip_content:containsIN("+t+") img[title*='"+r+"']");l.length&&(r=l.parent().parent().parent().parent().prev().children("img."+a),this.jQuery(r).addClass("publicfoundme"))}else{const n=this.jQuery("#field_field .tooltip_content:containsIN("+t+'):not(:containsIN("Egg"))');n.length&&(e=n.parent().parent().parent().parent().prev().children("img."+a),this.jQuery(e).addClass("publicfoundme"))}}searchForCustomEgg(e){const t=this.jQuery("#field_field .tooltip_content:containsIN("+e+'):contains("Egg")');var e=this.helpers.getPokemonImageClass();t.length&&(e=t.parent().parent().parent().parent().prev().children("img."+e),this.jQuery(e).addClass("publicfoundme"))}searchForCustomPng(e){e=this.jQuery('#field_field img[src*="'+e+'"]');e.length&&this.jQuery(e).addClass("publicfoundme")}customSearch(l){const n=this;var e=this.helpers.getPokemonImageClass();if(n.globalSettings.publicFieldFeatureEnables.sort)if(!0===this.settings.fieldByBerry?(this.jQuery(".fieldmon").removeClass("qolSortMiddle"),this.jQuery(".field").removeClass("qolGridField"),this.jQuery(".fieldmon").removeClass("qolGridPokeSize"),this.jQuery(".fieldmon>img").removeClass("qolGridPokeImg"),this.jQuery('#field_field [data-flavour*="any-"]').length&&this.jQuery('#field_field [data-flavour*="any-"]').addClass("qolAnyBerry"),this.jQuery('#field_field [data-flavour*="sour-"]').length&&this.jQuery('#field_field [data-flavour*="sour-"]').addClass("qolSourBerry"),this.jQuery('#field_field [data-flavour*="spicy-"]').length&&this.jQuery('#field_field [data-flavour*="spicy-"]').addClass("qolSpicyBerry"),this.jQuery('#field_field [data-flavour*="dry-"]').length&&this.jQuery('#field_field [data-flavour*="dry-"]').addClass("qolDryBerry"),this.jQuery('#field_field [data-flavour*="sweet-"]').length&&this.jQuery('#field_field [data-flavour*="sweet-"]').addClass("qolSweetBerry"),this.jQuery('#field_field [data-flavour*="bitter-"]').length&&this.jQuery('#field_field [data-flavour*="bitter-"]').addClass("qolBitterBerry")):!0===this.settings.fieldByMiddle?(this.jQuery('#field_field [data-flavour*="any-"]').removeClass("qolAnyBerry"),this.jQuery('#field_field [data-flavour*="sour-"]').removeClass("qolSourBerry"),this.jQuery('#field_field [data-flavour*="spicy-"]').removeClass("qolSpicyBerry"),this.jQuery('#field_field [data-flavour*="dry-"]').removeClass("qolDryBerry"),this.jQuery('#field_field [data-flavour*="sweet-"]').removeClass("qolSweetBerry"),this.jQuery('#field_field [data-flavour*="bitter-"]').removeClass("qolBitterBerry"),this.jQuery(".field").removeClass("qolGridField"),this.jQuery(".fieldmon").removeClass("qolGridPokeSize"),this.jQuery(".fieldmon>img").removeClass("qolGridPokeImg"),this.jQuery(".fieldmon").addClass("qolSortMiddle")):!0===this.settings.fieldByGrid?(this.jQuery('#field_field [data-flavour*="any-"]').removeClass("qolAnyBerry"),this.jQuery('#field_field [data-flavour*="sour-"]').removeClass("qolSourBerry"),this.jQuery('#field_field [data-flavour*="spicy-"]').removeClass("qolSpicyBerry"),this.jQuery('#field_field [data-flavour*="dry-"]').removeClass("qolDryBerry"),this.jQuery('#field_field [data-flavour*="sweet-"]').removeClass("qolSweetBerry"),this.jQuery('#field_field [data-flavour*="bitter-"]').removeClass("qolBitterBerry"),this.jQuery(".fieldmon").removeClass("qolSortMiddle"),this.jQuery(".field").addClass("qolGridField"),this.jQuery(".fieldmon").addClass("qolGridPokeSize"),this.jQuery(".fieldmon>img").addClass("qolGridPokeImg")):(this.jQuery('#field_field [data-flavour*="any-"]').removeClass("qolAnyBerry"),this.jQuery('#field_field [data-flavour*="sour-"]').removeClass("qolSourBerry"),this.jQuery('#field_field [data-flavour*="spicy-"]').removeClass("qolSpicyBerry"),this.jQuery('#field_field [data-flavour*="dry-"]').removeClass("qolDryBerry"),this.jQuery('#field_field [data-flavour*="sweet-"]').removeClass("qolSweetBerry"),this.jQuery('#field_field [data-flavour*="bitter-"]').removeClass("qolBitterBerry"),this.jQuery(".fieldmon").removeClass("qolSortMiddle"),this.jQuery(".field").removeClass("qolGridField"),this.jQuery(".fieldmon").removeClass("qolGridPokeSize"),this.jQuery(".fieldmon>img").removeClass("qolGridPokeImg")),!1===this.settings.fieldClickCount)this.jQuery("#pokemonclickcount").remove();else if(!0===this.settings.fieldClickCount){var i=this.jQuery(".fieldmon").map(function(){return n.jQuery(this).attr("data-fed")}).get();let t=0;for(let e=0;e<i.length;e++)t+=i[e]<<0;var s=this.jQuery(".fieldpkmncount").text();0===this.jQuery("#pokemonclickcount").length?document.querySelector(".fielddata").insertAdjacentHTML("beforeend",'<div id="pokemonclickcount">'+t+" / "+s+" Clicked</div>"):this.jQuery("#pokemonclickcount").text()!==t+" / "+s+" Clicked"&&this.jQuery("#pokemonclickcount").text(t+" / "+s+" Clicked"),""!==s&&(JSON.stringify(t)===s&&this.jQuery("#pokemonclickcount").css({color:"#059121"}),t!==JSON.parse(s)&&this.jQuery("#pokemonclickcount").css({color:"#a30323"}))}if(n.globalSettings.publicFieldFeatureEnables.search){const o=document.querySelectorAll(".publicfoundme");if(null!==o&&o.forEach(e=>{n.jQuery(e).removeClass("publicfoundme")}),!0===this.settings.fieldShiny&&this.searchForImgTitle(l,"findShiny"),!0===this.settings.fieldAlbino&&this.searchForImgTitle(l,"findAlbino"),!0===this.settings.fieldMelanistic&&this.searchForImgTitle(l,"findMelanistic"),!0===this.settings.fieldPrehistoric&&this.searchForImgTitle(l,"findPrehistoric"),!0===this.settings.fieldDelta&&this.searchForImgTitle(l,"findDelta"),!0===this.settings.fieldMega&&this.searchForImgTitle(l,"findMega"),!0===this.settings.fieldStarter&&this.searchForImgTitle(l,"findStarter"),!0===this.settings.fieldCustomSprite&&this.searchForImgTitle(l,"findCustomSprite"),!0===this.settings.fieldItem){const a=this.jQuery(".tooltip_content .item>div>.tooltip_item");a.length&&(s=a.parent().parent().parent().parent().prev().children("img."+e),this.jQuery(s).addClass("publicfoundme"))}const c=this.typeArray.filter(e=>""!=e),d=this.natureArray.filter(e=>""!=e),u=this.eggGroupArray.filter(e=>""!=e);(0<c.length||0<d.length||0<u.length)&&this.jQuery(".fieldmon").each(function(){var t=n.jQuery(this)[0].childNodes[0],e=n.helpers.parseFieldPokemonTooltip(n.jQuery,l,n.jQuery(t).parent().next()[0]),i=e.types[0]+"",s=1<e.types.length?e.types[1]+"":"",o=l.NATURE_LIST[e.nature];const a=n.jQuery(this).next().find(".fieldmontip").children(":contains(Egg Group)").eq(0).text().slice("Egg Group: ".length);for(let e=0;e<c.length;e++)i!==c[e]&&s!==c[e]||n.jQuery(t).addClass("publicfoundme");for(let e=0;e<d.length;e++)o===l.NATURE_LIST[d[e]]&&n.jQuery(t).addClass("publicfoundme");for(let e=0;e<u.length;e++){var r=l.EGG_GROUP_LIST[u[e]];(a===r||-1<a.indexOf(r+"/")||-1<a.indexOf("/"+r))&&n.jQuery(t).addClass("publicfoundme")}});for(let e=0;e<this.customArray.length;e++){var t=this.customArray[e];""!=t&&(!0===this.settings.fieldCustomPokemon&&this.searchForCustomPokemon(t,this.settings.fieldMale,this.settings.fieldFemale,this.settings.fieldNoGender),!0===this.settings.fieldCustomEgg&&this.searchForCustomEgg(t),!0===this.settings.fieldCustomPng&&this.searchForCustomPng(t))}}}addSelectSearch(e,t,i,s,o,a,r){t=this.helpers.selectSearchDiv(e,t,i,s,o,a,r),i=this.jQuery(`#${a}>div`).length;this.jQuery("#"+a).append(t),this.jQuery("."+e).removeClass(e).addClass(""+i)}removeSelectSearch(e,t,i,s,o){e=this.jQuery.grep(e,function(e){return e!=i}),this.settings[s]=e.toString(),this.jQuery(t).parent().remove();for(let e=0;e<this.jQuery(`#${o}>div`).length;e++){var a=e+1;this.jQuery("."+e).next().removeClass().addClass(""+a)}return e}addTextField(){var e=this.helpers.textSearchDiv("numberDiv","fieldCustom","removeTextField","customArray"),t=this.jQuery("#searchkeys>div").length;this.jQuery("#searchkeys").append(e),this.jQuery(".numberDiv").removeClass("numberDiv").addClass(""+t)}removeTextField(e,t){this.customArray=this.jQuery.grep(this.customArray,function(e){return e!=t}),this.settings.fieldCustom=this.customArray.toString(),this.jQuery(e).parent().remove();let i;for(i=0;i<this.jQuery("#searchkeys>div").length;i++){var s=i+1;this.jQuery("."+i).next().removeClass().addClass(""+s)}}}class QoLHub{constructor(e,t,i,s,o,a,r){this.jQuery=e,this.localStorageMgr=t,this.HELPERS=i,this.GLOBALS=s,this.PAGES=o,this.SETTINGS_SAVE_KEY=s.SETTINGS_SAVE_KEY,this.DEFAULT_USER_SETTINGS=a,this.USER_SETTINGS=r||this.DEFAULT_USER_SETTINGS,this.LINKED_SETTINGS=this.USER_SETTINGS.LINKED_SETTINGS}setupCSS(){var e=this.USER_SETTINGS.customCss;const t=this;less.render(e).then(function(e){"css"in e?""!==e.css.trim()&&t.jQuery("head").append('<style type="text/css">'+e.css+"</style>"):console.warn("Could not load custom CSS from LESS parser.")}).catch(function(e){console.error("Failed to parse LESS: "+e.message)})}setupHandlers(){const t=this;t.jQuery("#qolcustomcss",document).on("keydown",function(e){if(9==e.keyCode||9==e.which){e.preventDefault();const i=this.selectionStart;t.jQuery(this).val(function(e,t){return t.substring(0,i)+"\t"+t.substring(this.selectionEnd)}),this.selectionEnd=i+1}}),t.jQuery(document).on("input",".qolhubsetting",function(){var e=this.getAttribute("data-key");t.settingsChange(this.getAttribute("data-key"),t.jQuery(this).val(),t.jQuery(this).parent().parent().attr("class"),t.jQuery(this).parent().attr("class"),this.hasAttribute("array-name")?this.getAttribute("array-name"):""),t.handleLinkedSetting(e)}),t.jQuery(document).on("click",".closeHub",function(){t.close(document)}),t.jQuery(document).on("click","#resetPageSettings",function(){var e=t.jQuery(this).parent().find("select").val();t.clearPageSettings(e)}),t.jQuery(document).on("click","h3.slidermenu",function(){t.jQuery(this).next().slideToggle()}),t.jQuery(document).on("mouseover","#clearCachedDex",function(){t.jQuery("#clearCachedDex").next().remove()}),t.jQuery(document).on("click","#clearCachedDex",function(){t.resetDex()})}loadSettings(){(null===this.localStorageMgr.getItem(this.SETTINGS_SAVE_KEY)||this.USER_SETTINGS.load(JSON.parse(this.localStorageMgr.getItem(this.SETTINGS_SAVE_KEY))))&&this.saveSettings()}saveSettings(){this.localStorageMgr.setItem(this.SETTINGS_SAVE_KEY,JSON.stringify(this.USER_SETTINGS))}populateSettings(){for(const e in this.USER_SETTINGS)Object.hasOwnProperty.call(this.USER_SETTINGS,e)&&!function e(t,i,s,o){var a=t[i];const r=[...o=o||[],i];if("boolean"==typeof a)t=r.join("."),s.HELPERS.toggleSetting(t,a,"qolhubsetting");else if("string"==typeof a)o=r.join("."),s.HELPERS.toggleSetting(o,a,"qolhubsetting");else if("object"==typeof a)for(const l in a)e(a,l,s,r)}(this.USER_SETTINGS,e,this),this.handleLinkedSetting(e)}settingsChange(e,t){var i=function(e,t){var i=e.split("."),s=i.length;let o=t||this;for(let e=0;e<s;e++){if(!Object.hasOwnProperty.call(o,i[e]))return null;o=o[i[e]]}return o}(e,this.USER_SETTINGS);let s;return void 0!==i&&(!1===i?s=!0:!0===i?s=!1:"string"==typeof i&&(s=t),!!function e(t,i,s){const o=t.split(".");t=o[0];const a=o.slice(1);return!!Object.hasOwnProperty.call(i,t)&&(0==a.length?(i[t]=s,!0):e(a.join("."),i[t],s))}(e,this.USER_SETTINGS,s)&&(this.saveSettings(),!0))}clearPageSettings(e){"None"!==e&&this.PAGES.clearPageSettings(e)}handleLinkedSetting(t){var e=this.LINKED_SETTINGS.findIndex(e=>e.manager===t);if(-1<e){var i=this.LINKED_SETTINGS[e].managed,e=this.USER_SETTINGS[i];if(!1===this.jQuery(`[data-key=${t}]`).prop("checked"))for(const s in e)this.jQuery(`[data-key="${i}.${s}"]`).prop("disabled",!0);else for(const o in e)this.jQuery(`[data-key="${i}.${o}"]`).prop("disabled",!1)}}build(e){this.jQuery("body",e).append(this.GLOBALS.TEMPLATES.qolHubHTML),this.jQuery("#core",e).addClass("scrolllock");var t=this.jQuery(".qolHubHead.qolHubSuperHead").css("background-color"),i=this.jQuery(".qolHubHead.qolHubSuperHead").css("color"),s=this.jQuery(".qolHubTable").css("background-color"),o=this.jQuery(".qolHubTable").css("color"),a=this.jQuery(".dialog>div>div>div").css("border"),t=(this.jQuery(".qolHubHead").css("background-color",t),this.jQuery(".qolHubHead").css("color",i),this.jQuery(".qolChangeLogHead").css("background-color",t),this.jQuery(".qolChangeLogHead").css("color",i),this.jQuery(".qolChangeLogHead").css("border",a),this.jQuery(".qolopencloselist.qolChangeLogContent").css("background-color",s),this.jQuery(".qolopencloselist.qolChangeLogContent").css("color",o),this.jQuery(".qolAllSettings").css("border",a),this.USER_SETTINGS.customCss),i=(""===t?this.jQuery(".textareahub textarea",e).val("#thisisanexample {\n    color: yellow;\n}\n\n.thisisalsoanexample {\n    background-color: blue!important;\n}\n\nhappycssing {\n    display: absolute;\n}"):this.jQuery(".textareahub textarea",e).val(t),null===this.GLOBALS.DEX_UPDATE_DATE?"Not updated since installation":this.GLOBALS.DEX_UPDATE_DATE);this.jQuery(".qolDate",e).text(i)}close(e){this.jQuery(".dialog",e).remove(),this.jQuery("#core",e).removeClass("scrolllock")}resetDex(){this.jQuery("#clearCachedDex").next().remove(),this.GLOBALS.DEX_UPDATE_DATE=null,this.GLOBALS.DEX_DATA=null,this.localStorageMgr.removeItem(this.GLOBALS.POKEDEX_DATA_KEY),this.jQuery("#clearCachedDex").after("<span> Cleared!</span>")}}class Resources{css(){return'#announcements li[data-name=QoL]{cursor:pointer}#labsuccess{text-align:center}#labfound{padding-top:20px}.boldp{font-weight:700}.collapsible{border-radius:6px;cursor:pointer;max-width:600px;padding:4px;position:relative;text-align:left;width:100%}.collapsible_content{display:none;overflow:hidden;padding:0 18px}.oneevolutionleft{background-color:#f36971;border-radius:100%;box-shadow:0 0 25px 15px #f36971}.twoevolutionleft{background-color:#6a6df2;border-radius:100%;box-shadow:0 0 25px 15px #6a6df2} .qoltooltip_trigger{border-bottom:1px dotted #000;display:inline-block;position:relative}.tooltip .tooltiptext{border-radius:6px;bottom:125%;left:50%;margin-left:0;opacity:0;padding:5px 0;position:absolute;text-align:center;transition:opacity .3s;visibility:hidden;width:500px;z-index:1}.tooltip .tooltiptext:after{border-style:solid;border-width:5px;content:"";left:50%;margin-left:-5px;position:absolute;top:100%}.tooltip:hover .tooltiptext{opacity:1;visibility:visible}.customsearchtooltip{width:400px}#sheltersuccess{text-align:center}#shelterfound{padding-top:20px}.daycarefoundme,.labfoundme,.privatefoundme,.publicfoundme,.shelterfoundme{background-color:#d5e265;border-radius:100%;box-shadow:0 0 25px 15px #d5e265}.qolshelterareagrid{display:flex!important;display:grid!important;flex-direction:row;flex-flow:row wrap;grid-template-columns:repeat(6,1fr);grid-template-rows:repeat(5,70px);min-height:350px}.qolshelterareagridmq2{grid-template-rows:repeat(5,35px);min-height:175px}.qoltooltipgrid{bottom:0;position:absolute!important;transform:translateY(100%)}.qolpokemongrid{align-items:center;display:inline-block!important;display:inline-flex!important;flex:1 1 16%;justify-content:center;position:static!important} #fieldorder{border-radius:4px;padding:4px}#fieldorder,#fieldsearch{margin:16px auto;max-width:600px;position:relative}.qolAnyBerry{left:0!important;margin:-10px!important;top:45%!important;transition:none!important}.qolAnyBerry>img.big{animation:none!important;padding:25px!important}.qolSourBerry{left:0!important;margin:-10px!important;top:45%!important;transition:none!important}.qolSourBerry>img.big{animation:none!important;padding:25px!important}.qolSpicyBerry{left:20%!important;margin:-10px!important;top:45%!important;transition:none!important}.qolSpicyBerry>img.big{animation:none!important;padding:25px!important}.qolDryBerry{left:40%!important;margin:-10px!important;top:45%!important;transition:none!important}.qolDryBerry>img.big{animation:none!important;padding:25px!important}.qolSweetBerry{left:60%!important;margin:-10px!important;top:45%!important;transition:none!important}.qolSweetBerry>img.big{animation:none!important;padding:25px!important}.qolBitterBerry{left:80%!important;margin:-10px!important;top:45%!important;transition:none!important}.qolBitterBerry>img.big{animation:none!important;padding:25px!important}.qolSortMiddle{left:40%!important;margin:-10px!important;top:35%!important;transition:none!important}.qolSortMiddle>img.big{animation:none!important;padding:40px!important}.qolGridField{display:flex!important;display:grid;flex-flow:row wrap;grid-template-columns:repeat(8,12.5%);grid-template-rows:repeat(5,69px);min-height:345px;padding-top:0!important}.mq25 .qolGridField{grid-template-rows:repeat(5,36px);min-height:180px}.qolGridPokeSize{align-items:center;display:inline-flex;flex:1 1 12.5%;justify-content:center;margin:0!important;position:static!important}.qolGridPokeImg{animation:none!important;max-height:70px;max-width:75px} .qolHubSuperHead:first-child{border-top-left-radius:5px;border-top-right-radius:5px}.qolHubHead{margin:0;padding:4px;text-align:center}.qolAllSettings{vertical-align:top}.qolAllSettings,.qolChangeLog{border-top:none;height:100%;width:315px}.qolAllSettings>ul{list-style-type:none;padding:0;vertical-align:top}.qolHubTable{border-collapse:collapse;border-spacing:0;width:100%}.qolChangeLogList{margin:0;padding:4px;text-align:left;text-align:center}.qolChangeLogContent{display:none;list-style-type:disc}.expandlist{font-size:16px;list-style-type:none;text-align:center}.slidermenu{cursor:pointer}.qolChangeLogHead{margin:0}.closeHub{cursor:pointer;font-size:20px;margin:0 10px 0 0;text-align:right}.textareahub textarea{box-sizing:border-box;width:100%} #qolpartymod{text-align:center}.qolPartyHideAll #partybox .party .action a,.qolPartyHideDislike #partybox .party .action a,.qolPartyNiceTable #partybox .party .action a{position:absolute;width:100%}.qolPartyHideAll #partybox .party .action .berrybuttons[data-up=bitter]>[data-berry=rawst],.qolPartyHideAll #partybox .party .action .berrybuttons[data-up=dry]>[data-berry=chesto],.qolPartyHideAll #partybox .party .action .berrybuttons[data-up=sour]>[data-berry=aspear],.qolPartyHideAll #partybox .party .action .berrybuttons[data-up=spicy]>[data-berry=cheri],.qolPartyHideAll #partybox .party .action .berrybuttons[data-up=sweet]>[data-berry=pecha],.qolPartyHideDislike #partybox .party .action .berrybuttons[data-up=bitter]>[data-berry=rawst],.qolPartyHideDislike #partybox .party .action .berrybuttons[data-up=dry]>[data-berry=chesto],.qolPartyHideDislike #partybox .party .action .berrybuttons[data-up=sour]>[data-berry=aspear],.qolPartyHideDislike #partybox .party .action .berrybuttons[data-up=spicy]>[data-berry=cheri],.qolPartyHideDislike #partybox .party .action .berrybuttons[data-up=sweet]>[data-berry=pecha],.qolPartyNiceTable #partybox .party .action .berrybuttons[data-up=bitter]>[data-berry=rawst],.qolPartyNiceTable #partybox .party .action .berrybuttons[data-up=dry]>[data-berry=chesto],.qolPartyNiceTable #partybox .party .action .berrybuttons[data-up=sour]>[data-berry=aspear],.qolPartyNiceTable #partybox .party .action .berrybuttons[data-up=spicy]>[data-berry=cheri],.qolPartyNiceTable #partybox .party .action .berrybuttons[data-up=sweet]>[data-berry=pecha]{z-index:99}.qolPartyHideAll #partybox .party>div>:not(.action),.qolPartyNiceTable #partybox .party>div>:not(.action){display:none}.qolPartyNiceTable #profilepage #partybox .party{box-shadow:none;width:250px}.qolPartyNiceTable #profilepage #partybox .party>div{border-radius:0;border-width:1px 1px 0;width:210px}.qolPartyNiceTable #profilepage #partybox .party>div:first-child{border-radius:6px 6px 0 0}.qolPartyNiceTable #profilepage #partybox .party>div:nth-child(6){border-bottom-width:1px;border-radius:0 0 6px 6px}.qolPartyHideAll #profilepage #partybox .party{box-shadow:none}.qolPartyHideAll #profilepage #partybox .party>div{background:transparent;border:none;height:0;padding:0;position:unset;width:0}.qolPartyHideAll #profilepage #partybox .party>div .action,.qolPartyHideAll #profilepage #partybox .party>div .action .berrybuttons{height:0;position:unset!important}.qolPartyHideAll #profilepage #partybox .party>div .action a{margin-left:10px;margin-top:3px;position:absolute;width:200px}.qolPartyHideAll #profilebox,.qolPartyHideAll #profilepage #partybox .party>div .action table,.qolPartyHideAll #trainerimage,.qolPartyHideAll .working{display:none} .badgelist>table>tbody>tr>td>.itemtooltip{margin-top:-28px;position:relative}.badgelist>table>tbody>tr>td>p{margin-block-end:0;margin-block-start:0}.qolBadges{border-collapse:collapse}.qolBadgesTop td{border-top:1px solid}.qolBadgesBot td:first-of-type img{margin-right:5px;vertical-align:middle} '}fieldSearchHTML(){return`<div id="fieldsearch"><button type="button" class="collapsible"><b>Advanced Field search</b></button><div class="collapsible_content"><p>Check the boxes of Pokemon you wish to find in this field! You can select multiple checkboxes at once and it will notify you whenever it will find the types of Pokemons you selected!</p><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldShiny">Shiny</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldAlbino">Albino</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldMelanistic">Melanistic</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldPrehistoric">Prehistoric</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldDelta">Delta</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldMega">Mega</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldStarter">Starter</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldCustomSprite">Custom Sprite</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldItem">Holds Item</label></td></tr></tbody></table><h4>Search on type</h4><p>Select which types of Pokemon you wish to find</p><input type="button" value="Add type" id="addFieldTypeSearch"><div id="fieldTypes"><div class="0"></div></div><h4>Search on nature</h4><p>Select which natures of Pokemon you wish to find</p><input type="button" value="Add nature" id="addFieldNatureSearch"><div id="natureTypes"><div class="0"></div></div><h4>Search on egg group</h4><p>Select which egg groups you wish to find</p><input type="button" value="Add egg group" id="addFieldEggGroupSearch"><div id="eggGroupTypes"><div class="0"></div></div><h4>Custom Search</h4><p>Here you can custom find any Pokemon you want! Hover over "Custom Search Help" for more info.</p><div class="tooltip_trigger qoltooltip_trigger">Custom Search Help</div><div class="tooltip_content customsearchtooltip"><span class="tooltiptext">Custom search by Pokemon name<br><br>Select Custom Egg and/or Custom Pokemon and type the name of the Pokemon you wish to find to find that Pokemon or the egg of that Pokemon. If you want to find a Pokemon with a specific gender, select the gender you wish to find.<br><br>Custom search by image code<br><br>Select By img code (and de-select Custom Egg & Custom Pokemon checkboxes) to find a Pokemon or egg by img code. For example you wish to find a Bulbasaur. When the URL for its image is this:<br>//pfq-static.com/img/pkmn/1/g/g.png/t=1474027727<br>paste only '1/g/g' (without the quotes), and now it will show you when a Bulbasaur is found! You may also copy the complete link.<br><a href="https://docs.google.com/spreadsheets/d/1rD1VZNTQRYXMOVKvGasjmMdMJu-iheE-ajsFkfs4QXA/edit?usp=sharing">List of Eggs Image Codes</a><br><br>More info on finding Pokemon with their img code:<br><br><a href="https://pokefarm.com/forum/thread/127552/Site-Skins-How-To-and-Helpful-CSS">"Pokemon Modifications - Make Shelter Pokemon Stand Out"</a></span></div><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldCustomEgg">Custom Egg</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldCustomPokemon">Custom Pokemon</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldCustomPng">By img code</label></td></tr></tbody></table><h4>Search on gender</h4><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldMale">Male</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldFemale">Female</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldNoGender">Genderless</label></td></tr></tbody></table><h4>Search Keys</h4><input type="button" value="Add searchfield" id="addTextField"><div id="searchkeys"><div class="0"></div></div></div></div>`}fieldSortHTML(){return'<div id="fieldorder"><label><input type="checkbox" class="qolsetting qolalone" data-key="fieldByBerry"> Sort by berries</label> <label><input type="checkbox" class="qolsetting qolalone" data-key="fieldByMiddle"> Sort in the middle</label> <label><input type="checkbox" class="qolsetting qolalone" data-key="fieldByGrid"> Align to grid</label> <label><input type="checkbox" class="qolsetting" data-key="fieldClickCount"> Click counter</label></div>'}labOptionsHTML(){return'<div id="labCustomSearch" class="center"><p class="boldp">Egg type search</p><p>Select which egg types you would like to find in the lab. You can select multiple!</p><input type="checkbox" class="qolsetting" data-key="findTypeEgg">Egg types <input type="button" value="Add typesearch" id="addLabTypeList"><div id="labTypes"><div class="0"></div></div><p class="boldp">Egg custom search</p><p>Add the pokemon name or Img code (complete link starting from //pfq..) that you would like to find in the lab in a searchfield. You can select multiple!</p><input type="checkbox" class="qolsetting" data-key="customEgg">Custom Egg <input type="button" value="Add searchfield" id="addLabSearch"><div id="searchkeys"><div class="0"></div></div></div>'}evolveFastHTML(){return'<ul class="qolEvolveTypeList"><li class="expandlist"><h3 class="slidermenu">Normal</h3><ul class="normal 0 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Fire</h3><ul class="Fire 1 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Water</h3><ul class="Water 2 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Electric</h3><ul class="Electric 3 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Grass</h3><ul class="Grass 4 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Ice</h3><ul class="Ice 5 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Fighting</h3><ul class="Fighting 6 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Poison</h3><ul class="Poison 7 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Ground</h3><ul class="Ground 8 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Flying</h3><ul class="Flying 9 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Psychic</h3><ul class="Psychic 10 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Bug</h3><ul class="Bug 11 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Rock</h3><ul class="Rock 12 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Ghost</h3><ul class="Ghost 13 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Dragon</h3><ul class="Dragon 14 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Dark</h3><ul class="Dark 15 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Steel</h3><ul class="Steel 16 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Fairy</h3><ul class="Fairy 17 qolChangeLogContent"></ul></li><br><li class="expandlist"><h3 class="slidermenu">Unknown Types</h3><ul class="Unknown 18 qolChangeLogContent"></ul></li></ul>'}privateFieldSearchHTML(){return`<div id="fieldsearch"><button type="button" class="collapsible"><b>Advanced Field search</b></button><div class="collapsible_content"><p>Check the boxes of Pokemon you wish to find in this field! You can select multiple checkboxes at once and it will notify you whenever it will find the types of Pokemons you selected!</p><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldShiny">Shiny</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldAlbino">Albino</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldMelanistic">Melanistic</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldPrehistoric">Prehistoric</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldDelta">Delta</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldMega">Mega</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldStarter">Starter</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldCustomSprite">Custom Sprite</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldItem">Holds Item</label></td></tr></tbody></table><h4>Search on type</h4><p>Select which types of Pokemon you wish to find</p><input type="button" value="Add type" id="addPrivateFieldTypeSearch"><div id="fieldTypes"><div class="0"></div></div><h4>Search on nature</h4><p>Select which natures of Pokemon you wish to find</p><input type="button" value="Add nature" id="addPrivateFieldNatureSearch"><div id="natureTypes"><div class="0"></div></div><h4>Search on egg group</h4><p>Select which egg groups you wish to find</p><input type="button" value="Add egg group" id="addPrivateFieldEggGroupSearch"><div id="eggGroupTypes"><div class="0"></div></div><h4>Custom Search</h4><p>Here you can custom find any Pokemon you want! Hover over "Custom Search Help" for more info.</p><div class="tooltip_trigger qoltooltip_trigger">Custom Search Help</div><div class="tooltip_content customsearchtooltip"><span class="tooltiptext">Custom search by Pokemon name<br><br>Select Custom Egg and/or Custom Pokemon and type the name of the Pokemon you wish to find to find that Pokemon or the egg of that Pokemon. If you want to find a Pokemon with a specific gender, select the gender you wish to find.<br><br>Custom search by image code<br><br>Select By img code (and de-select Custom Egg & Custom Pokemon checkboxes) to find a Pokemon or egg by img code. For example you wish to find a Bulbasaur. You paste it's Img code in the search bar:<br>//pfq-static.com/img/pkmn/1/g/g.png/t=1474027727<br>and now it will show you when a Bulbasaur is found! Copy paste the complete link (starting from //) or you won't find anything.<br><br><a href="https://docs.google.com/spreadsheets/d/1rD1VZNTQRYXMOVKvGasjmMdMJu-iheE-ajsFkfs4QXA/edit?usp=sharing">List of Eggs Image Codes</a><br><br>More info on finding Pokemon with their img code:<br><br><a href="https://pokefarm.com/forum/thread/127552/Site-Skins-How-To-and-Helpful-CSS">"Pokemon Modifications - Make Shelter Pokemon Stand Out"</a></span></div><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="customEgg">Custom Egg</label></td><td><label><input type="checkbox" class="qolsetting" data-key="customPokemon">Custom Pokemon</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="customPng">By img code</label></td></tr></tbody></table><h4>Search on gender</h4><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="fieldMale">Male</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldFemale">Female</label></td><td><label><input type="checkbox" class="qolsetting" data-key="fieldNoGender">Genderless</label></td></tr></tbody></table><h4>Search Keys</h4><input type="button" value="Add searchfield" id="addTextField"><div id="searchkeys"><div class="0"></div></div></div></div>`}shelterOptionsHTML(){return`<div id="shelteroptionsqol"><p>Check the boxes of Pokemon you wish to find in the shelter! You can select multiple checkboxes at once and it will notify you whenever it will find the types of Pokemon you selected! Use the letter 'n' key to select and cycle through the Pokemon matched by the script.</p><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="findNewEgg">New Egg</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findNewPokemon">New Pokemon</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findShiny">Shiny</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findAlbino">Albino</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findMelanistic">Melanistic</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findPrehistoric">Prehistoric</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findDelta">Delta</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findMega">Mega</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findStarter">Starter</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findCustomSprite">Custom Sprite</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findLegendary">Legendary</label></td></tr></tbody></table><h4>Search on type</h4><p>Select which types of Pokemon and/or eggs you wish to find</p><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="findTypeEgg">Egg types</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findTypePokemon">Pokemon types</label></td></tr></tbody></table><input type="button" value="Add typesearch" id="addShelterTypeList"><div id="shelterTypes"><div class="0"></div></div><h4>Custom Search</h4><p>Here you can custom find any Pokemon you want! Hover over "Custom Search Help" for more info.</p><div class="tooltip_trigger qoltooltip_trigger">Custom Search Help</div><div class="tooltip_content customsearchtooltip"><span class="tooltiptext">Custom search by Pokemon name<br><br>Select Custom Egg and/or Custom Pokemon and type the name of the Pokemon you wish to find to find that Pokemon or the egg of that Pokemon. If you want to find a Pokemon with a specific gender, select the gender you wish to find.<br><br>Custom search by image code<br><br>Select By img code (and de-select Custom Egg & Custom Pokemon checkboxes) to find a Pokemon or egg by img code. For example you wish to find a Bulbasaur. You paste it's Img code in the search bar:<br>//pfq-static.com/img/pkmn/1/g/g.png/t=1474027727<br>and now it will show you when a Bulbasaur is found! Copy paste the complete link (starting from //) or you won't find anything.<br><br><a href="https://docs.google.com/spreadsheets/d/1rD1VZNTQRYXMOVKvGasjmMdMJu-iheE-ajsFkfs4QXA/edit?usp=sharing">List of Eggs Image Codes</a><br><br>More info on finding Pokemon with their img code:<br><br><a href="https://pokefarm.com/forum/thread/127552/Site-Skins-How-To-and-Helpful-CSS">"Pokemon Modifications - Make Shelter Pokemon Stand Out"</a></span></div><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="customEgg">Custom Egg</label></td><td><label><input type="checkbox" class="qolsetting" data-key="customPokemon">Custom Pokemon</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="customPng">By img code</label></td></tr></tbody></table><h4>Search on Gender</h4><table><tbody><tr><td><label><input type="checkbox" class="qolsetting" data-key="findMale">Male</label></td><td><label><input type="checkbox" class="qolsetting" data-key="findFemale">Female</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting" data-key="findNoGender">Genderless</label></td></tr></tbody></table><h4>Search Keys</h4><input type="button" value="Add searchfield" id="addShelterTextfield"><div id="searchkeys"><div class="0"></div></div></div>`}qolHubHTML(){return`<div class="dialog"><div><div><div><h3 class="qolHubHead qolHubSuperHead">Quality of Life userscript Hub</h3><div><p>Welcome to the user hub of the QoL userscript! Here you can adjust the script settings and view the latest changes to the script.</p><div><table class="qolHubTable"><tbody><tr><td><h3 class="qolHubHead">Settings</h3></td></tr><tr><td class="qolAllSettings"><ul><li><label><input type="checkbox" class="qolhubsetting" data-key="enableDaycare"> <span>Highlight Breeding Matches</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="shelterEnable"> <span>Enable All Shelter QoL Features</span></label><ul><li><label><input type="checkbox" class="qolhubsetting" data-key="shelterFeatureEnables.search"> <span>Advanced Searching</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="shelterFeatureEnables.sort"> <span>Advanced Sorting</span></label></li></ul></li><li><label><input type="checkbox" class="qolhubsetting" data-key="fishingEnable"> <span>Fishing Multi-Select Controls</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="publicFieldEnable"> <span>Enable All Public Fields QoL Features</span></label><ul><li><label><input type="checkbox" class="qolhubsetting" data-key="publicFieldFeatureEnables.search"> <span>Advanced Searching</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="publicFieldFeatureEnables.sort"> <span>Advanced Sorting</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="publicFieldFeatureEnables.tooltip"> <span>Tooltips Enable/Disable</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="publicFieldFeatureEnables.pkmnlinks"> <span>Pokemon Link List</span></label></li></ul></li><li><label><input type="checkbox" class="qolhubsetting" data-key="privateFieldEnable"> <span>Enable All Private Fields QoL Features</span></label><ul><li><label><input type="checkbox" class="qolhubsetting" data-key="privateFieldFeatureEnables.search"> <span>Advanced Searching</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="privateFieldFeatureEnables.release"> <span>Multi-Select Controls (Move & Release)</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="privateFieldFeatureEnables.tooltip"> <span>Tooltips Enable/Disable</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="privateFieldFeatureEnables.pkmnlinks"> <span>Pokemon Link List</span></label></li></ul></li><li><label><input type="checkbox" class="qolhubsetting" data-key="partyMod"> <span>Party click mod</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="easyEvolve"> <span>Easy evolving</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="labNotifier"> <span>Lab Notifier</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="dexFilterEnable"> <span>Multiple Types Filtering</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="condenseWishforge"> <span>Smaller Crafted Badges List</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="interactionsEnable"> <span>Interactions page (sent multi-link)</span></label></li><li><label><input type="checkbox" class="qolhubsetting" data-key="summaryEnable"> <span>Summary page (pkmnpanel code)</span></label></li></ul><span><b>Note</b>: Please refresh the page to see any changes made to these settings take effect.</span></td></tr><tr><td><h3 class="qolHubHead">Change log</h3></td></tr><tr><td class="qolChangeLog"><ul class="qolChangeLogList"><li class="expandlist"><span>Change log was removed as of April 2021. Visit <a href="https://github.com/tarashia/PokeFarmQoL">GitHub</a> for the latest list of features</span></li></ul></td></tr><tr><td colspan="2" class="qolDexUpdate"><h3 class="qolHubHead">Pokedex Settings</h3></td></tr><tr id="qolDexUpdateRow"><td colspan="2" class="qolAllSettings"><span>Notice that you can't find the newly added Eggs or Pokemon in shelter? You may have to update your pokedex. Please visit the Dex page, and the Userscript will update itself with the newest pokemon. Then, in order to use the update, refresh the page where you are using the script's search features.</span><br><span>Date last updated:<span class="qolDate"></span></span></td></tr><tr id="qolDexClearRow"><td colspan="2"><input type="button" value="Clear Cached Dex" id="clearCachedDex"></td></tr><tr><td colspan="2" class="qolAllSettings"><h3 class="qolHubHead">Css Settings</h3></td></tr><tr><td colspan="2"><span>Add your custom CSS! If you have an error in your CSS you won't get notified, so read your code carefully. Still doesn't work? Try: '!important'. The custom CSS is being loaded after the page loads, so it's possible that there will be a short delay before your CSS changes apply.<br>Now supports <a href="https://lesscss.org/">LESS formatting!</a></span></td></tr><tr><td colspan="2" class="qolAllSettings"><div class="textareahub"><textarea id="qolcustomcss" rows="15" class="qolhubsetting" data-key="customCss"></textarea></div></td></tr><tr><td colspan="2" class="qolAllSettings"><h3 class="qolHubHead">Debugging Corner</h3></td></tr><tr id="qolDebuggingCornerRow"><td colspan="2" class="qolAllSettings"><span>Use these controls to reset the settings for a particular page back to its defaults</span><br><span><b>Page Select</b></span><!-- Option values correspond to keys in the PAGES object in the main script --> <select name="Page Select" class="qolHubResetSettingsSelect" data-key="resetPageSettings"><option value="None">None</option><option value="Daycare">Daycare</option><option value="Farm">Farm</option><option value="Fishing">Fishing</option><option value="Lab">Lab</option><option value="Multiuser">Multiuser</option><option value="PrivateFields">Private Fields</option><option value="PublicFields">Public Fields</option><option value="Shelter">Shelter</option></select> <input type="button" value="Reset Page Settings" id="resetPageSettings"></td></tr></tbody></table></div></div><p class="closeHub">Close</p></div></div></div></div>`}publicFieldTooltipModHTML(){return`<div id="tooltipenable"><button type="button" class="collapsible"><b>Tooltip Settings</b></button><div class="collapsible_content"><span>The "Enable tooltip" settings force the tooltip on or off. To revert back to Pokefarm's default tooltip settings, uncheck "Enable QoL Tooltip Changes" and refresh the page.</span><hr><table><tr><td><label><input type="checkbox" class="qolsetting tooltipsetting" data-key="tooltipEnableMods"> Enable QoL Tooltip Settings</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting tooltipsetting" data-key="tooltipNoBerry"> Hide tooltip<br>(No berry selected)</label></td><td><label><input type="checkbox" class="qolsetting tooltipsetting" data-key="tooltipBerry"> Hide tooltip<br>(Berry selected)</label></td></tr></table></div></div>`}privateFieldTooltipModHTML(){return`<div id="tooltipenable"><button type="button" class="collapsible"><b>Tooltip Settings</b></button><div class="collapsible_content"><span>The "Enable tooltip" settings force the tooltip on or off. To revert back to Pokefarm's default tooltip settings, uncheck "Enable QoL Tooltip Changes" and refresh the page.</span><hr><table><tr><td><label><input type="checkbox" class="qolsetting tooltipsetting" data-key="tooltipEnableMods"> Enable QoL Tooltip Settings</label></td></tr><tr><td><label><input type="checkbox" class="qolsetting tooltipsetting" data-key="tooltipNoBerry"> Hide tooltip</label></td></tr></table></div></div>`}}class SharedFieldsLib{static addPkmnLinksPopup(){var d=document.getElementsByTagName("body")[0],e=document.getElementsByTagName("h1")[0],u=document.getElementById("core"),t=document.createElement("button");e.appendChild(t),t.innerText="View links",t.style="vertical-align:middle;margin-left: 10px;",t.onclick=function(){for(var e='<h3>Pokemon links</h3><table style="border-collapse:collapse;">',t=document.getElementsByClassName("fieldmon"),i=0;i<t.length;i++){i%4==0&&(e+="<tr>");var s=t[i].getAttribute("data-id"),o=t[i].children[1];e+='<td style="padding:5px;border:1px solid;"><img style="vertical-align:middle;" src="'+o.getAttribute("src")+'"> <a href="/summary/'+s+'">'+o.getAttribute("alt")+"</a></td>",i%4==3&&(e+="</tr>")}e+="</table>";var a=document.createElement("div"),r=document.createElement("div"),l=document.createElement("div"),n=document.createElement("div"),c=document.createElement("button");c.setAttribute("type","button"),c.style="float:right;margin:8px;",c.innerText="Close",c.onclick=function(){a.remove(),u.classList.remove("scrolllock")},a.classList.add("dialog"),a.appendChild(r),r.appendChild(l),l.appendChild(n),n.innerHTML=e,n.appendChild(c),d.prepend(a),u.classList.add("scrolllock")}}}class ShelterPage extends Page{constructor(e,t,i,s,o){super(e,t,i,s.SHELTER_PAGE_SETTINGS_KEY,{findCustom:"",findType:"",findTypeEgg:!0,findTypePokemon:!1,findNewEgg:!0,findNewPokemon:!0,findShiny:!0,findAlbino:!0,findMelanistic:!0,findPrehistoric:!0,findDelta:!0,findMega:!0,findStarter:!0,findCustomSprite:!0,findLegendary:!1,findMale:!0,findFemale:!0,findNoGender:!0,customEgg:!0,customPokemon:!0,customPng:!1,shelterGrid:!0},"shelter",o),this.customArray=[],this.typeArray=[];const a=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){a.customSearch(s)})}),this.selectNextMatchKey=78,this.currentlySelectedMatch=void 0}setupHTML(e){var t;this.globalSettings.shelterFeatureEnables.search&&(this.jQuery(".tabbed_interface.horizontal>div").removeClass("tab-active"),this.jQuery(".tabbed_interface.horizontal>ul>li").removeClass("tab-active"),document.querySelector(".tabbed_interface.horizontal>ul").insertAdjacentHTML("afterbegin",'<li class="tab-active"><label>Search</label></li>'),document.querySelector(".tabbed_interface.horizontal>ul").insertAdjacentHTML("afterend",e.TEMPLATES.shelterOptionsHTML),this.jQuery("#shelteroptionsqol").addClass("tab-active"),document.querySelector("#sheltercommands").insertAdjacentHTML("beforebegin",'<div id="sheltersuccess"></div>'),t=this.helpers.textSearchDiv("numberDiv","findCustom","removeShelterTextfield","customArray"),e=this.helpers.selectSearchDiv("typeNumber","types","findType",e.TYPE_OPTIONS,"removeShelterTypeList","fieldTypes","typeArray"),this.customArray=this.settings.findCustom.split(","),this.typeArray=this.settings.findType.split(","),this.helpers.setupFieldArrayHTML(this.jQuery,this.customArray,"searchkeys",t,"numberDiv"),this.helpers.setupFieldArrayHTML(this.jQuery,this.typeArray,"shelterTypes",e,"typeNumber"),this.jQuery("[data-shelter=reload]").addClass("customSearchOnClick"),this.jQuery("[data-shelter=whiteflute]").addClass("customSearchOnClick"),this.jQuery("[data-shelter=blackflute]").addClass("customSearchOnClick")),this.globalSettings.shelterFeatureEnables.sort&&(document.querySelector(".tabbed_interface.horizontal>ul").insertAdjacentHTML("afterbegin",'<li class=""><label>Sort</label></li>'),document.querySelector(".tabbed_interface.horizontal>ul").insertAdjacentHTML("afterend",'<div id="qolsheltersort"><label><input type="checkbox" class="qolsetting" data-key="shelterGrid"/><span>Sort by Grid</span></label>'))}setupCSS(){var e;(this.globalSettings.shelterFeatureEnables.search||this.globalSettings.shelterFeatureEnables.sort)&&(e=this.jQuery("#sheltercommands").css("background-color"),this.jQuery("#sheltersuccess").css("background-color",e),this.jQuery(".tooltiptext").css("background-color",this.jQuery(".tooltip_content").eq(0).css("background-color")),e=this.jQuery("#shelterpage>.panel").eq(0).css("border"),this.jQuery(".tooltiptext").css("border",""+e))}setupObserver(){this.observer.observe(document.querySelector("#shelterarea"),{childList:!0})}setupHandlers(e){const i=this;this.jQuery(document).on("change","#shelteroptionsqol input",function(){i.loadSettings(),i.customSearch(e),i.saveSettings()}),this.jQuery(document).on("change",".qolsetting",function(){i.loadSettings(),i.customSearch(e),i.saveSettings()}),this.jQuery(document).on("input",".qolsetting",function(){i.settingsChange(this.getAttribute("data-key"),i.jQuery(this).val(),i.jQuery(this).parent().parent().attr("class"),i.jQuery(this).parent().attr("class"),this.hasAttribute("array-name")?this.getAttribute("array-name"):""),i.customSearch(e),i.saveSettings()}),this.jQuery(".customSearchOnClick").on("click",function(){i.loadSettings(),i.customSearch(e),i.saveSettings()}),this.jQuery(document).on("click","#addShelterTextfield",function(){i.addTextField(),i.saveSettings()}),this.jQuery(document).on("click","#removeShelterTextfield",function(){i.removeTextField(this,i.jQuery(this).parent().find("input").val()),i.saveSettings(),i.customSearch(e)}),this.jQuery(document).on("click","#addShelterTypeList",function(){i.addTypeList(e),i.customSearch(e)}),this.jQuery(document).on("click","#removeShelterTypeList",function(){i.removeTypeList(this,i.jQuery(this).parent().find("select").val()),i.saveSettings(),i.customSearch(e)}),this.jQuery(window).on("keyup.qol_shelter_shortcuts",function(e){if(0==i.jQuery(e.target).closest("input, textarea").length&&e.keyCode===i.selectNextMatchKey){e=i.jQuery("#shelterarea").find(".pokemon").find(".shelterfoundme").length;if(i.jQuery("#shelterarea").find(".pokemon").removeClass("lock").removeClass("dismiss"),i.currentlySelectedMatch=i.currentlySelectedMatch+1||0,e){e=1==e?0:(i.currentlySelectedMatch+1)%e-1;const t=i.jQuery("#shelterarea").find(".pokemon").find(".shelterfoundme").parent().eq(e);t.parent().addClass("selected"),t.addClass("tooltip_trigger").addClass("lock").removeClass("dismiss"),t.next().find("[data-shelter=adopt]").focus()}else i.currentlySelectedMatch=void 0}})}addTextField(){var e=this.helpers.textSearchDiv("numberDiv","findCustom","removeShelterTextfield","customArray"),t=this.jQuery("#searchkeys>div").length;this.jQuery("#searchkeys").append(e),this.jQuery(".numberDiv").removeClass("numberDiv").addClass(""+t)}removeTextField(e,t){this.customArray=this.jQuery.grep(this.customArray,function(e){return e!=t}),this.settings.findCustom=this.customArray.toString(),this.jQuery(e).parent().remove();let i;for(i=0;i<this.jQuery("#searchkeys>div").length;i++){var s=i+1;this.jQuery("."+i).next().removeClass().addClass(""+s)}}addTypeList(e){var e=this.helpers.selectSearchDiv("typeNumber","types","findType",e.TYPE_OPTIONS,"removeShelterTypeList","fieldTypes","typeArray"),t=this.jQuery("#shelterTypes>div").length;this.jQuery("#shelterTypes").append(e),this.jQuery(".typeNumber").removeClass("typeNumber").addClass(""+t)}removeTypeList(e,t){this.typeArray=this.jQuery.grep(this.typeArray,function(e){return e!=t}),this.settings.findType=this.typeArray.toString(),this.jQuery(e).parent().remove();let i;for(i=0;i<this.jQuery("#shelterTypes>div").length;i++){var s=i+1;this.jQuery("."+i).next().removeClass().addClass(""+s)}}insertShelterFoundDiv(e,t,i){document.querySelector("#sheltersuccess").insertAdjacentHTML("beforeend",'<div id="shelterfound">'+t+(1!==e?"s":"")+" found "+i+"</div>")}insertShelterTypeFoundDiv(e,t,i,s){let o="";o="egg"===i?i+(1!==e?"s":""):i,document.querySelector("#sheltersuccess").insertAdjacentHTML("beforeend",'<div id="shelterfound">'+e+" "+t+" type "+o+" found!"+(0<s.length?"("+s.toString()+")":"")+"</div>")}searchForImgTitle(e,t){const i=e.SHELTER_SEARCH_DATA;e=i.indexOf(t),t=i[e+1];const s=this.jQuery('img[title*="'+t+'"]');var o,t=this.helpers.getPokemonImageClass();s.length&&(o=i[e+2],o=s.length+" "+o,e=i[e+3],t=s.parent().prev().children("img."+t),this.jQuery(t).addClass("shelterfoundme"),this.insertShelterFoundDiv(s.length,o,e))}searchForTooltipText(e,t){var i=e.SHELTER_SEARCH_LISTS[t];const s=e.SHELTER_SEARCH_DATA;var o=s.indexOf(t);for(let e=0;e<i.length;e++){var a=i[e];const l=this.jQuery(`div.pokemon+div.tooltip_content:contains('${a}')`);if(l.length){var a=s[o+2],a=l.length+" "+a,r=s[o+3];const n=l.prev().children("img.big");n.addClass("shelterfoundme"),this.insertShelterFoundDiv(l.length,a,r)}}}searchForTypes(i,s){const n=this,c=i.DEX_DATA;var o=this.helpers.getPokemonImageClass();for(let t=0;t<s.length;t++){const u=s[t];var a=i.SHELTER_TYPE_TABLE[i.SHELTER_TYPE_TABLE.indexOf(u)+2];let l=[],e=void 0;if(!0===this.settings.findTypeEgg){const h=[];l=[],(e=this.jQuery('#shelterarea>.tooltip_content:contains("Egg")')).each((e,t)=>{const i=n.jQuery(t).text(),s=i.replace(n.jQuery(t).children().text(),"").trim(),o=s.replace("Egg","").trim();var a=o.replace(/é/g,"\\u00e9").replace(/í/g,"\\u00ed").replace(/ñ/g,"\\u00f1"),a=c.indexOf('"'+a+'"'),r=c[a+1],a=c[a+2];r!==u&&a!==u||(l.push(o),h.push(t))});for(let e=0;e<h.length;e++){const p=this.jQuery(h[e]);var r=p.prev().children("img."+o);this.jQuery(r).addClass("shelterfoundme")}this.insertShelterTypeFoundDiv(l.length,a,"egg",l)}if(!0===this.settings.findTypePokemon){l=[],(e=this.jQuery("#shelterarea>.tooltip_content").not(':contains("Egg")')).each((e,t)=>{const i=n.jQuery(t).text(),s=i.replace(n.jQuery(t).children().text(),"").trim().replace(/\n/g,""),o=s.replace(/\(Lv\..*/g,"").trim();var t=o.replace(/é/g,"\\u00e9").replace(/í/g,"\\u00ed").replace(/ñ/g,"\\u00f1"),t=c.indexOf('"'+t+'"'),a=c[t+1],t=c[t+2];a!==u&&t!==u||l.push(o)});for(let e=0;e<l.length;e++){var d=l[e];const g=this.jQuery(`#shelterarea .tooltip_content:containsIN("${d} (")`);d=g.prev().children("img."+o);this.jQuery(d).addClass("shelterfoundme")}this.insertShelterTypeFoundDiv(l.length,a,"Pokemon",l)}}}customSearch(t){const e=this,i=t.SHELTER_SEARCH_DATA;var s,o=this.helpers.getPokemonImageClass();if(this.globalSettings.shelterFeatureEnables.sort&&(this.jQuery("#shelterarea").removeClass("qolshelterareagrid"),this.jQuery(".mq2 #shelterarea").removeClass("qolshelterareagridmq2"),this.jQuery("#shelterarea .tooltip_content").removeClass("qoltooltipgrid"),this.jQuery("#shelterpage #shelter #shelterarea > .pokemon").removeClass("qolpokemongrid"),this.jQuery("#sheltergridthingy").remove(),!0===this.settings.shelterGrid&&(this.jQuery("#shelterarea").addClass("qolshelterareagrid"),this.jQuery(".mq2 #shelterarea").addClass("qolshelterareagridmq2"),this.jQuery("#shelterarea .tooltip_content").addClass("qoltooltipgrid"),this.jQuery("#shelterpage #shelter #shelterarea > .pokemon").addClass("qolpokemongrid"),this.jQuery("head").append('<style id="sheltergridthingy">#shelterarea:before{display:none !important;}</style>'))),this.globalSettings.shelterFeatureEnables.search){if(document.querySelector("#sheltersuccess").innerHTML="",this.jQuery("#shelterarea>div>img").removeClass("shelterfoundme"),!0===this.settings.findShiny&&this.searchForImgTitle(t,"findShiny"),!0===this.settings.findAlbino&&this.searchForImgTitle(t,"findAlbino"),!0===this.settings.findMelanistic&&this.searchForImgTitle(t,"findMelanistic"),!0===this.settings.findPrehistoric&&this.searchForImgTitle(t,"findPrehistoric"),!0===this.settings.findDelta&&this.searchForImgTitle(t,"findDelta"),!0===this.settings.findMega&&this.searchForImgTitle(t,"findMega"),!0===this.settings.findStarter&&this.searchForImgTitle(t,"findStarter"),!0===this.settings.findCustomSprite&&this.searchForImgTitle(t,"findCustomSprite"),!0===this.settings.findLegendary&&this.searchForTooltipText(t,"findLegendary"),!0===this.settings.findNewPokemon){var a="findNewPokemon",r=i[i.indexOf(a)+1],r=this.jQuery("#shelterarea .tooltip_content:contains("+r+")");if(r.length){var l=i[i.indexOf(a)+2],a=i[i.indexOf(a)+3],l=r.length+" "+l;const T=r;var n=T.prev().children("img."+o);this.jQuery(n).addClass("shelterfoundme"),this.insertShelterFoundDiv(r.length,l,a)}}if(!0===this.settings.findNewEgg){n="findNewEgg";const Q=i[i.indexOf(n)+1];r=this.jQuery("#shelterarea .tooltip_content:contains("+Q+")").filter(function(){return e.jQuery(this).text().startsWith(Q+" ")});if(r.length){l=i[i.indexOf(n)+2],a=i[i.indexOf(n)+3];if(1<=r.length){const E=r;n=E.prev().children("img."+o);this.jQuery(n).addClass("shelterfoundme")}this.insertShelterFoundDiv(r.length,l,a)}}const k=[];for(const x in this.settings)!0!==this.settings[x]||"findMale"!==x&&"findFemale"!==x&&"findNoGender"!==x||(s=t.SHELTER_SEARCH_DATA[t.SHELTER_SEARCH_DATA.indexOf(x)+1],k.push(s));var c=this.customArray.length,d='<img src="//pfq-static.com/img/pkmn/heart_1.png/t=1427152952">';for(let e=0;e<c;e++){var u,h,p=this.customArray[e];if(""!=p){if(!0===this.settings.customPokemon){const j=[];if(-1<k.indexOf("[M]")&&j.push("[M]"),-1<k.indexOf("[F]")&&j.push("[F]"),-1<k.indexOf("[N]")&&j.push("[N]"),0<j.length)for(let e=0;e<j.length;e++){var g=j[e],y=this.jQuery("#shelterarea .tooltip_content:containsIN("+p+") img[title*='"+g+"']");if(y.length){var m=p,b=t.SHELTER_SEARCH_DATA[t.SHELTER_SEARCH_DATA.indexOf(g)+1],g=t.SHELTER_SEARCH_DATA[t.SHELTER_SEARCH_DATA.indexOf(g)+2],b=y.length+" "+b+g+" "+m;const A=y;g=A.parent().prev().children("img."+o);this.jQuery(g).addClass("shelterfoundme"),this.insertShelterFoundDiv(y.length,b,d)}}else if(0===k.length){var f=this.jQuery("#shelterarea .tooltip_content:containsIN("+p+'):not(:containsIN("Egg"))');if(f.length){var S=f.length+" "+p;const P=f;var v=P.parent().prev().children("img."+o);this.jQuery(v).addClass("shelterfoundme"),this.insertShelterFoundDiv(f.length,S,d)}}}if(!0===this.settings.customEgg){v=this.jQuery("#shelterarea .tooltip_content:containsIN("+p+'):contains("Egg")');if(v.length){f=v.length+" "+p;const C=v;S=C.prev().children("img."+o);this.jQuery(S).addClass("shelterfoundme"),this.insertShelterFoundDiv(v.length,f,'<img src="//pfq-static.com/img/pkmn/egg.png/t=1451852195">')}}if(!0===this.settings.customPng){const L=this.jQuery(`#shelterarea img.${o}[src*="${p}"]`);L.length&&(u=L.parent().next().text().split("(")[0],u=L.length+" "+u+" (Custom img search)",h=L,this.jQuery(h).addClass("shelterfoundme"),this.insertShelterFoundDiv(L.length,u,d))}}}n=this.typeArray.filter(e=>""!=e);0<n.length&&e.searchForTypes(t,n)}}}class SummaryPage extends Page{constructor(e,t,i,s){super(e,t,i,s.SUMMARY_PAGE_SETTINGS_KEY,{},"summary")}setupHTML(){var e=this.jQuery(".party div")[0].getAttribute("data-pid");const t=this.jQuery("#displaycodelist").parent();t.prepend('<p>Display an interactive panel in Pokefarm\'s forums!</p><p class="displaycode" style="user-select:all";>[pkmnpanel='+e+']</p><div style="border-bottom: 1px solid;margin-top: 1rem;"></div>')}}class UserSettings{constructor(){this.customCss="",this.enableDaycare=!0,this.shelterEnable=!0,this.fishingEnable=!0,this.publicFieldEnable=!0,this.privateFieldEnable=!0,this.partyMod=!0,this.easyEvolve=!0,this.labNotifier=!0,this.dexFilterEnable=!0,this.condenseWishforge=!0,this.interactionsEnable=!0,this.summaryEnable=!0,this.shelterFeatureEnables={search:!0,sort:!0},this.publicFieldFeatureEnables={search:!0,sort:!0,release:!0,tooltip:!0,pkmnlinks:!0},this.privateFieldFeatureEnables={search:!0,release:!0,tooltip:!0,pkmnlinks:!0},this.LINKED_SETTINGS=[{manager:"shelterEnable",managed:"shelterFeatureEnables"},{manager:"publicFieldEnable",managed:"publicFieldFeatureEnables"},{manager:"privateFieldEnable",managed:"privateFieldFeatureEnables"}]}load(e){try{var t,i=Object.keys(this).length,s=Object.keys(e).length;s<i&&(t=this.jQuery.extend(!0,this,e),this.copyFields(t))}catch(e){}e!=this&&this.copyFields(e)}copyFields(e){const a=(e,t,i)=>{if("object"==typeof i)for(var[s,o]of Object.entries(i))a(e[t],s,o);else e[t]=i};for(var[t,i]of Object.entries(e))a(this,t,i)}}class WishforgePage extends Page{constructor(e,t,i,s){super(e,t,i,s.WISHFORGE_PAGE_SETTINGS_KEY,{},"forge");const o=this;this.observer=new MutationObserver(function(e){e.forEach(function(e){"childList"===e.type&&e.addedNodes.length&&o.setupHTML(s)})})}setupHTML(e){var t=this,i=t.helpers.detectPageSize(t.jQuery,"mq2");let s="<th>Type</th> <th>Level</th> <th>Gem Progress</th> <th>Item</th> <th>Upgrade</th> <th>Notify</th>",o='<col style="width: 10%;"><col style="width: 20%;"><col style="width: 20%;"><col style="width: 20%;"><col style="width: 10%;"><col style="width: 10%;">';i&&(s="<th>Type</th> <th>Gem Progress</th> <th>Item</th>",o='<col style="width: 34%;"><col style="width: 33%;"><col style="width: 33%;">');var a=e.TYPE_LIST;let r={};for(let e=0;e<a.length;e++)r[a[e]]=i?`<tr id="${a[e]}-top" class="qolBadgesTop"> <td>${a[e]}</td> <td></td> <td></td> </tr>`+`<tr id="${a[e]}-bot" class="qolBadgesBot"> <td></td> <td></td> <td></td> </tr>`:`<tr id=${a[e]}> <td>${a[e]}</td> <td></td> <td></td> <td></td> <td></td> <td></td> </tr>`;let l='<table style="width: 100%" class="qolBadges">'+`<colgroup> ${o} </colgroup>`+`<tr id="head"> ${s} </tr>`;for(let e=0;e<a.length;e++)l+=r[a[e]];l+="</table>";const n=t.jQuery("#badges").next().find("ul.badgelist");n.prepend(l);let c=2,d=3,u=4,h=5,p=6,g="",y="";i&&(c=1,d=2,u=3,h=2,p=3,g="-top",y="-bot");for(let e=0;e<a.length;e++){var m=a[e],b=e+1;const S=t.jQuery(n.children()[b]),v=t.jQuery(t.jQuery(S.children()[0]).children()[0]),k=(v.appendTo(`tr#${m}${y}>td:nth-child(${c})`),t.jQuery(S.children()[0])),T=(k.text(" "+k.text().replace(` ${m} Badge`,"")),k.css("display","inline-block"),k.appendTo(`tr#${m}${y}>td:nth-child(${c})`),t.jQuery(S.children()[0]));if(T.appendTo(`tr#${m}${g}>td:nth-child(${d})`),t.jQuery(S.children()[0]).hasClass("itemtooltip")){const j=t.jQuery(S.children()[0]);j.appendTo(`tr#${m}${g}>td:nth-child(${d})`)}const Q=t.jQuery(S.children()[0]);if(Q.appendTo(`tr#${m}${g}>td:nth-child(${u})`),t.jQuery(S.children()[0]).hasClass("itemtooltip")){const A=t.jQuery(S.children()[0]);A.appendTo(`tr#${m}${g}>td:nth-child(${u})`)}const E=t.jQuery(S.children()[0]),x=(E.appendTo(`tr#${m}${y}>td:nth-child(${p})`),t.jQuery(S.children()[0]));x.appendTo(`tr#${m}${y}>td:nth-child(${h})`)}var f=n.children();for(let e=a.length;1<=e;e--)t.jQuery(f[e]).remove()}setupObserver(){var e=this.jQuery("#badges").next("div")[0];this.observer.observe(e,{childList:!0})}}$(function(){"undefined"!=typeof module?module.exports.pfqol=PFQoL:new PFQoL(jQuery)});